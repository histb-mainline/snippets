<?xml version="1.0"?>

<Chip name="Hi3716MV300">
	<IndentificationList>
		<Indentification address="0x101e0ee8" value="0x16"/>
		<Indentification address="0x101e0eec" value="0x37"/>
		<Indentification address="0x101e0ee0" value="0x0"/>
		<Indentification address="0x101e0ee4" value="0x03"/>
	</IndentificationList>
	<ModuleList>
		<ModuleGroup name="GPIO" i2cSupport="false">
			<Module baseAddress="0x101E6000"/>
			<Module baseAddress="0x101E7000"/>
			<Module baseAddress="0x101E8000"/>
			<Module baseAddress="0x101E8000"/>
			<Module baseAddress="0x101E9000"/>
			<Module baseAddress="0x101E4000"/>
			<Module baseAddress="0x101EA000"/>
			<Module baseAddress="0x101EC000"/>
			<Module baseAddress="0x101EE000"/>
			<Module baseAddress="0x101EF000"/>
			<RegisterGroup name="GPIO_DATA" description="GPIO_DATA is a GPIO data register used to cache the input/output data.&lt;br&gt;When a bit of GPIO_DIR is set to output, the value written to the GPIO_DATA register willbe output to the corresponding pin (note that the pin multiplexing is properly configured). Ifthe bit is set to input, the value of the corresponding input pin will be read.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;When a bit of GPIO_DIR is set to input, the validly read result will return the value of the pin.&lt;br&gt;&lt;/li&gt;&lt;li&gt;When the bit is set to output, the read value should be the same as the written value.&lt;br&gt;With the PADDR[9:2], the GPIO_DATA register masks the read/write operation on theregister bits. This register corresponds to 256 addresses. The PADDR[9:2] bits correspond toGPIO_DATA[7:0] bits respectively. If a specific bit is high, the read/write operation isallowed on the corresponding bit. If a specific bit is low, the read/write operation is notallowed. For example:&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;If the address is 0x3FC (0b11_1111_1100), operations on the eight bits ofGPIO_DATA[7:0] are all valid.&lt;br&gt;&lt;/li&gt;&lt;li&gt;If the address is 0x200 (0b10_0000_0000), only the operation on GPIO_DATA[7] isvalid.&lt;/li&gt;&lt;/ul&gt;" value="0x00" startoffset="0x000" endoffset="0x3FC">
				<Member name="gpio_data" description="When the GPIO pins are set to the input pins, these pins are used to input data. When the GPIO pins are set to the output pins, these pins are used to output data. Each bit can be controlled separately. This register works together with the bits of GPIO_DIR." range="7:0" property="RW"/>
				<Register offset="0x0"/>
				<Register offset="0x4"/>
				<Register offset="0x8"/>
				<Register offset="0xc"/>
				<Register offset="0x10"/>
				<Register offset="0x14"/>
				<Register offset="0x18"/>
				<Register offset="0x1c"/>
				<Register offset="0x20"/>
				<Register offset="0x24"/>
				<Register offset="0x28"/>
				<Register offset="0x2c"/>
				<Register offset="0x30"/>
				<Register offset="0x34"/>
				<Register offset="0x38"/>
				<Register offset="0x3c"/>
				<Register offset="0x40"/>
				<Register offset="0x44"/>
				<Register offset="0x48"/>
				<Register offset="0x4c"/>
				<Register offset="0x50"/>
				<Register offset="0x54"/>
				<Register offset="0x58"/>
				<Register offset="0x5c"/>
				<Register offset="0x60"/>
				<Register offset="0x64"/>
				<Register offset="0x68"/>
				<Register offset="0x6c"/>
				<Register offset="0x70"/>
				<Register offset="0x74"/>
				<Register offset="0x78"/>
				<Register offset="0x7c"/>
				<Register offset="0x80"/>
				<Register offset="0x84"/>
				<Register offset="0x88"/>
				<Register offset="0x8c"/>
				<Register offset="0x90"/>
				<Register offset="0x94"/>
				<Register offset="0x98"/>
				<Register offset="0x9c"/>
				<Register offset="0xa0"/>
				<Register offset="0xa4"/>
				<Register offset="0xa8"/>
				<Register offset="0xac"/>
				<Register offset="0xb0"/>
				<Register offset="0xb4"/>
				<Register offset="0xb8"/>
				<Register offset="0xbc"/>
				<Register offset="0xc0"/>
				<Register offset="0xc4"/>
				<Register offset="0xc8"/>
				<Register offset="0xcc"/>
				<Register offset="0xd0"/>
				<Register offset="0xd4"/>
				<Register offset="0xd8"/>
				<Register offset="0xdc"/>
				<Register offset="0xe0"/>
				<Register offset="0xe4"/>
				<Register offset="0xe8"/>
				<Register offset="0xec"/>
				<Register offset="0xf0"/>
				<Register offset="0xf4"/>
				<Register offset="0xf8"/>
				<Register offset="0xfc"/>
				<Register offset="0x100"/>
				<Register offset="0x104"/>
				<Register offset="0x108"/>
				<Register offset="0x10c"/>
				<Register offset="0x110"/>
				<Register offset="0x114"/>
				<Register offset="0x118"/>
				<Register offset="0x11c"/>
				<Register offset="0x120"/>
				<Register offset="0x124"/>
				<Register offset="0x128"/>
				<Register offset="0x12c"/>
				<Register offset="0x130"/>
				<Register offset="0x134"/>
				<Register offset="0x138"/>
				<Register offset="0x13c"/>
				<Register offset="0x140"/>
				<Register offset="0x144"/>
				<Register offset="0x148"/>
				<Register offset="0x14c"/>
				<Register offset="0x150"/>
				<Register offset="0x154"/>
				<Register offset="0x158"/>
				<Register offset="0x15c"/>
				<Register offset="0x160"/>
				<Register offset="0x164"/>
				<Register offset="0x168"/>
				<Register offset="0x16c"/>
				<Register offset="0x170"/>
				<Register offset="0x174"/>
				<Register offset="0x178"/>
				<Register offset="0x17c"/>
				<Register offset="0x180"/>
				<Register offset="0x184"/>
				<Register offset="0x188"/>
				<Register offset="0x18c"/>
				<Register offset="0x190"/>
				<Register offset="0x194"/>
				<Register offset="0x198"/>
				<Register offset="0x19c"/>
				<Register offset="0x1a0"/>
				<Register offset="0x1a4"/>
				<Register offset="0x1a8"/>
				<Register offset="0x1ac"/>
				<Register offset="0x1b0"/>
				<Register offset="0x1b4"/>
				<Register offset="0x1b8"/>
				<Register offset="0x1bc"/>
				<Register offset="0x1c0"/>
				<Register offset="0x1c4"/>
				<Register offset="0x1c8"/>
				<Register offset="0x1cc"/>
				<Register offset="0x1d0"/>
				<Register offset="0x1d4"/>
				<Register offset="0x1d8"/>
				<Register offset="0x1dc"/>
				<Register offset="0x1e0"/>
				<Register offset="0x1e4"/>
				<Register offset="0x1e8"/>
				<Register offset="0x1ec"/>
				<Register offset="0x1f0"/>
				<Register offset="0x1f4"/>
				<Register offset="0x1f8"/>
				<Register offset="0x1fc"/>
				<Register offset="0x200"/>
				<Register offset="0x204"/>
				<Register offset="0x208"/>
				<Register offset="0x20c"/>
				<Register offset="0x210"/>
				<Register offset="0x214"/>
				<Register offset="0x218"/>
				<Register offset="0x21c"/>
				<Register offset="0x220"/>
				<Register offset="0x224"/>
				<Register offset="0x228"/>
				<Register offset="0x22c"/>
				<Register offset="0x230"/>
				<Register offset="0x234"/>
				<Register offset="0x238"/>
				<Register offset="0x23c"/>
				<Register offset="0x240"/>
				<Register offset="0x244"/>
				<Register offset="0x248"/>
				<Register offset="0x24c"/>
				<Register offset="0x250"/>
				<Register offset="0x254"/>
				<Register offset="0x258"/>
				<Register offset="0x25c"/>
				<Register offset="0x260"/>
				<Register offset="0x264"/>
				<Register offset="0x268"/>
				<Register offset="0x26c"/>
				<Register offset="0x270"/>
				<Register offset="0x274"/>
				<Register offset="0x278"/>
				<Register offset="0x27c"/>
				<Register offset="0x280"/>
				<Register offset="0x284"/>
				<Register offset="0x288"/>
				<Register offset="0x28c"/>
				<Register offset="0x290"/>
				<Register offset="0x294"/>
				<Register offset="0x298"/>
				<Register offset="0x29c"/>
				<Register offset="0x2a0"/>
				<Register offset="0x2a4"/>
				<Register offset="0x2a8"/>
				<Register offset="0x2ac"/>
				<Register offset="0x2b0"/>
				<Register offset="0x2b4"/>
				<Register offset="0x2b8"/>
				<Register offset="0x2bc"/>
				<Register offset="0x2c0"/>
				<Register offset="0x2c4"/>
				<Register offset="0x2c8"/>
				<Register offset="0x2cc"/>
				<Register offset="0x2d0"/>
				<Register offset="0x2d4"/>
				<Register offset="0x2d8"/>
				<Register offset="0x2dc"/>
				<Register offset="0x2e0"/>
				<Register offset="0x2e4"/>
				<Register offset="0x2e8"/>
				<Register offset="0x2ec"/>
				<Register offset="0x2f0"/>
				<Register offset="0x2f4"/>
				<Register offset="0x2f8"/>
				<Register offset="0x2fc"/>
				<Register offset="0x300"/>
				<Register offset="0x304"/>
				<Register offset="0x308"/>
				<Register offset="0x30c"/>
				<Register offset="0x310"/>
				<Register offset="0x314"/>
				<Register offset="0x318"/>
				<Register offset="0x31c"/>
				<Register offset="0x320"/>
				<Register offset="0x324"/>
				<Register offset="0x328"/>
				<Register offset="0x32c"/>
				<Register offset="0x330"/>
				<Register offset="0x334"/>
				<Register offset="0x338"/>
				<Register offset="0x33c"/>
				<Register offset="0x340"/>
				<Register offset="0x344"/>
				<Register offset="0x348"/>
				<Register offset="0x34c"/>
				<Register offset="0x350"/>
				<Register offset="0x354"/>
				<Register offset="0x358"/>
				<Register offset="0x35c"/>
				<Register offset="0x360"/>
				<Register offset="0x364"/>
				<Register offset="0x368"/>
				<Register offset="0x36c"/>
				<Register offset="0x370"/>
				<Register offset="0x374"/>
				<Register offset="0x378"/>
				<Register offset="0x37c"/>
				<Register offset="0x380"/>
				<Register offset="0x384"/>
				<Register offset="0x388"/>
				<Register offset="0x38c"/>
				<Register offset="0x390"/>
				<Register offset="0x394"/>
				<Register offset="0x398"/>
				<Register offset="0x39c"/>
				<Register offset="0x3a0"/>
				<Register offset="0x3a4"/>
				<Register offset="0x3a8"/>
				<Register offset="0x3ac"/>
				<Register offset="0x3b0"/>
				<Register offset="0x3b4"/>
				<Register offset="0x3b8"/>
				<Register offset="0x3bc"/>
				<Register offset="0x3c0"/>
				<Register offset="0x3c4"/>
				<Register offset="0x3c8"/>
				<Register offset="0x3cc"/>
				<Register offset="0x3d0"/>
				<Register offset="0x3d4"/>
				<Register offset="0x3d8"/>
				<Register offset="0x3dc"/>
				<Register offset="0x3e0"/>
				<Register offset="0x3e4"/>
				<Register offset="0x3e8"/>
				<Register offset="0x3ec"/>
				<Register offset="0x3f0"/>
				<Register offset="0x3f4"/>
				<Register offset="0x3f8"/>
				<Register offset="0x3fc"/>
			</RegisterGroup>
			<RegisterGroup name="GPIO_DIR" description="GPIO_DIR is a GPIO direction control register used to set the GPIO pin directions." value="0x00" startoffset="0x400">
				<Member name="gpio_dir" description="GPIO direction control register. The bit[7:0] correspond to GPIO_DATA[7:0] respectively and can control each bit separately.&lt;br&gt;0: input.&lt;br&gt;1: output." range="7:0" property="RW"/>
				<Register offset="0x400"/>
			</RegisterGroup>
			<RegisterGroup name="GPIO_IS" description="GPIO_IS is a GPIO interrupt-triggering register used to set the level-sensitive mode for theGPIO pins." value="0x00" startoffset="0x404">
				<Member name="gpio_is" description="GPIO interrupt-triggering control register. The bit[7:0] correspond to GPIO_DATA[7:0] respectively and can control each bit separately.&lt;br&gt;0: edge-sensitive interrupt.&lt;br&gt;1: level-sensitive interrupt." range="7:0" property="RW"/>
				<Register offset="0x404"/>
			</RegisterGroup>
			<RegisterGroup name="GPIO_IBE" description="GPIO_IBE is a GPIO dual-edge sensitive interrupt register used to set the edge-sensitivemode for the GPIO pins." value="0x00" startoffset="0x408">
				<Member name="gpio_ibe" description="GPIO edge-sensitive interrupt control register. The bit[7:0] correspond to GPIO_DATA[7:0] respectively and can control each bit separately.&lt;br&gt;0: single-edge sensitive interrupt. GPIO_IEV determines the rising/falling edge-sensitive mode of the interrupt.&lt;br&gt;1: dual-edge sensitive interrupt." range="7:0" property="RW"/>
				<Register offset="0x408"/>
			</RegisterGroup>
			<RegisterGroup name="GPIO_IEV" description="GPIO_IEV is a GPIO interrupt-triggering condition register used to set the interrupt triggeringconditions for the GPIO pins." value="0x00" startoffset="0x40C">
				<Member name="gpio_iev" description="GPIO interrupt-triggering condition register. The bit[7:0] correspond to GPIO_DATA[7:0] respectively and can control each bit separately.&lt;br&gt;0: falling edge-sensitive or low level-sensitive interrupt.&lt;br&gt;1: rising edge-sensitive or high level-sensitive interrupt." range="7:0" property="RW"/>
				<Register offset="0x40C"/>
			</RegisterGroup>
			<RegisterGroup name="GPIO_IE" description="GPIO_IE is a GPIO interrupt mask register used to mask the GPIO interrupts." value="0x00" startoffset="0x410">
				<Member name="gpio_ie" description="GPIO interrupt mask register. The bit[7:0] correspond to GPIO_DATA[7:0] respectively and can control each bit separately.&lt;br&gt;0: The interrupt is masked.&lt;br&gt;1: The interrupt is not masked." range="7:0" property="RW"/>
				<Register offset="0x410"/>
			</RegisterGroup>
			<RegisterGroup name="GPIO_RIS" description="GPIO_RIS is a GPIO raw interrupt status register used to query the raw interrupt status of theGPIO pins." value="0x00" startoffset="0x414">
				<Member name="gpio_ris" description="GPIO raw interrupt register. The bit[7:0] correspond to GPIO_DATA[7:0] respectively to indicate the status of the interrupts before masking. The raw interrupt status is not controlled by the GPIO_IE register.&lt;br&gt;1: An interrupt is generated.&lt;br&gt;0: No interrupt is generated." range="7:0" property="RO"/>
				<Register offset="0x414"/>
			</RegisterGroup>
			<RegisterGroup name="GPIO_MIS" description="GPIO_MIS is a GPIO masked interrupt register used to query the interrupt status of the GPIOpins after masking." value="0x00" startoffset="0x418">
				<Member name="gpio_mis" description="GPIO masked interrupt register. The bit[7:0] correspond to GPIO_DATA[7:0] respectively to indicate the interrupt status after masking. The masked interrupt status is controlled by the GPIO_IE register.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid." range="7:0" property="RO"/>
				<Register offset="0x418"/>
			</RegisterGroup>
			<RegisterGroup name="GPIO_IC" description="GPIO_IC is a GPIO interrupt clear register used to clear the interrupts generated by the GPIOpins and the clear the GPIO_RIS and GPIO_MIS registers." value="0x00" startoffset="0x41C">
				<Member name="gpio_ic" description="GPIO interrupt clear register. The bit[7:0] correspond to GPIO_DATA[7:0] respectively and can control each bit separately.&lt;br&gt;0: no effect.&lt;br&gt;1: The interrupt is cleared." range="7:0" property="WC"/>
				<Register offset="0x41C"/>
			</RegisterGroup>
			<RegisterGroup name="GPIO_RESERVED" description="GPIO_RESERVED is a GPIO reserved register and should be configured as required." value="0x00" startoffset="0x420">
				<Member name="reserved" description="This register must be set to 0x00." range="7:0" property="RW"/>
				<Register offset="0x420"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="I2C" i2cSupport="false">
			<Module baseAddress="0x101F7000"/>
			<Module baseAddress="0x101F8000"/>
			<Module baseAddress="0x101F9000"/>
			<RegisterGroup name="I2C_CTRL" description="I2C_CTRL is an I2C control register used to set the enable and interrupt mask of the I2C." value="0x00000000" startoffset="0x00">
				<Member name="reserved" description="Reserved." range="31:9" property="-"/>
				<Member name="i2c_en" description="I2C enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="8" property="RW"/>
				<Member name="int_mask" description="I2C interrupt general mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="7" property="RW"/>
				<Member name="int_start_mask" description="Master device start condition transfer complete interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="6" property="RW"/>
				<Member name="int_stop_mask" description="Master device stop condition transfer complete interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="5" property="RW"/>
				<Member name="int_tx_mask" description="Master device transmit interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="4" property="RW"/>
				<Member name="int_rx_mask" description="Master device receive interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="3" property="RW"/>
				<Member name="int_ack_err_mask" description="Slave device ACK error interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="2" property="RW"/>
				<Member name="int_arb_loss_mask" description="Bus arbitration failure interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="1" property="RW"/>
				<Member name="int_done_mask" description="Bus transfer complete interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="0" property="RW"/>
				<Register offset="0x00"/>
			</RegisterGroup>
			<RegisterGroup name="I2C_COM" description="I2C_COM is an I2C module command register used to set the I2C module working commands.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Configure the register during system initialization, or clear the corresponding interrupt flagsbefore configuring the register. I2C_COM bit[3:0] is automatically cleared after the operationends.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x04">
				<Member name="reserved" description="Reserved." range="31:5" property="-"/>
				<Member name="op_ack" description="The master device acting as the receiver will transmit an ACK.&lt;br&gt;0: An ACK is transmitted.&lt;br&gt;1: No ACK is transmitted." range="4" property="RW"/>
				<Member name="op_start" description="Operation of generating a start condition.&lt;br&gt;0: The operation ends.&lt;br&gt;1: The operation is valid." range="3" property="RW"/>
				<Member name="op_rd" description="Operation of generating a read request.&lt;br&gt;0: The operation ends.&lt;br&gt;1: The operation is valid." range="2" property="RW"/>
				<Member name="op_we" description="Operation of generating a write request.&lt;br&gt;0: The operation ends.&lt;br&gt;1: The operation is valid." range="1" property="RW"/>
				<Member name="op_stop" description="Operation of generating a stop condition.&lt;br&gt;0: The operation ends.&lt;br&gt;1: The operation is valid." range="0" property="RW"/>
				<Register offset="0x04"/>
			</RegisterGroup>
			<RegisterGroup name="I2C_ICR" description="I2C_ICR is an interrupt clear register of the I2C module.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Before a new interrupt arrives, the I2C module will automatically clear the correspondingI2C_ICR bits.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x08">
				<Member name="reserved" description="Reserved." range="31:7" property="-"/>
				<Member name="clr_int_start" description="Master device start condition transfer complete interrupt flag clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="6" property="WC"/>
				<Member name="clr_int_stop" description="Master device stop condition transfer complete interrupt flag clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="5" property="WC"/>
				<Member name="clr_int_tx" description="Master device transmit interrupt flag clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="4" property="WC"/>
				<Member name="clr_int_rx" description="Master device receive interrupt flag clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="3" property="WC"/>
				<Member name="clr_int_ack_err" description="Slave device ACK error interrupt flag clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="2" property="WC"/>
				<Member name="clr_int_arb_loss" description="Bus arbitration failure interrupt flag clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="1" property="WC"/>
				<Member name="clr_int_done" description="Bus transfer complete interrupt flag clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="0" property="WC"/>
				<Register offset="0x08"/>
			</RegisterGroup>
			<RegisterGroup name="I2C_SR" description="I2C_SR is an I2C module status register used to read the working status of the I2C module.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;I2C_SR bit[1] indicates that the I2C bus arbitration fails. When I2C_SR bit[1] takes effect, thecurrent operation fails. Before clearing I2C_SR bit[1], clear the other interrupt flags and clearthe operation commands in I2C_COM or write new operation commands to I2C_COM.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x0C">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="bus_busy" description="The bus is busy.&lt;br&gt;0: busy&lt;br&gt;1: idle" range="7" property="RO"/>
				<Member name="int_start" description="Master device start condition transfer complete interrupt flag.&lt;br&gt;0: No interrupt flag is generated.&lt;br&gt;1: An interrupt flag is generated." range="6" property="RO"/>
				<Member name="int_stop" description="Master device stop condition transfer complete interrupt flag.&lt;br&gt;0: No interrupt flag is generated.&lt;br&gt;1: An interrupt flag is generated." range="5" property="RO"/>
				<Member name="int_tx" description="Master device transmit interrupt flag.&lt;br&gt;0: No interrupt flag is generated.&lt;br&gt;1: An interrupt flag is generated." range="4" property="RO"/>
				<Member name="int_rx" description="Master device receive interrupt flag.&lt;br&gt;0: No interrupt flag is generated.&lt;br&gt;1: An interrupt flag is generated." range="3" property="RO"/>
				<Member name="int_ack_err" description="Slave device ACK error interrupt flag.&lt;br&gt;0: No interrupt flag is generated.&lt;br&gt;1: An interrupt flag is generated." range="2" property="RO"/>
				<Member name="int_arb_loss" description="Bus arbitration failure interrupt flag.&lt;br&gt;0: No interrupt flag is generated.&lt;br&gt;1: An interrupt flag is generated." range="1" property="RO"/>
				<Member name="int_done" description="Bus transfer complete interrupt flag.&lt;br&gt;0: No interrupt flag is generated.&lt;br&gt;1: An interrupt flag is generated." range="0" property="RO"/>
				<Register offset="0x0C"/>
			</RegisterGroup>
			<RegisterGroup name="I2C_SCL_H" description="I2C_SCL_H is an I2C bus SCL high level cycle register used to set the SCL high level cyclesfor the working state of the I2C module.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Configure the register during system initialization, or set I2C_CTRL bit[7] to 0 beforeconfiguring the register.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x10">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="scl_h" description="The product of the configured value and 2 is the number of SCL high-level cycles." range="15:0" property="RW"/>
				<Register offset="0x10"/>
			</RegisterGroup>
			<RegisterGroup name="I2C_SCL_L" description="I2C_SCL_L is an I2C bus SCL low level cycle register used to set the SCL low level cyclesfor the working state of the I2C module.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Configure the register during system initialization, or set I2C_CTRL bit[7] to 0 beforeconfiguring the register.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x14">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="scl_l" description="The product of the configured value and 2 is the number of SCL low-level cycles." range="15:0" property="RW"/>
				<Register offset="0x14"/>
			</RegisterGroup>
			<RegisterGroup name="I2C_TXR" description="I2C_TXR is an I2C transmit data register used to transmit data for the working state of the I2Cmodule.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;After the data transmission is complete, the I2C module does not modify the contents ofI2C_TXR.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x18">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="i2c_txr" description="Transmit data by the master device." range="7:0" property="RW"/>
				<Register offset="0x18"/>
			</RegisterGroup>
			<RegisterGroup name="I2C_RXR" description="I2C_RXR is an I2C receive data register used by the master device to receive data from theslave device.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;The I2C_RXR data is valid when the value of I2C_SR bit[3] is 1. The data will be kept untilthe next read operation is performed.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x1C">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="i2c_rxr" description="Receive data by the master device." range="7:0" property="RO"/>
				<Register offset="0x1C"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="IR" i2cSupport="false">
			<Module baseAddress="0x101E1000"/>
			<RegisterGroup name="IR_EN" description="IR_EN is an IR receive enable control register.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;You must set IR_EN[ir_en] to 1 using software before configuring other registers; otherwise,the configuration does not take effect. If the register IR_EN[ir_en] is set to 0, other registersare only readable and the read values are the reset values of the registers.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x000">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="ir_en" description="IR receive module enable.&lt;br&gt;0: The IR receive module is disabled.&lt;br&gt;1: The IR receive module is enabled." range="0" property="RW"/>
				<Register offset="0x000"/>
			</RegisterGroup>
			<RegisterGroup name="IR_CFG" description="IR_CFG is an IR configuration register.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Ensure that this register is configured only when IR_BUSY[ir_busy] is 0 and IR_EN[ir_en] is1. Otherwise, the configuration does not take effect and the register remains unchanged.&lt;br&gt;The reference clock frequency supported by the IR unit ranges from 1 MHz to 128 MHz andhas the following relations with the clock divider ir_freq:&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;If the reference clock frequency is 1 MHz, the clock divider ir_freq should be set to 0x00.&lt;br&gt;&lt;/li&gt;&lt;li&gt;If the reference clock frequency is 128 MHz, the clock divider ir_freq should be set to0x7F.&lt;br&gt;If the reference clock frequency is a non-integer within the range, the corresponding clockdivider should be rounded off. For example, if the reference clock frequency is 12.1 MHz, thecorresponding clock divider should be 0x0B; if the reference clock frequency is 12.8 MHz,the corresponding clock divider should be 0x0C.&lt;br&gt;Relation between frequency offset and count deviation: ratio = Df/f, where f represents thebase frequency and Df represents the frequency variation; Dcnt=(0.1*s*ratio), where Dcntrepresents the count deviation of the counter, s represents the level width (in μs). When theclock has frequency offset, the valid parameter value range shifts. If the frequency increases,the corresponding margin value should be changed to [min + Dcnt, max + Dcnt], where minand max represent the margin values without offset. If the frequency decreases, thecorresponding margin value should be changed to [min - Dcnt, max - Dcnt]. Take the start bitmargin of the lead code for example: If the base frequency is 100 MHz and the frequencydrifts up by 0.1 MHz, ratio = 0.1/100 = 0.001. If s = 9000 μs, Dcnt=(0.1*9000*0.001)=1, andthe margin value of ir_leads should be changed to [0x033D, 0x3CD].&lt;/li&gt;&lt;/ul&gt;" value="0x3E801F0B" startoffset="0x004">
				<Member name="ir_max_level_width" description="These bits do not take effect when IR_CFG[ir_mode] = 0.&lt;br&gt;Maximum symbol level width (in 10 μs) used to determine the end of a symbol stream when IR_CFG[ir_mode] = 1." range="31:16" property="RW"/>
				<Member name="ir_format" description="Code pattern when IR_CFG[ir_mode] = 0.&lt;br&gt;00: NEC with simple repeat code data format.&lt;br&gt;01: TC9012 code data format.&lt;br&gt;10: NEC with full repeat code data format.&lt;br&gt;11: SONY code data format.&lt;br&gt;For details about the relations between the code pattern and the code classification, see Table 10-7 to Table 10-9.&lt;br&gt;Symbol format when IR_CFG[ir_mode] = 1.&lt;br&gt;bit[15]: reserved.&lt;br&gt;The meaning of bit[14] is as follows:&lt;br&gt;0: The symbol format is low level first and the symbol stream ends at a high level.&lt;br&gt;1: The symbol format is high level first and the symbol stream ends at a low level." range="15:14" property="RW"/>
				<Member name="ir_bits" description="Number of data bits in a frame when IR_CFG[ir_mode] = 0.&lt;br&gt;0x00–0x2F: corresponds to 1–48 data bits in a frame.&lt;br&gt;0x30–0x3F: reserved.&lt;br&gt;If the software sets this field to a value within the range of 0x30–0x3F, the configuration does not take effect and the value of ir_bits remains unchanged.&lt;br&gt;Received symbol interrupt threshold when IR_CFG[ir_mode] = 1.&lt;br&gt;bit[13]: reserved.&lt;br&gt;bit[12:8]: 0x0–0x1F, corresponding to at least 1–32 symbols in the FIFO, which triggers an interrupt." range="13:8" property="RW"/>
				<Member name="ir_mode" description="IR operating mode.&lt;br&gt;0: Output a complete decoded data frame.&lt;br&gt;1: Only output the symbol width." range="7" property="RW"/>
				<Member name="ir_freq" description="Clock divider of the working clock.&lt;br&gt;0x00–0x7F: corresponds to the clock divider 1–128 of the working clock." range="6:0" property="RW"/>
				<Register offset="0x004"/>
			</RegisterGroup>
			<RegisterGroup name="IR_LEADS" description="IR_LEADS is a lead code start bit margin configuration register (used only when&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Ensure that this register is configured only when IR_BUSY[ir_busy] is 0 and IR_EN[ir_en] is1. Otherwise, the configuration does not take effect and the register remains unchanged.Besides, the configuration on the reserved values of the register is invalid and the registerremains unchanged.&lt;br&gt;To accurately determine the start bit of the lead code, margins should be considered for thetypical value of the start bit in a specific code pattern. For details about the typical value ofthe start bit in a specific code pattern, see the value of LEAD_S in Table 10-7 to Table 10-9.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;For the pulse width with a typical value not smaller than 400 (accurate to 10 μs), therecommended margin range is 8% of the typical value. For example: For the D6121 codepattern with the typical LEAD_S value of 900, cnt_leads_min = 900 x 92% = 828 =0x33C and cnt_leads_max = 900 x 108% = 972 = 0x3CC.&lt;br&gt;&lt;/li&gt;&lt;li&gt;For the pulse width with a typical value smaller than 400 (accurate to 10 μs), therecommended margin range is 20% of the typical value. For example: For the SONY-D7C5 code pattern with the typical LEAD_S value of 240, cnt_leads_min = 240 x 80%= 192 = 0xC0 and cnt_leads_max = 240 x 120% = 288 = 0x120.&lt;br&gt;Basic configuration rules: The value of cnt_leads_max must be greater than or equal to thevalue of cnt_leads_min and the value of cnt_leads_min must be greater than the value ofcnt0_b_max and the value of cnt1_b_max.&lt;br&gt;cnt0_b_max and the value of cnt1_b_max.&lt;/li&gt;&lt;/ul&gt;" value="0x033C03CC" startoffset="0x008">
				<Member name="reserved" description="Reserved." range="31:26" property="-"/>
				<Member name="cnt_leads_min" description="Minimum pulse width of the lead code start bit.&lt;br&gt;0x000–0x007: reserved." range="25:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:10" property="-"/>
				<Member name="cnt_leads_max" description="Maximum pulse width of the lead code start bit.&lt;br&gt;0x000–0x007: reserved." range="9:0" property="RW"/>
				<Register offset="0x008"/>
			</RegisterGroup>
			<RegisterGroup name="IR_LEADE" description="IR_LEADE is a lead code stop bit margin configuration register (used only when IR_CFG[ir_mode] = 0)&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Ensure that this register is configured only when IR_BUSY[ir_busy] is 0 and IR_EN[ir_en]is 1. Otherwise, the configuration is invalid and the register remains unchanged. Besides,the configuration on the reserved values of the register is invalid and the register remainsunchanged.&lt;br&gt;&lt;/li&gt;&lt;li&gt;For the codes of the NEC with simple repeat code data format, the margin range ofcnt_sleade should not overlap with the margin range of cnt_leade. Otherwise, thesimplified lead code cannot be recognized when the actual count value is within theoverlapping range, which will cause frame format error.&lt;br&gt;To accurately determine the stop bit of the lead code, margins should be considered for thetypical value of the stop bit in a specific code pattern. The margin range should be around 8%of the typical value. For details about the typical value of the stop bit in a specific code pattern,see the value of LEAD_E in Table 10-7 to Table 10-9.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;For the pulse width with a typical value not smaller than 400 (accurate to 10 μs), therecommended margin range is 8% of the typical value. For example: For the D6121 codepattern with the typical LEAD_E value of 450, cnt_leade_min = 450 x 92% = 414 =0x19E and cnt_leade_max = 450 x 108% = 486 = 0x1E6.&lt;br&gt;&lt;/li&gt;&lt;li&gt;For the pulse width with a typical value not smaller than 400 (accurate to 10 μs), the recommended margin range is 8% of the typical value. For example: For the D6121 code pattern with the typical LEAD_E value of 450, cnt_leade_min = 450 x 92% = 414 = 0x19E and cnt_leade_max = 450 x 108% = 486 = 0x1E6.&lt;br&gt;&lt;/li&gt;&lt;li&gt;For the pulse width with a typical value smaller than 400 (accurate to 10 μs), the recommended margin range is 20% of the typical value. For example: For the SONY-D7C5 code pattern with the typical LEAD_E value of 60, cnt_leade_min = 60 x 80% = 48 = 0x030 and cnt_leade_max = 60 x 120% = 72 = 0x048.&lt;br&gt;Basic configuration rules: the value of cnt_leade_max must be greater than or equal to the value of cnt_leade_min.&lt;/li&gt;&lt;/ul&gt;" value="0x019E01E6" startoffset="0x00C">
				<Member name="reserved" description="Reserved." range="31:25" property="-"/>
				<Member name="cnt_leade_min" description="Minimum pulse width of the lead code stop bit.&lt;br&gt;0x000–0x007: reserved." range="24:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="-"/>
				<Member name="cnt_leade_max" description="Maximum pulse width of the lead code stop bit.&lt;br&gt;0x000–0x007: reserved." range="8:0" property="RW"/>
				<Register offset="0x00C"/>
			</RegisterGroup>
			<RegisterGroup name="IR_SLEADE" description="IR_SLEADE is a simplified lead code stop bit margin configuration register (used only when IR_CFG[ir_mode] = 0)&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Ensure that this register is configured only when IR_BUSY[ir_busy] is 0 and IR_EN[ir_en]is 1. Otherwise, the configuration is invalid and the register remains unchanged. Besides,the configuration on the reserved values of the register is invalid and the register remainsunchanged.&lt;br&gt;&lt;/li&gt;&lt;li&gt;For the codes of the NEC with simple repeat code data format, the margin range ofcnt_sleade should not overlap with the margin range of cnt_leade. Otherwise, thesimplified lead code cannot be recognized when the actual count value is within theoverlapping range, which will cause frame format error.&lt;br&gt;&lt;/li&gt;&lt;li&gt;You need to configure this register when the codes are in NEC with simple repeat codedata format. For codes of other data formats, you do not need to configure this register.&lt;br&gt;To accurately determine the stop bit of the simplified lead code, margins should be consideredfor the typical value of the stop bit in a specific code pattern. For details about the typicalvalue of the stop bit in a specific code pattern, see the value of SLEAD_E in Table 10-7 to Table 10-9.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;For the pulse width with a typical value not smaller than 225 (accurate to 10 μs), therecommended margin range is 8% of the typical value. For example: For the D6121 coderecommended margin range is 8% of the typical value. For example: For the D6121 codepattern with the typical SLEAD_E value of 225, cnt_sleade_min = 225 x 92% = 207 =0xCF and cnt_sleade_max = 225 x 108% = 243 = 0xF3. ?&lt;/li&gt;&lt;li&gt;For the pulse width with a typical value smaller than 225 (accurate to 10 μs), therecommended margin range is 20% of the typical value. For example: For a certain codepattern with the typical SLEAD_E value of 60, cnt_sleade_min = 60 x 80% = 48 = 0x30and cnt_sleade_max = 60 x 120% = 72 = 0x48.&lt;br&gt;Basic configuration rules: the value of cnt_sleade_max must be greater than or equal to thevalue of cnt_sleade_min.&lt;br&gt;Register Name&lt;/li&gt;&lt;/ul&gt;" value="0x00CF00F3" startoffset="0x010">
				<Member name="reserved" description="Reserved." range="31:25" property="-"/>
				<Member name="cnt_sleade_min" description="Minimum pulse width of the simplified lead code stop bit.&lt;br&gt;0x000–0x007: reserved." range="24:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="-"/>
				<Member name="cnt_sleade_max" description="Maximum pulse width of the simplified lead code stop bit.&lt;br&gt;0x000–0x007: reserved." range="8:0" property="RW"/>
				<Register offset="0x010"/>
			</RegisterGroup>
			<RegisterGroup name="IR_B0" description="IR_B0 is a bit0 judgment level margin configuration register (used only when IR_CFG[ir_mode] = 0).&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Ensure that this register is configured only when IR_BUSY[ir_busy] is 0 and IR_EN[ir_en]is 1. Otherwise, the configuration is invalid and the register remains unchanged. Besides,the configuration on the reserved values of the register is invalid and the register remainsunchanged.&lt;br&gt;&lt;/li&gt;&lt;li&gt;For all the four code patterns, the bit0 judgment level margin range should not overlapwith the bit1 judgment level margin range. Otherwise, bit1 cannot be recognized and willbe taken for bit0 when the actual count value is within the overlapping range.&lt;br&gt;To accurately judge bit0, margins should be considered for the typical value of a specific codepattern. The recommended margin range is 20% of the typical value.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;For details about the typical values of the code patterns NEC with simple repeat code,NEC with full repeat code, and TC9012, see the value of B0_H in Table 10-7 to Table 10-9(accurate to 10 μs), cnt0_b_min = 56 x 80% = 45 = 0x2D and cnt0_b_max = 56 x 120%= 67 = 0x43.&lt;br&gt;&lt;/li&gt;&lt;li&gt;For details about the typical value of the SONY code pattern, see the value of B0_L intypical B0_L value of 60 (accurate to 10 μs), cnt0_b_min = 60 x 80% = 48 = 0x30 andcnt0_b_max = 60 x 120% = 72 = 0x48.&lt;br&gt;Basic configuration rules: the value of cnt0_b_max must be greater than or equal to the valueof cnt0_b_min.&lt;br&gt;Offset Address0x01425&lt;/li&gt;&lt;/ul&gt;" value="0x002D0043" startoffset="0x014">
				<Member name="reserved" description="Reserved." range="31:25" property="-"/>
				<Member name="cnt0_b_min" description="Minimum pulse width of the bit0 judgment level.&lt;br&gt;0x000–0x007: reserved." range="24:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="-"/>
				<Member name="cnt0_b_max" description="Maximum pulse width of the bit0 judgment level.&lt;br&gt;0x000–0x007: reserved." range="8:0" property="RW"/>
				<Register offset="0x014"/>
			</RegisterGroup>
			<RegisterGroup name="IR_B1" description="IR_B1 is a bit1 judgment level margin configuration register (used only when IR_CFG[ir_mode] = 0).&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Ensure that this register is configured only when IR_BUSY[0] is 0 and IR_EN[0] is 1.&lt;br&gt;Otherwise, the configuration is invalid and the register remains unchanged. Besides, theconfiguration on the reserved values of the register is invalid and the register remainsunchanged.&lt;br&gt;&lt;/li&gt;&lt;li&gt;For all the four code patterns, the bit0 judgment level margin range should not overlapwith the bit1 judgment level margin range. Otherwise, bit1 cannot be recognized and willbe taken for bit0 when the actual count value is within the overlapping range.&lt;br&gt;To accurately judge bit1, margins should be considered for the typical value of a specific codepattern. The recommended margin range is 20% of the typical value.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;For details about the typical values of the code patterns NEC with simple repeat code,NEC with full repeat code, and TC9012, see the value of B1_H in Table 10-7 to Table 10-9(accurate to 10 μs), cnt1_b_min = 169 x 80% = 135 = 0x87 and cnt1_b_max = 169 x120% = 203 = 0xCB.&lt;br&gt;&lt;/li&gt;&lt;li&gt;For details about the typical value of the SONY code pattern, see the value of B1_L intypical B1_L value of 120 (accurate to 10 μs), cnt1_b_min = 120 x 80% = 96 = 0x60 andcnt1_b_max = 120 x 120% = 144 = 0x90.&lt;br&gt;Basic configuration rules: the value of cnt1_b_max must be greater than or equal to the valueof cnt1_b_min.&lt;/li&gt;&lt;/ul&gt;" value="0x008700CB" startoffset="0x018">
				<Member name="reserved" description="Reserved." range="31:25" property="-"/>
				<Member name="cnt1_b_min" description="Minimum pulse width of the bit1 judgment level.&lt;br&gt;0x000–0x007: reserved." range="24:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="-"/>
				<Member name="cnt1_b_max" description="Maximum pulse width of the bit1 judgment level.&lt;br&gt;0x000–0x007: reserved." range="8:0" property="RW"/>
				<Register offset="0x018"/>
			</RegisterGroup>
			<RegisterGroup name="IR_BUSY" description="IR_BUSY is a busy flag register." value="0x00000000" startoffset="0x01C">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="ir_busy" description="Busy state flag.&lt;br&gt;0: idle state, in which the software can configure the data.&lt;br&gt;1: busy state, in which the software cannot configure the data." range="0" property="RO"/>
				<Register offset="0x01C"/>
			</RegisterGroup>
			<RegisterGroup name="IR_DATAH" description="IR_DATAH is an IR-received decoded data upper 16 bits register (when IR_CFG[ir_mode] =0) or is a symbol-FIFO symbol count register (when IR_CFG[ir_mode] = 1).&lt;br&gt;When IR_CFG[ir_mode] is 0, IR_DATAH stores the upper 16 bits of the received decodeddata and IR_DATAL stores the lower 32 bits of the received decoded data. The number ofvalid data bits in a frame of a specific code pattern determines the valid data bits. For details,see the description about the number of valid data bits in Table 10-7 to Table 10-9.&lt;br&gt;Data storage rules: Data is stored in IR_DATAH and IR_DATAL in the MSB first sequence.The data is stored in IR_DATAL and then in IR_DATAH after IR_DATAL is full. The unusedupper bits are reserved. The software reads the bits of IR_DATAH and then reads the bits ofWhen IR_CFG[ir_mode] is 0, the hardware only receives all the data bits and does not checkthe bit definition. The software will eventually handle the received data." value="0x00000000" startoffset="0x020">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="ir_datah" description="Upper 16 bits of the received decoded data when IR_CFG[ir_mode] = 0.&lt;br&gt;Number of symbols in the symbol FIFO when IR_CFG[ir_mode] = 1.&lt;br&gt;bit[15:6]: reserved.&lt;br&gt;bit[5:0]: number of symbols in the symbol FIFO." range="15:0" property="RO"/>
				<Register offset="0x020"/>
			</RegisterGroup>
			<RegisterGroup name="IR_DATAL" description="IR_DATAL is an IR-received decoded data lower 32 bits register (when IR_CFG[ir_mode] =0) or is an IR unit-received symbol width register (when IR_CFG[ir_mode] = 1)." value="0x00000000" startoffset="0x024">
				<Member name="ir_datal" description="Lower 32 bits of the received decoded data when IR_CFG[ir_mode] = 0.&lt;br&gt;Symbol width received by the IR unit when IR_CFG[ir_mode] = 1.&lt;br&gt;The definitions of bit[31:16] are as follows:&lt;br&gt;High level width of the received symbol (in 10 μs) when the symbol is low level first.&lt;br&gt;Low level width of the received symbol (in 10 μs) when the symbol is high level first.&lt;br&gt;The definitions of bit[15:0] are as follows:&lt;br&gt;Low level width of the received symbol (in 10 μs) when the symbol is low level first.&lt;br&gt;High level width of the received symbol (in 10 μs) when the symbol is high level first." range="31:0" property="RO"/>
				<Register offset="0x024"/>
			</RegisterGroup>
			<RegisterGroup name="IR_INT_MASK" description="IR_INT_MASK is an IR interrupt mask register.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;Ensure that this register is configured only when IR_EN[ir_en] is 1. Otherwise, theconfiguration does not take effect and the register remains unchanged.&lt;br&gt;If all the interrupts are masked, the IR unit cannot support the infrared remote wakeupfunction.&lt;br&gt;When IR_CFG[ir_mode] = 0, IR_INT_MASK bit[3:0] take effect. WhenIR_CFG[ir_mode] = 1, IR_INT_MASK bit[18:16] take effect.&lt;br&gt;The definitions of the interrupts involved are as follows:&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Received data overrun interrupt&lt;/li&gt;If the CPU does not instantly read the data of the current frame before the next framearrives, the data of the next frame will overwrite the current frame data and a pre-maskreceived data overrun interrupt request will be reported.&lt;br&gt;&lt;li&gt;Received data frame format error interrupt&lt;/li&gt;If the received data frame is incomplete or the data pulse width is not in the margin range,the pre-mask received frame format error interrupt request will be reported.&lt;br&gt;&lt;li&gt;Received data frame interrupt&lt;/li&gt;If a complete frame is received, the pre-mask received data frame interrupt will bereported.&lt;br&gt;&lt;li&gt;Key release detection interrupt&lt;/li&gt;For the codes of the NEC with simple repeat code and the TC9012 data formats, if nomore start synchronous bits are detected or only non-simplified lead codes but not validdata frames are detected within 160 ms after a valid start synchronous code is detected,the pre-mask remote control key release interrupt will be reported. The NEC with fullrepeat code and the SONY data formats do not support key release interrupt.&lt;br&gt;&lt;li&gt;Received symbol overrun interruptintc_release&lt;/li&gt;The pre-mask received symbol overrun interrupt request will be reported if the symbolFIFO is full because the CPU does not read the data immediately, and the next symbol isreceived.&lt;br&gt;&lt;li&gt;Received symbol interrupt&lt;/li&gt;If a complete symbol is received and the number of symbols in the symbol FIFO doesnot exceed the threshold specified by IR_CFG[ir_bits], the pre-mask received symbolinterrupt will be reported.&lt;br&gt;&lt;li&gt;Symbol timeout interrupt&lt;/li&gt;If a valid symbol is received and no new symbol is received within the duration specifiedby IR_CFG[ir_max_level_width], the pre-mask symbol timeout interrupt request will bereported.&lt;br&gt;The hardware does not perform the interrupt priority arbitration. If one or multiple maskedinterrupt sources are valid, interrupts will be generated.&lt;/ul&gt;" value="0x00000000" startoffset="0x028">
				<Member name="reserved" description="Reserved." range="31:19" property="-"/>
				<Member name="intm_overrun" description="Symbol overrun interrupt mask when IR_CFG[ir_mode] = 1.&lt;br&gt;0: not masked.&lt;br&gt;1: masked." range="18" property="RW"/>
				<Member name="intm_time_out" description="Symbol timeout interrupt mask when IR_CFG[ir_mode] = 1.&lt;br&gt;0: not masked.&lt;br&gt;1: masked." range="17" property="RW"/>
				<Member name="intm_symb_rcv" description="Received N symbol interrupt mask when IR_CFG[ir_mode] = 1.&lt;br&gt;0: not masked.&lt;br&gt;1: masked." range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:4" property="-"/>
				<Member name="intm_release" description="Key release interrupt mask when IR_CFG[ir_mode] = 0.&lt;br&gt;0: not masked.&lt;br&gt;1: masked." range="3" property="RW"/>
				<Member name="intm_overflow" description="Receive data overrun interrupt when IR_CFG[ir_mode] = 0.&lt;br&gt;0: not masked.&lt;br&gt;1: masked." range="2" property="RW"/>
				<Member name="intm_framerr" description="Received data frame format error interrupt when IR_CFG[ir_mode] = 0.&lt;br&gt;0: not masked.&lt;br&gt;1: masked." range="1" property="RW"/>
				<Member name="intm_rcv" description="Received data interrupt when IR_CFG[ir_mode] = 0.&lt;br&gt;0: not masked.&lt;br&gt;1: masked." range="0" property="RW"/>
				<Register offset="0x028"/>
			</RegisterGroup>
			<RegisterGroup name="IR_INT_STATUS" description="IR_INT_STATUS is an IR interrupt status register.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;When IR_CFG[ir_mode] = 0, IR_INT_STATUS bit[3:0] and IR_INT_STATUS bit[19:16]take effect.&lt;br&gt;&lt;/li&gt;&lt;li&gt;When IR_CFG[ir_mode] = 1, IR_INT_STATUS bit[10:8] and IR_INT_STATUS bit[26:24]take effect.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x02C">
				<Member name="reserved" description="Reserved." range="31:27" property="-"/>
				<Member name="intms_overrun" description="Post-mask symbol overrun interrupt status when IR_CFG[ir_mode] = 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="26" property="RO"/>
				<Member name="intms_time_out" description="Post-mask symbol timeout interrupt status when IR_CFG[ir_mode] = 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="25" property="RO"/>
				<Member name="intms_symb_rcv" description="Post-mask received symbol interrupt status when IR_CFG[ir_mode] = 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="24" property="RO"/>
				<Member name="reserved" description="Reserved." range="23:20" property="-"/>
				<Member name="intms_release" description="Post-mask key release interrupt status when IR_CFG[ir_mode] = 0.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="19" property="RO"/>
				<Member name="intms_overflow" description="Post-mask received data overrun interrupt status when IR_CFG[ir_mode] = 0.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="18" property="RO"/>
				<Member name="intms_framerr" description="Post-mask received data frame format error interrupt status when IR_CFG[ir_mode] = 0.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="17" property="RO"/>
				<Member name="intms_rcv" description="Post-mask received data frame interrupt status when IR_CFG[ir_mode] = 0.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="16" property="RO"/>
				<Member name="reserved" description="Reserved." range="15:11" property="-"/>
				<Member name="intrs_overrun" description="Pre-mask symbol overrun interrupt status when IR_CFG[ir_mode] = 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="10" property="RO"/>
				<Member name="intrs_time_out" description="Pre-mask symbol timeout interrupt status when IR_CFG[ir_mode] = 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="9" property="RO"/>
				<Member name="intrs_symb_rcv" description="Pre-mask received symbol interrupt status when IR_CFG[ir_mode] = 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="8" property="RO"/>
				<Member name="reserved" description="Reserved." range="7:4" property="-"/>
				<Member name="intrs_release" description="Pre-mask key release interrupt status when IR_CFG[ir_mode] = 0.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="3" property="RO"/>
				<Member name="intrs_overflow" description="Pre-mask received data overrun interrupt status when IR_CFG[ir_mode] = 0.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="2" property="RO"/>
				<Member name="intrs_framerr" description="Pre-mask received data frame format error interrupt status when IR_CFG[ir_mode] = 0.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="1" property="RO"/>
				<Member name="intrs_rcv" description="Pre-mask received data frame interrupt status when IR_CFG[ir_mode] = 0.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="0" property="RO"/>
				<Register offset="0x02C"/>
			</RegisterGroup>
			<RegisterGroup name="IR_INT_CLR" description="IR_INT_CLR is an IR interrupt clear register.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;When IR_CFG[ir_mode] = 0, IR_INT_CLR bit[3:0] take effect.&lt;br&gt;&lt;/li&gt;&lt;li&gt;When IR_CFG[ir_mode] = 1, IR_INT_CLR bit[18:16] take effect.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x030">
				<Member name="reserved" description="Reserved." range="31:19" property="-"/>
				<Member name="intc_overrun" description="Symbol overrun interrupt request clear when IR_CFG[ir_mode] = 1.&lt;br&gt;0: no effect.&lt;br&gt;1: clear." range="18" property="WC"/>
				<Member name="intc_time_out" description="Symbol timeout interrupt request clear when IR_CFG[ir_mode] = 1.&lt;br&gt;0: no effect.&lt;br&gt;1: clear." range="17" property="WC"/>
				<Member name="intc_symb_rcv" description="Received symbol interrupt request clear when IR_CFG[ir_mode] = 1.&lt;br&gt;0: no effect.&lt;br&gt;1: clear." range="16" property="WC"/>
				<Member name="reserved" description="Reserved." range="15:4" property="-"/>
				<Member name="intc_release" description="Remote control key release interrupt request clear when IR_CFG[ir_mode] = 0.&lt;br&gt;0: no effect.&lt;br&gt;1: clear." range="3" property="WC"/>
				<Member name="intc_overflow" description="Received data overrun interrupt request clear when IR_CFG[ir_mode] = 0.&lt;br&gt;0: no effect.&lt;br&gt;1: clear." range="2" property="WC"/>
				<Member name="intc_framerr" description="Received data frame format error interrupt request clear when IR_CFG[ir_mode] = 0.&lt;br&gt;0: no effect.&lt;br&gt;1: clear." range="1" property="WC"/>
				<Member name="intc_rcv" description="Received data frame interrupt request clear when IR_CFG[ir_mode] = 0.&lt;br&gt;0: no effect.&lt;br&gt;1: clear.&lt;br&gt;If the software sets this bit to 1 without reading the data of IR_DATAL after the received data frame interrupt request is generated, the interrupt request cannot be cleared." range="0" property="WC"/>
				<Register offset="0x030"/>
			</RegisterGroup>
			<RegisterGroup name="IR_START" description="IR_START is an IR start configuration register.&lt;br&gt;During the start of the IR unit, after the values of the other registers are set, you can start theconfiguration register by performing one write operation on this address (any value can bewritten)." value="0x00000000" startoffset="0x034">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="ir_start" description="IR start configuration register." range="0" property="WO"/>
				<Register offset="0x034"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="LED" i2cSupport="false">
			<Module baseAddress="0x101E3000"/>
			<RegisterGroup name="LED_CONTROL" description="LED_CONTROL is an LED control register used to control the LED display, blinking enable,keypad scan enable and keypad interrupt." value="0x00000000" startoffset="0x0000">
				<Member name="reserved" description="Reserved." range="31:9" property="-"/>
				<Member name="led_en" description="LED display enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="8" property="RW"/>
				<Member name="flash_en4" description="Blinking enable of LED 4.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="7" property="RW"/>
				<Member name="flash_en3" description="Blinking enable of LED 3.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="6" property="RW"/>
				<Member name="flash_en2" description="Blinking enable of LED 2.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="5" property="RW"/>
				<Member name="flash_en1" description="Blinking enable of LED 1.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="4" property="RW"/>
				<Member name="key_en" description="Keypad scan enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="3" property="RW"/>
				<Member name="reserved" description="Reserved." range="2" property="-"/>
				<Member name="int_press_mask" description="Keypress interrupt mask enable.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="1" property="RW"/>
				<Member name="int_release_mask" description="Key release interrupt enable.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="0" property="RW"/>
				<Register offset="0x0000"/>
			</RegisterGroup>
			<RegisterGroup name="LED_CONFIG" description="LED_CONFIG is a display configuration register used to configure the LED type and the CSsignal level when an LED is on." value="0x00000000" startoffset="0x0004">
				<Member name="reserved" description="Reserved." range="31:2" property="-"/>
				<Member name="led_ty_cs" description="LED type.&lt;br&gt;0: common cathode LED.&lt;br&gt;1: common anode LED." range="1" property="RW"/>
				<Member name="led_cs" description="LED_CSNx level when an LED is on.&lt;br&gt;0: low level.&lt;br&gt;1: high level.&lt;br&gt;Note: The letter x can be 0, 1, 2 or 3." range="0" property="RW"/>
				<Register offset="0x0004"/>
			</RegisterGroup>
			<RegisterGroup name="LED_KEYINT" description="LED_KEYINT is a keypad sampling interrupt register." value="0x00000000" startoffset="0x0008">
				<Member name="reserved" description="Reserved." range="31:2" property="-"/>
				<Member name="int_press" description="Key press interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: A key press interrupt is generated.&lt;br&gt;Note: When a key press interrupt is generated, writing 1 to this bit clears this interrupt." range="1" property="RW"/>
				<Member name="int_release" description="Key release interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: A key release interrupt is generated.&lt;br&gt;Note: When a key release interrupt is generated, writing 1 to this bit clears this interrupt." range="0" property="RW"/>
				<Register offset="0x0008"/>
			</RegisterGroup>
			<RegisterGroup name="LED_KEYDATA" description="LED_KEYDATA is a keypad sampling status register used to store the keypad samplingstatus of the LED module.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;The key connects with LED_CSN0 and LED_KEY0 is key 0, and the key connects withLED_CSN0 and LED_KEY1 is key 1.&lt;br&gt;The key connects with LED_CSN1 and LED_KEY0 is key 2, and the key connects withLED_CSN1 and LED_KEY1 is key 3.&lt;br&gt;The key connects with LED_CSN2 and LED_KEY0 is key 4, and the key connects withLED_CSN2 and LED_KEY1 is key 5.&lt;br&gt;The key connects with LED_CSN3 and LED_KEY0 is key 6, and the key connects withLED_CSN3 and LED_KEY1 is key 7." value="0x00000000" startoffset="0x000C">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="status_key7" description="Status of key 7.&lt;br&gt;0: released.&lt;br&gt;1: pressed." range="7" property="RO"/>
				<Member name="status_key6" description="Status of key 6.&lt;br&gt;0: released.&lt;br&gt;1: pressed." range="6" property="RO"/>
				<Member name="status_key5" description="Status of key 5.&lt;br&gt;0: released.&lt;br&gt;1: pressed." range="5" property="RO"/>
				<Member name="status_key4" description="Status of key 4.&lt;br&gt;0: released.&lt;br&gt;1: pressed." range="4" property="RO"/>
				<Member name="status_key3" description="Status of key 3.&lt;br&gt;0: released.&lt;br&gt;1: pressed." range="3" property="RO"/>
				<Member name="status_key2" description="Status of key 2.&lt;br&gt;0: released.&lt;br&gt;1: pressed." range="2" property="RO"/>
				<Member name="status_key1" description="Status of key 1.&lt;br&gt;0: released.&lt;br&gt;1: pressed." range="1" property="RO"/>
				<Member name="status_key0" description="Status of key 0.&lt;br&gt;0: released.&lt;br&gt;1: pressed." range="0" property="RO"/>
				<Register offset="0x000C"/>
			</RegisterGroup>
			<RegisterGroup name="LED_CLKTIM" description="LED_CLKTIM is a LedClk signal high/low level time parameter register used to define thefrequency of the LED synchronous serial clock LedClk.&lt;br&gt;If the system clock frequency is 100 MHz, the value of LED_CLKTIM is N, and thefrequency of the LED synchronous serial clock LedClk is F, the frequency F is calculated asfollows:&lt;br&gt;F = 100/[(N + 1) x 2 x 16] (Unit: MHz).&lt;br&gt;If the frequency of the LED synchronous serial clock LedClk is 500 kHz and the value ofLED_FRETIM is N, the value N is calculated as follows:&lt;br&gt;N = [100/(2 x 16)]/0.5 - 1&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Before configuring this register, set LED_CONTROL[led_en] to 0 (that is, disable the LEDdisplay function).&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x0010">
				<Member name="reserved" description="Reserved." range="31:4" property="-"/>
				<Member name="led_clk_tim" description="Frequency of the LED serial clock LedClk.&lt;br&gt;Note: In the LED_CLKTIM register, the minimum LED serial clock frequency can be set to 210 kHz." range="3:0" property="RW"/>
				<Register offset="0x0010"/>
			</RegisterGroup>
			<RegisterGroup name="LED_FRETIM" description="LED_FRETIM is an LED refresh rate register used to define the LED refresh rate and thekeypad scan rate.&lt;br&gt;If the system clock frequency is 100 MHz, the value of LED_CLKTIM is N, the value ofLED_FRETIM is M, and the LED refresh rate is F, the refresh rate F can be calculated withthe formula F = 100/[(N + 1) x 16 x 16 x 16 x (M + 1)] (unit: MHz).&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Before configuring this register, set LED_CONTROL[led_en] to 0 (that is, disable the LEDdisplay function).&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x0014">
				<Member name="reserved" description="Reserved." range="31:4" property="-"/>
				<Member name="led_fre_tim" description="LED refresh rate.&lt;br&gt;Note: In the LED_FRETIM register, the minimum refresh rate can be set to 108 Hz." range="3:0" property="RW"/>
				<Register offset="0x0014"/>
			</RegisterGroup>
			<RegisterGroup name="LED_FLASHTIM" description="LED_FLASHTIM is an LED blink rate register used to define the LED blink rate.&lt;br&gt;If the system clock frequency is 100 MHz, the value of LED_CLKTIM is N, the value ofLED_FRETIM is M, the value of LED_FLASHTIM is L, and the LED blink rate is F, theblink rate F can be calculated with the formula F = 100/[(N + 1) x 16 x 16 x 16 x (M + 1) x 4x (L + 1)] (unit: MHz).&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Before configuring this register, set LED_CONTROL[led_en] to 0 (that is, disable the LEDdisplay function).&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x0018">
				<Member name="reserved" description="Reserved." range="31:6" property="-"/>
				<Member name="led_flash_tim" description="LED blink rate.&lt;br&gt;Note: In the LED_FLASHTIM register, the minimum blink rate can be set to 2.8 Hz." range="5:0" property="RW"/>
				<Register offset="0x0018"/>
			</RegisterGroup>
			<RegisterGroup name="LED_KEYTIM" description="LED_KEYTIM is a keypad scan rate register used to define the keypad scan rate.&lt;br&gt;If the system clock frequency is 100 MHz, the value of LED_CLKTIM is N, the value ofLED_FRETIM is M, the value of LED_KEYTIM is L, and the keypad scan rate is F, the scanrate F can be calculated with the formula F = 100/[(N + 1) x 16 x 16 x 16 x (M + 1) x (L + 1)x2] (unit: MHz).&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Before configuring this register, set LED_CONTROL[led_en] to 0 (that is, disable the LEDdisplay function).&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x001C">
				<Member name="reserved" description="Reserved." range="31:4" property="-"/>
				<Member name="led_key_tim" description="Keypad scan rate.&lt;br&gt;Note: In the LED_KEYTIM register, the minimum blink rate can be set to 0.5 Hz." range="3:0" property="RW"/>
				<Register offset="0x001C"/>
			</RegisterGroup>
			<RegisterGroup name="LED_DATA1" description="LED_DATA1 is an LED 1 display data register used to configure the display data of LED 1.The LED module uses the serial output mode in the LSB first sequence." value="0x00000000" startoffset="0x0020">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="led_data1" description="Display data of LED 1." range="7:0" property="RW"/>
				<Register offset="0x0020"/>
			</RegisterGroup>
			<RegisterGroup name="LED_DATA2" description="LED_DATA2 is an LED 2 display data register used to configure the display data of LED 2." value="0x00000000" startoffset="0x0024">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="led_data2" description="Display data of LED 2." range="7:0" property="RW"/>
				<Register offset="0x0024"/>
			</RegisterGroup>
			<RegisterGroup name="LED_DATA3" description="LED_DATA3 is an LED 3 display data register used to configure the display data of LED 3." value="0x00000000" startoffset="0x0028">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="led_data3" description="Display data of LED 3." range="7:0" property="RW"/>
				<Register offset="0x0028"/>
			</RegisterGroup>
			<RegisterGroup name="LED_DATA4" description="LED_DATA4 is an LED 4 display data register used to configure the display data of LED 4." value="0x00000000" startoffset="0x002C">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="led_data4" description="Display data of LED 4." range="7:0" property="RW"/>
				<Register offset="0x002C"/>
			</RegisterGroup>
			<RegisterGroup name="LED_DATA5" description="LED_DATA5 is an LED 5 display data register used to configure the display data of LED 5." value="0x00000000" startoffset="0x0030">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="led_data5" description="Display data of LED 5." range="7:0" property="RW"/>
				<Register offset="0x0030"/>
			</RegisterGroup>
			<RegisterGroup name="LEDSysTim" description="LED system time frequency divider register. It is used to configure the global frequency divider for the LED clock.&lt;br&gt;Before configuring this register, set LEDControl bit[8] to 0 to disable the LED module.." value="0x00000000" startoffset="0x0034">
				<Member name="reserved" description="Reserved." range="31:4" property="-"/>
				<Member name="led_sys_tim" description="Configuring the LED system time frequency divider." range="3:0" property="RW"/>
				<Register offset="0x0034"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="PWM" i2cSupport="false">
			<Module baseAddress="0x10204000"/>
			<RegisterGroup name="PWM0_CFG" description="PWM0_CFG is a PWM0 configuration register." value="0x00C7018F" startoffset="0x0000">
				<Member name="pwm0_duty" description="The number of PWM0 high level beats is n+1. If the number is greater than or equal to the number of cycles, high level is always output." range="31:16" property="RW"/>
				<Member name="pwm0_period" description="The number of PWM0 cycles is n+1." range="15:0" property="RW"/>
				<Register offset="0x0000"/>
			</RegisterGroup>
			<RegisterGroup name="PWM0_CTRL" description="PWM0_CTRL is a PWM0 control register." value="0x00000000" startoffset="0x0004">
				<Member name="reserved" description="Reserved." range="31:2" property="RW"/>
				<Member name="pwm0_inv" description="Output control signal.&lt;br&gt;0: normal output.&lt;br&gt;1: Output the negated value." range="1" property="RW"/>
				<Member name="pwm0_enable" description="PWM0 enable signal.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="0" property="RW"/>
				<Register offset="0x0004"/>
			</RegisterGroup>
			<RegisterGroup name="PWM0_STATE" description="PWM0_STATE is a PWM0 status register." value="0x00C7018F" startoffset="0x0008">
				<Member name="pwm0_duty_st" description="The number of high level beats used by the PWM0 internal module is n+1." range="31:16" property="RO"/>
				<Member name="pwm0_period_st" description="The number of counting cycles used by the PWM0 internal module is n+1." range="15:0" property="RO"/>
				<Register offset="0x0008"/>
			</RegisterGroup>
			<RegisterGroup name="PWM1_CFG" description="PWM1_CFG is a PWM1 configuration register." value="0x00C7018F" startoffset="0x0010">
				<Member name="pwm1_duty" description="The number of PWM1 high level beats is n+1. If the number is greater than or equal to the number of cycles, high level is always output." range="31:16" property="RW"/>
				<Member name="pwm1_period" description="The number of PWM1 cycles is n+1." range="15:0" property="RW"/>
				<Register offset="0x0010"/>
			</RegisterGroup>
			<RegisterGroup name="PWM1_CTRL" description="PWM1_CTRL is a PWM1 control register." value="0x00000000" startoffset="0x0014">
				<Member name="reserved" description="Reserved." range="31:2" property="RW"/>
				<Member name="pwm1_inv" description="Output control signal.&lt;br&gt;0: normal output.&lt;br&gt;1: Output the negated value." range="1" property="RW"/>
				<Member name="pwm1_enable" description="PWM1 enable signal.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="0" property="RW"/>
				<Register offset="0x0014"/>
			</RegisterGroup>
			<RegisterGroup name="PWM1_STATE" description="PWM1_STATE is a PWM1 status register." value="0x00C7018F" startoffset="0x0018">
				<Member name="pwm1_duty_st" description="The number of high level beats used by the PWM1 internal module is n+1." range="31:16" property="RO"/>
				<Member name="pwm1_period_st" description="The number of counting cycles used by the PWM1 internal module is n+1." range="15:0" property="RO"/>
				<Register offset="0x0018"/>
			</RegisterGroup>
			<RegisterGroup name="PWM2_CFG" description="PWM2_CFG is a PWM2 configuration register." value="0x00C7018F" startoffset="0x0020">
				<Member name="pwm2_duty" description="The number of PWM2 high level beats is n+1. If the number is greater than or equal to the number of cycles, high level is always output." range="31:16" property="RW"/>
				<Member name="pwm2_period" description="The number of PWM2 cycles is n+1." range="15:0" property="RW"/>
				<Register offset="0x0020"/>
			</RegisterGroup>
			<RegisterGroup name="PWM2_CTRL" description="PWM2_CTRL is a PWM2 control register." value="0x00000000" startoffset="0x0024">
				<Member name="reserved" description="Reserved." range="31:2" property="RW"/>
				<Member name="pwm2_inv" description="Output control signal.&lt;br&gt;0: normal output.&lt;br&gt;1: Output the negated value." range="1" property="RW"/>
				<Member name="pwm2_enable" description="PWM2 enable signal.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="0" property="RW"/>
				<Register offset="0x0024"/>
			</RegisterGroup>
			<RegisterGroup name="PWM2_STATE" description="PWM2_STATE is a PWM2 status register." value="0x00C7018F" startoffset="0x0028">
				<Member name="pwm2_duty_st" description="The number of high level beats used by the PWM2 internal module is n+1." range="31:16" property="RO"/>
				<Member name="pwm2_period_st" description="The number of counting cycles used by the PWM2 internal module is n+1." range="15:0" property="RO"/>
				<Register offset="0x0028"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="SCI" i2cSupport="false">
			<Module baseAddress="0x101F3000"/>
			<Module baseAddress="0x101F4000"/>
			<RegisterGroup name="SCI_DATA" description="SCI_DATA is an SCI data register used to transmit or receive characters and functions as adata interface between the SCI and the software.&lt;br&gt;The software can write the register only after setting SCI_CR1[mode] to 1. Whenwrite operation does not take effect.Register Name" value="0x0000" startoffset="0x0000">
				<Member name="reserved" description="Reserved." range="15:9" property="-"/>
				<Member name="parity" description="Parity check error flag. This bit is transmitted with the data. When receiving the data, the software determines whether the parity check is correct according to this bit.&lt;br&gt;0: correct.&lt;br&gt;1: incorrect." range="8" property="RO"/>
				<Member name="scidata" description="8-bit character for the data read/write operation." range="7:0" property="RW"/>
				<Register offset="0x0000"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_CR0" description="SCI_CR0 is an SCI control register 0 used to control the information such as clock stop,parity check, handshake mechanism, and transferred bit definition.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;SCI_CR0[paritybit] is the functional bit determining whether to enable the parity checkduring data transmission or reception. When the value of this bit is 0, the received ortransmitted frame structure does not contain parity bit. The T0 or T1 protocol requires thatthis bit is set be 1.&lt;br&gt;&lt;/li&gt;&lt;li&gt;SCI_CR0[clkdis] and [clkval] are used to configure the smart card clock enable and thepin status after the clock is disabled.&lt;br&gt;&lt;/li&gt;&lt;li&gt;SCI_CR0[rxnak] and [txnak] are used to enable the handshake mechanism between theSCI and the smart card. The handshaking refers to the condition that the receiver detectsparity check error in the data transmitted by the transmitter and requests the transmitter tore-transmit the character by pulling down the data line (I/O). The handshake mechanismsfor transmission and reception are separately enabled. The maximum retry count oftransmission or reception is specified by the SCI_RETRY register. Because character re-transmission is not allowed during ATR reception, the handshake mechanism should bedisabled, that is, the related transmission or reception control bit should be set to 0.&lt;br&gt;&lt;/li&gt;&lt;li&gt;SCI_CR0[rxparity] and [txparity] are used to control the parity check mode in the receiveor transmit mode.&lt;br&gt;In direct convention, the low level of the data line (I/O) represents the logic 0 and indicatesthat the least significant bit (LSB) of the data follows the start position of a frame. SCI_CR0bit[1:0] with value 0b00 indicates the direct convention.&lt;br&gt;In inverse convention, the low level of the data line (I/O) represents the logic 1 and indicatesthat the most significant bit (MSB) of the data follows the start position of a frame. SCI_CR0bit[1:0] with value 0b11 indicates the inverse convention.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;You can separately set the bit order and set whether to negate the data bits and parity bit. Therefore,the SCI can be configured to support non-standard protocol (indirect convention or inverseconvention).&lt;br&gt;&lt;/li&gt;&lt;li&gt;Before the starting TS character of the ATR is received, SCI_CR0 bit[1:0] must be set to 0b00. If theTS character indicates that the smart card complies with the inverse convention, SCI_CR0 bit[1:0]must be set to 0b11 before the register receives the next ATR character.&lt;/li&gt;&lt;/ul&gt;" value="0x0000" startoffset="0x0004">
				<Member name="reserved" description="Reserved." range="15:11" property="-"/>
				<Member name="detect_inv" description="Configuration of the valid level for the detct input signal.&lt;br&gt;0: active high.&lt;br&gt;1: active low." range="10" property="RW"/>
				<Member name="vccen_inv" description="Configuration of the valid level for the vccen output signal.&lt;br&gt;0: active high.&lt;br&gt;1: active low." range="9" property="RW"/>
				<Member name="paritybit" description="Parity bit transfer enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="8" property="RW"/>
				<Member name="clkval" description="Smart card clock status when the clock stops.&lt;br&gt;0: low level.&lt;br&gt;1: high level." range="7" property="RW"/>
				<Member name="clkdis" description="Control bit for starting and stopping the clock.&lt;br&gt;0: Start the clock.&lt;br&gt;1: Stop the clock." range="6" property="RW"/>
				<Member name="rxnak" description="Action control in the transmit mode. The receiver indicates the parity check error by pulling down the I/O line. This bit can be used to control whether to detect that the receiver has pulled down the I/O line.&lt;br&gt;0: The SCI does not detect whether the receiver has pulled down the I/O line.&lt;br&gt;1: The SCI detects whether the receiver has pulled down the I/O line." range="5" property="RW"/>
				<Member name="rxparity" description="Parity check mode control in the receive mode.&lt;br&gt;0: even parity check.&lt;br&gt;1: odd parity check." range="4" property="RW"/>
				<Member name="txnak" description="Action control in the transmit mode.&lt;br&gt;0: The SCI does not detect whether the receiver has pulled down the I/O line.&lt;br&gt;1: The SCI detects whether the receiver has pulled down the I/O line to indicate parity check error." range="3" property="RW"/>
				<Member name="txparity" description="Parity check mode control in the transmit mode.&lt;br&gt;0: even parity check.&lt;br&gt;1: odd parity check." range="2" property="RW"/>
				<Member name="order" description="Bit order of the character.&lt;br&gt;0: LSB is received/transmitted by following the start bit.&lt;br&gt;1: MSB is received/transmitted by following the start bit." range="1" property="RW"/>
				<Member name="sense" description="Detect the data bits and parity bit on the I/O line after these bits are negated.&lt;br&gt;0: Detect directly.&lt;br&gt;1: Detect after the bits are negated." range="0" property="RW"/>
				<Register offset="0x0004"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_CR1" description="SCI_CR1 is an SCI control register 1 used to control the synchronous/asynchronous cardtransfer mode, transmit/receive mode, block timeout, and ATR timeout." value="0x0000" startoffset="0x0008">
				<Member name="reserved" description="Reserved." range="15:7" property="-"/>
				<Member name="synccard" description="Synchronous/asynchronous card operation mode.&lt;br&gt;0: asynchronous mode.&lt;br&gt;1: synchronous mode." range="6" property="RW"/>
				<Member name="exdbnce" description="Card insertion detection stabilization waiting time down counter selection. For details about the usage of the counter, see the description about the SCI_STABLE register.&lt;br&gt;0: Use the entire internal down counter.&lt;br&gt;1: Bypass the unprogrammable part of the internal down counter." range="5" property="RW"/>
				<Member name="bgten" description="Block guard counter enable bit used to enable the clock guard mechanism.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="4" property="RW"/>
				<Member name="clkz1" description="Configuration of the SCI_CLK pin output.&lt;br&gt;0: CMOS output.&lt;br&gt;1: OD output." range="3" property="RW"/>
				<Member name="mode" description="Configuration of the receive/transmit mode.&lt;br&gt;0: receive mode.&lt;br&gt;1: transmit mode." range="2" property="RW"/>
				<Member name="blken" description="Block-timeout counting mechanism enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="1" property="RW"/>
				<Member name="atrden" description="ATR-timeout counting mechanism enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="0" property="RW"/>
				<Register offset="0x0008"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_CR2" description="SCI_CR2 is an SCI control register 2. The write operation on the related bits of this registertriggers the SCI to activate, release and soft-reset the card. When the SCI is releasing thesmart card, the write operation on the register will be omitted. In other cases, the SCIimmediately transmits the card release sequence when SCI_CR2[finish] is set to 1.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;The software is allowed to perform write operation on the register only at proper cardoperation stage. An improper write operation will cause unexpected results.&lt;br&gt;&lt;/li&gt;&lt;li&gt;The software can soft-reset the card only after the smart card is activated.&lt;/li&gt;&lt;/ul&gt;" value="0x0000" startoffset="0x000C">
				<Member name="reserved" description="Reserved." range="15:3" property="-"/>
				<Member name="wreset" description="Soft reset operation on the card.&lt;br&gt;0: no effect.&lt;br&gt;1: Soft-reset the card.&lt;br&gt;Note: This bit is writable only after the activation sequence is complete. Otherwise, the write operation does not take effect." range="2" property="WO"/>
				<Member name="finish" description="Release operation on the smart card.&lt;br&gt;0: no effect.&lt;br&gt;1: Release the smart card.&lt;br&gt;Note: This bit is writable only after the smart card is detected by the card reader. Otherwise, the write operation does not take effect." range="1" property="WO"/>
				<Member name="startup" description="Activate operation on the smart card.&lt;br&gt;0: no effect.&lt;br&gt;1: Activate the smart card.&lt;br&gt;Note: This bit is writable only after the smart card is detected by the card reader. Otherwise, the write operation does not take effect." range="0" property="WO"/>
				<Register offset="0x000C"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_CLKICC" description="SCI_CLKICC is a smart card clock frequency register defining the clock divider of theexternal smart card clock. The calculation formula of the smart card clock frequency isFSCI_CLK=FREFCLK/（clkicc+1）*2, where FSCI_CLK indicates the clock frequency, FREFCLKindicates the reference clock frequency, and clkicc indicates the configuration value of" value="0x0000" startoffset="0x0010">
				<Member name="reserved" description="Reserved." range="15:8" property="-"/>
				<Member name="clkicc" description="Clock divider of the smart card clock that is obtained from the clock prescale of the reference clock can be set to a value ranging from 0 to 255." range="7:0" property="RW"/>
				<Register offset="0x0010"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_VALUE" description="SCI_VALUE is an intra-ETU SCI_BAUD cycle register used to calculate the ETU. Theregister can be configured with a value ranging from 5 to 255. The ETU calculation formula isETU=value *(1+baud) / FREFCLK, where FREFCLK indicates the reference clock frequency,baud indicates the configuration value of SCI_BAUD[baud], and value indicates theconfiguration value of SCI_VALUE[value]." value="0x0000" startoffset="0x0014">
				<Member name="reserved" description="Reserved." range="15:8" property="-"/>
				<Member name="value" description="Number of SCIBAUD cycles of each ETU." range="7:0" property="RW"/>
				<Register offset="0x0014"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_BAUD" description="SCI_BAUD is a baud rate clock prescale value register used to calculate the ETU. Theregister can be configured with a value ranging from 0x1 to 0xFFFF. For details about thecalculation formula, see the description about the SCI_VALUE register." value="0x0000" startoffset="0x0018">
				<Member name="baud" description="Clock prescale value of the baud rate." range="15:0" property="RW"/>
				<Register offset="0x0018"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_TIDE" description="SCI_TIDE is a receive/transmit FIFO overrun threshold register.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;Characters in TXFIFO will be removed only after they are successfully transmitted." value="0x0000" startoffset="0x001C">
				<Member name="reserved" description="Reserved." range="15:12" property="-"/>
				<Member name="rxtide" description="Triggering value of the SCIRXTIDEINTR interrupt.&lt;br&gt;When the number of characters in RXFIFO is greater than or equal to SCI_TIDE[rxtide], the receive FIFO overrun interrupt will be triggered." range="11:6" property="RW"/>
				<Member name="txtide" description="Triggering value of the SCITXTIDEINTR interrupt.&lt;br&gt;When the number of characters in TXFIFO is smaller than or equal to SCI_TIDE[txtide], the transmit FIFO overrun interrupt will be triggered." range="5:0" property="RW"/>
				<Register offset="0x001C"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_DMACR" description="SCI_DMACR is a DMA control register used to control the DMA to transmit and receive data." value="0x0000" startoffset="0x0020">
				<Member name="reserved" description="Reserved." range="15:2" property="-"/>
				<Member name="txdmae" description="DMA enable bit of the transmit FIFO.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="1" property="RW"/>
				<Member name="rxdmae" description="DMA enable bit of the receive FIFO.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="0" property="RW"/>
				<Register offset="0x0020"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_STABLE" description="SCI_STABLE is a smart card insertion stabilization time register. After the smart card verifiesthat the SCI_DETECT signal is valid, the signal must keep stable for the fixed time TSTABLEspecified by this register. After the TSTABLE ends (in seconds), an interrupt can be triggered,indicating that the smart card is correctly inserted. The specific operations are as follows:&lt;br&gt;&lt;ul&gt;&lt;li&gt;When the entire internal down counter is selected, that is, when SCI_CR1[exdbnce] isset to 0, TSTABLE=65535*（1+stable）*TREFCLK. In this formula, TREFCLK indicates theSCI reference clock cycle (1/48 MHz) and stable indicates the configuration value of SCI_STABLE[stable].&lt;br&gt;&lt;/li&gt;&lt;li&gt;When the unprogrammable part of the down counter is bypassed, that is, when SCI_CR1[exdbnce] is set to 1,TSTABLE=stable*TREFCLK&lt;/li&gt;&lt;/ul&gt;" value="0x0000" startoffset="0x0024">
				<Member name="reserved" description="Reserved." range="15:10" property="-"/>
				<Member name="stable" description="Time during which the card stably keeps the high level." range="9:0" property="RW"/>
				<Register offset="0x0024"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_ATIME" description="SCI_ATIME is a smart card activation time register. The SCI_ATIME[atime] bit correspondsto SCIATIME in Figure 10-8 and is used to indicate the hold time of the three stages of cardreset and activation.&lt;br&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;To reset the card, you must set SCI_ATIME[atime] to at least 40000 smart card clock (SCI_CLK)cycles.&lt;br&gt;&lt;/li&gt;&lt;li&gt;The setting of this parameter must meet the requirement of the smart card for stable power.&lt;/li&gt;&lt;/ul&gt;" value="0x0000" startoffset="0x0028">
				<Member name="atime" description="Hold time for each of the three stages of the card activation sequence. The timing for the SCI to release the smart card is shown in Figure 10-8." range="15:0" property="RW"/>
				<Register offset="0x0028"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_DTIME" description="SCI_DTIME is a smart card release time register. The SCI_DTIME[dtime] bit corresponds toSCIDTIME in Figure 10-8 and is used to indicate the duration of the three stages for cardrelease." value="0x0000" startoffset="0x002C">
				<Member name="dtime" description="Duration (SCI reference clock cycles) for each of the three stages of the card release sequence. The timing for the SCI to release the smart card is shown in Figure 10-9." range="15:0" property="RW"/>
				<Register offset="0x002C"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_ATRSTIME" description="SCI_ATRSTIME is an ATR wait-to-receive time threshold register. The SCI_ATRSTIME[dtime] bit corresponds to SCIATRSTIME in Figure 10-8. This register defines the thresholdof the time starting from the end of the smart card release to the beginning of the reception ofthe first ATR character. If the ATR wait-to-receive period times out, an interrupt will betriggered and SCI_RIS[atrstoutim] will be set to 1.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;SCI_ATRSTIME[atrstime] must be initialized to 40000 SCI_CLK smart card clock cycles." value="0x0000" startoffset="0x0030">
				<Member name="atrstime" description="Time threshold for the ATR reception start timeout (SCI card clock SCI_CLK cycles)." range="15:0" property="RW"/>
				<Register offset="0x0030"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_ATRDTIME" description="SCI_ATRDTIME is an ATR receive time threshold register. When the SCI receives the ATR(starting from the reception of the first ATR character to the completion of the last ATRcharacter reception), if the whole reception process exceeds the time defined in this register(with ETU as the unit), an interrupt will be triggered and SCI_RIS[atrdtoutris] will be set to 1.&lt;br&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Before this register is used, &lt;/li&gt;&lt;li&gt;SCI_CR1[atrden] must be set to 1 to enable the counting mechanism.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;Set the register to 19200 ETUs, that is 0x4B00, as required by the protocol." value="0x0000" startoffset="0x0034">
				<Member name="atrdtime" description="Time threshold (with ETU as the unit) for the timeout of the ATR reception starting from the start bit of the first ATR character." range="15:0" property="RW"/>
				<Register offset="0x0034"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_STOPTIME" description="SCI_STOPTIME is a clock stop time register. When the clock stops and the time defined bySCI_STOPTIME passes (with SCI smart card clock SCI_CLK cycle as the unit), the smartcard clock becomes invalid, an interrupt is triggered, and SCI_RIS[clkstpris] is set to 1.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;The minimum value of this register should be 1860 SCI clock cycles as required by the protocol, that is,SCI_STOPTIME[stoptime] should be set to 0x744." value="0x0000" startoffset="0x0038">
				<Member name="reserved" description="Reserved." range="15:12" property="-"/>
				<Member name="stoptime" description="Smart card clock stop time (SCI smart card clock SCI_CLK cycles)." range="11:0" property="RW"/>
				<Register offset="0x0038"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_STARTTIME" description="SCI_STARTIME is a smart card clock restoration time register. When the start clock restoresand the time defined by SCI_STARTTIME passes (with SCI smart card clock SCI_CLK cycleas the unit), the SCI and the smart card can transfer data to each other, an interrupt is triggeredand SCI_RIS[clkactris] is set to 1.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;The minimum value of this register should be 700 SCI clock cycles as required by the protocol, that is,SCI_STARTTIME[starttimr] should be set to at least 0x2BC." value="0x0000" startoffset="0x003C">
				<Member name="reserved" description="Reserved." range="15:12" property="-"/>
				<Member name="starttime" description="Duration from the start of the card clock to the time when data transfer is possible (with SCI card clock SCI_CLK cycle as the unit)." range="11:0" property="RW"/>
				<Register offset="0x003C"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_RETRY" description="SCI_RETRY is a transmit/receive retry count register. This register defines the number ofallowable receive or transmit retries.&lt;br&gt;&lt;ul&gt;&lt;li&gt;When SCI_CR0[txnak] is enabled, the SCI detects whether the receiver marks a paritycheck error. SCI_RETRY[rxretry] defines the maximum number of re-transmissionattempts when a parity check error occurs. If the retry count exceeds the maximumnumber, an interrupt is triggered and SCI_RIS[txerrris] is set 1.&lt;br&gt;&lt;/li&gt;&lt;li&gt;When SCI_CR0[rxnak] is enabled, the SCI detects whether the received data includes aparity check error. SCI_RETRY[txretry] defines the maximum number of re-transmission attempts when a parity check error occurs. If the retry count exceeds themaximum number and the parity check error persists, SCI_DATA[parity] is set 1.&lt;/li&gt;&lt;/ul&gt;" value="0x0000" startoffset="0x0040">
				<Member name="reserved" description="Reserved." range="15:6" property="-"/>
				<Member name="rxretry" description="Maximum receive retry count when a parity check error occurs in the received data." range="5:3" property="RW"/>
				<Member name="txretry" description="Maximum transmit retry count when a parity check error occurs in the transmitted data." range="2:0" property="RW"/>
				<Register offset="0x0040"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_CHTIMELS" description="&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;The SCI_CHTIME register consists of the lower 16 bits register SCI_CHTIMELS and theupper 16 bits register SCI_CHTIMEMS. When the software writes the SCI_CHTIMEMSregister, SCI_CHTIME does not take effect immediately. When the software writes theconfiguring SCI_CHTIME, you need to set the upper 16 bits first and then set the lower 16bits.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;SCI_CHTIMELS is a character reception interval timeout threshold lower 16 bits register.&lt;br&gt;The SCI_CHTIME register defines the maximum interval (with ETU as the unit) between thestart edges of two received consecutive characters. If the interval between two receivedcharacters times out, an interrupt will be triggered and SCI_RIS[chtoutris] is set to 1.&lt;br&gt;Total Reset Value" value="0x0000" startoffset="0x0044">
				<Member name="chtimels" description="Lower 16 bits of the character reception interval timeout threshold register SCICHTIME." range="15:0" property="RW"/>
				<Register offset="0x0044"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_CHTIMEMS" description="SCI_CHTIMEMS is a character reception interval timeout threshold upper 16 bits register." value="0x0000" startoffset="0x0048">
				<Member name="chtimems" description="Upper 16 bits of the character reception interval timeout threshold register SCICHTIME." range="15:0" property="RW"/>
				<Register offset="0x0048"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_BLKTIMELS" description="&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;The SCI_BLKTIME register consists of the lower 16 bits register SCI_BLKTIMELS and theupper 16 bit register SCI_BLKTIMEMS. When the software writes the SCI_BLKTIMEMSregister, SCI_BLKTIME does not take effect immediately. When the software writes theSCI_BLKTIME, you need to set the upper 16 bits first and then set the lower 16 bits.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;SCI_BLKTIMELS is a block reception interval timeout threshold lower 16 bits register.&lt;br&gt;SCI_BLKTIME defines the maximum allowable interval (with ETU as the unit) between tworeceived blocks. The interval begins at the time when the start edge of the last character istransmitted to the card and ends at the time when the first received character is returned fromthe card. If the interval times out, an interrupt is triggered and SCI_RIS[blkoutim] is set 1.Total Reset Value" value="0x0000" startoffset="0x004C">
				<Member name="blktimels" description="Lower 16 bits of the block reception interval timeout threshold register SCIBLKTIME." range="15:0" property="RW"/>
				<Register offset="0x004C"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_BLKTIMEMS" description="SCI_BLKTIMES is a block reception interval timeout threshold upper 16 bits register." value="0x0000" startoffset="0x0050">
				<Member name="blktimems" description="Upper 16 bits of the block reception interval timeout threshold register SCIBLKTIME." range="15:0" property="RW"/>
				<Register offset="0x0050"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_CHGUARD" description="SCI_CHGUARD is an inter-character guard interval register. The register defines theminimum extra guard interval (with ETU as the unit) between the start edges of twoconsecutive characters when the SCI continuously transfers characters to the card. Theregister value is determined by the global interface byte TC1 (obtained from the ATRsequence) defined in the protocol." value="0x0000" startoffset="0x0054">
				<Member name="reserved" description="Reserved." range="15:8" property="-"/>
				<Member name="scichguard" description="Inter-character guard interval (with ETU as the unit)." range="7:0" property="RW"/>
				<Register offset="0x0054"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_BLKGUARD" description="SCI_BLKGUARD is an inter-block guard interval register. When two consecutive charactersare transmitted reversely, the interval between the start edges is SCI_BLKGUARD." value="0x0000" startoffset="0x0058">
				<Member name="reserved" description="Reserved." range="15:8" property="-"/>
				<Member name="sciblkguard" description="Minimum period (with ETU as the unit) between the two consecutive characters transmitted reversely." range="7:0" property="RW"/>
				<Register offset="0x0058"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_RXTIME" description="SCI_RXTIME is a receive FIFO read timeout threshold register. When characters in thereceive FIFO are not read within the time defined by SCI_RXTIME, a receive FIFO readtimeout interrupt is triggered and SCI_RIS[rtoutris] is set to 1.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;In the normal use of the receive FIFO read timeout interrupt function, SCI_RXTIME[rxtime]cannot be set to 0x0000.&lt;/li&gt;&lt;/ul&gt;" value="0x0000" startoffset="0x005C">
				<Member name="rxtime" description="Receive FIFO read timeout value (with SCI card clock SCI_CLK cycle as the unit)." range="15:0" property="RW"/>
				<Register offset="0x005C"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_FIFOSTATUS" description="SCI_FIFOSTATUS is an FIFO status register." value="0x000A" startoffset="0x0060">
				<Member name="reserved" description="Reserved." range="15:4" property="-"/>
				<Member name="rxfe" description="Empty status of the receive FIFO.&lt;br&gt;0: not empty.&lt;br&gt;1: empty." range="3" property="RO"/>
				<Member name="rxff" description="Full status of the receive FIFO.&lt;br&gt;0: not full.&lt;br&gt;1: full." range="2" property="RO"/>
				<Member name="txfe" description="Empty status of the transmit FIFO.&lt;br&gt;0: not empty.&lt;br&gt;1: empty." range="1" property="RO"/>
				<Member name="txff" description="Full status of the transmit FIFO.&lt;br&gt;0: not full.&lt;br&gt;1: full." range="0" property="RO"/>
				<Register offset="0x0060"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_TXCOUNT" description="&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;If errors (T0 protocol) occur when characters are transmitted to the smart card and the retrycount exceeds the allowable value defined by SCI_RETRY, an interrupt will be triggered andcleared before the next transmission attempt.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;SCI_TXCOUNT is a transmit FIFO data count register." value="0x0000" startoffset="0x0064">
				<Member name="reserved" description="Reserved." range="15:6" property="-"/>
				<Member name="txcount" description="Read this register to return the number of characters in the transmit FIFO, and write any value to this register to clear the transmit FIFO." range="5:0" property="RW"/>
				<Register offset="0x0064"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_RXCOUNT" description="SCI_RXCOUNT is a receive FIFO data count register." value="0x0000" startoffset="0x0068">
				<Member name="reserved" description="Reserved." range="15:6" property="-"/>
				<Member name="rxcount" description="Read this register to return the number of characters in the receive FIFO, and write any value to this register to clear the receive FIFO." range="5:0" property="RW"/>
				<Register offset="0x0068"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_IMSC" description="SCI_IMSC is an interrupt mask register." value="0x0000" startoffset="0x006C">
				<Member name="reserved" description="Reserved." range="15" property="-"/>
				<Member name="txtideim" description="Transmit FIFO overrun interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="14" property="RW"/>
				<Member name="rxtideim" description="Receive FIFO overrun interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="13" property="RW"/>
				<Member name="clkactim" description="Smart card clock restoration interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="12" property="RW"/>
				<Member name="clkstpim" description="Smart card clock stop interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="11" property="RW"/>
				<Member name="rorim" description="Reception overload interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="10" property="RW"/>
				<Member name="rtoutim" description="Read timeout interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="9" property="RW"/>
				<Member name="chtoutim" description="Character reception interval timeout interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="8" property="RW"/>
				<Member name="blktoutim" description="Block reception interval timeout interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="7" property="RW"/>
				<Member name="atrdtoutim" description="ATR reception timeout interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="6" property="RW"/>
				<Member name="atrstoutim" description="ATR wait timeout interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="5" property="RW"/>
				<Member name="txerrim" description="Transmit error interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="4" property="RW"/>
				<Member name="carddnim" description="Smart card release interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="3" property="RW"/>
				<Member name="cardupim" description="Smart card activation interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="2" property="RW"/>
				<Member name="cardoutim" description="Smart card remove interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="1" property="RW"/>
				<Member name="cardinim" description="Smart card insertion interrupt mask.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="0" property="RW"/>
				<Register offset="0x006C"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_RIS" description="SCI_RIS is a raw interrupt register that records the raw interrupts before they are masked." value="0x400A" startoffset="0x0070">
				<Member name="reserved" description="Reserved." range="15" property="-"/>
				<Member name="txtideris" description="Raw interrupt status of the transmit FIFO overrun interrupt. When the number of characters in the transmit FIFO is less than or equal to the threshold, this bit is set to 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="14" property="RO"/>
				<Member name="rxtideris" description="Raw interrupt status of the receive FIFO overrun interrupt. When the number of characters in the receive FIFO is greater than or equal to the threshold, this bit is set to 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="13" property="RO"/>
				<Member name="clkactris" description="Raw interrupt status of the smart card clock restoration interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="12" property="RO"/>
				<Member name="clkstpris" description="Raw interrupt status of the smart card clock stop interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="11" property="RO"/>
				<Member name="rorris" description="Raw interrupt status of the reception overload interrupt. If the receive FIFO receives new characters when it is full, this bit is set to 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="10" property="RO"/>
				<Member name="rtoutris" description="Raw interrupt status of the read timeout interrupt. If the CPU does not read data from the receive FIFO within the preset time, this bit is set to 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="9" property="RO"/>
				<Member name="chtoutris" description="Raw interrupt status of the character reception interval timeout interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="8" property="RO"/>
				<Member name="blktoutris" description="Raw interrupt status of the block reception interval timeout interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="7" property="RO"/>
				<Member name="atrdtoutris" description="Raw interrupt status of the ATR reception timeout interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="6" property="RO"/>
				<Member name="atrstoutris" description="Raw interrupt status of the ATR wait timeout interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="5" property="RO"/>
				<Member name="txerrris" description="Raw interrupt status of the transmit error interrupt. When an error occurs in the transmitted data, if the retry count reaches the preset value and the error persists, this bit is set to 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="4" property="RO"/>
				<Member name="carddnris" description="Raw interrupt status of the smart card release interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="3" property="RO"/>
				<Member name="cardupris" description="Raw interrupt status of the smart card activation interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="2" property="RO"/>
				<Member name="cardoutris" description="Raw interrupt status of the smart card remove interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="1" property="RO"/>
				<Member name="cardinris" description="Raw interrupt status of the smart card insertion interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="0" property="RO"/>
				<Register offset="0x0070"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_MIS" description="SCI_MIS is a masked interrupt register that records the results of the masked raw interrupts." value="0x0000" startoffset="0x0074">
				<Member name="reserved" description="Reserved." range="15" property="-"/>
				<Member name="txtidemis" description="Masked interrupt status of the transmit FIFO overrun interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="14" property="RO"/>
				<Member name="rxtidemis" description="Masked interrupt status of the receive FIFO overrun interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="13" property="RO"/>
				<Member name="clkactmis" description="Masked interrupt status of the smart card clock restoration interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="12" property="RO"/>
				<Member name="clkstpmis" description="Masked interrupt status of the smart card clock stop interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="11" property="RO"/>
				<Member name="rormis" description="Masked interrupt status of the reception overload interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="10" property="RO"/>
				<Member name="rtoutmis" description="Masked interrupt status of the read timeout interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="9" property="RO"/>
				<Member name="chtoutmis" description="Masked interrupt status of the character reception interval timeout interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="8" property="RO"/>
				<Member name="blktoutmis" description="Masked interrupt status of the block reception interval timeout interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="7" property="RO"/>
				<Member name="atrdtoutmis" description="Masked interrupt status of the ATR reception timeout interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="6" property="RO"/>
				<Member name="atrstoutim" description="Masked interrupt status of the ATR wait timeout interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="5" property="RO"/>
				<Member name="txerrmis" description="Masked interrupt status of the transmit error interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="4" property="RO"/>
				<Member name="carddnmis" description="Masked interrupt status of the smart card release interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="3" property="RO"/>
				<Member name="cardupmis" description="Masked interrupt status of the smart card activation interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="2" property="RO"/>
				<Member name="cardoutmis" description="Masked interrupt status of the smart card remove interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="1" property="RO"/>
				<Member name="cardinmis" description="Masked interrupt status of the smart card insertion interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="0" property="RO"/>
				<Register offset="0x0074"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_ICR" description="SCI_ICR is an interrupt clear register." value="0x0000" startoffset="0x0078">
				<Member name="reserved" description="Reserved." range="15:13" property="-"/>
				<Member name="clkactic" description="Smart card clock restoration interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="12" property="WO"/>
				<Member name="clkstpic" description="Smart card clock stop interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="11" property="WO"/>
				<Member name="roric" description="Reception overload interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="10" property="WO"/>
				<Member name="rtoutic" description="Read timeout interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="9" property="WO"/>
				<Member name="chtoutic" description="Character reception interval timeout interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="8" property="WO"/>
				<Member name="blktoutic" description="Block reception interval timeout interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="7" property="WO"/>
				<Member name="atrdtoutic" description="ATR reception timeout interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="6" property="WO"/>
				<Member name="atrstoutic" description="ATR wait timeout interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="5" property="WO"/>
				<Member name="txerric" description="Transmit error interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="4" property="WO"/>
				<Member name="carddnic" description="Smart card release interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="3" property="WO"/>
				<Member name="cardupic" description="Smart card activation interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="2" property="WO"/>
				<Member name="cardoutic" description="Smart card remove interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="1" property="WO"/>
				<Member name="cardinic" description="Smart card insertion interrupt clear.&lt;br&gt;0: not cleared.&lt;br&gt;1: clear." range="0" property="WO"/>
				<Register offset="0x0078"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_SYNCACT" description="SCI_SYNCACT is a synchronous mode activation register. This register is used for dataenable, clock enable, reset, and power control in synchronous mode and provides a statusregister containing bits that can automatically update during activation, release and hot reset." value="0x0000" startoffset="0x007C">
				<Member name="reserved" description="Reserved." range="15:11" property="-"/>
				<Member name="cardpresent" description="Status bit indicating the presence of a smart card.&lt;br&gt;0: No smart card exists.&lt;br&gt;1: A smart card exists." range="10" property="RO"/>
				<Member name="nscidataen" description="Tristate enable of the external off-chip buffer of the data.&lt;br&gt;0: enabled.&lt;br&gt;1: disabled." range="9" property="RO"/>
				<Member name="nscidataouten" description="Tristate enable of the data buffer.&lt;br&gt;0: enabled.&lt;br&gt;1: disabled." range="8" property="RO"/>
				<Member name="sciclkout" description="SCI clock output enable.&lt;br&gt;0: enabled.&lt;br&gt;1: disabled." range="7" property="RO"/>
				<Member name="nsciclken" description="Tristate enable of the external off-chip buffer of the clock.&lt;br&gt;0: enabled.&lt;br&gt;1: disabled." range="6" property="RO"/>
				<Member name="nsciclkouten" description="Tristate enable of the clock buffer.&lt;br&gt;0: enabled.&lt;br&gt;1: disabled." range="5" property="RO"/>
				<Member name="fcb" description="Function code bit, indicating the command type, together with CRESET." range="4" property="RW"/>
				<Member name="dataen" description="SCI data output enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="3" property="RW"/>
				<Member name="clken" description="SCI clock output enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="2" property="RW"/>
				<Member name="creset" description="Card reset signal control enable.&lt;br&gt;0: enabled.&lt;br&gt;1: disabled." range="1" property="RW"/>
				<Member name="power" description="Card power control (VCC) enable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled." range="0" property="RW"/>
				<Register offset="0x007C"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_SYNCTX" description="SCI_SYNCTX is a synchronous mode transmit clock and data stream register used to controlthe transmit clock and the data in synchronous mode." value="0x0000" startoffset="0x0080">
				<Member name="reserved" description="Reserved." range="15:6" property="-"/>
				<Member name="wfcb" description="Function code bit in synchronous mode, indicating the command type, together with wrst." range="5" property="RW"/>
				<Member name="wrst" description="Card reset signal enable bit in synchronous mode.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="4" property="RW"/>
				<Member name="wclken" description="Tristate enable of the external off-chip buffer of the clock in synchronous mode.&lt;br&gt;0: enabled.&lt;br&gt;1: disabled." range="3" property="RW"/>
				<Member name="wdataen" description="Card data output enable bit in synchronous mode.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="2" property="RW"/>
				<Member name="wclk" description="SCI clock enable bit in synchronous mode.&lt;br&gt;0: enabled.&lt;br&gt;1: disabled." range="1" property="RW"/>
				<Member name="wdata" description="SCI data enable bit in synchronous mode.&lt;br&gt;0: enabled.&lt;br&gt;1: disabled." range="0" property="RW"/>
				<Register offset="0x0080"/>
			</RegisterGroup>
			<RegisterGroup name="SCI_SYNCRX" description="SCI_SYNCRX is a synchronous mode receive clock and data stream register used to controlthe receive clock and the data in synchronous mode." value="0x0000" startoffset="0x0084">
				<Member name="reserved" description="Reserved." range="15:2" property="-"/>
				<Member name="rclk" description="Raw clock value." range="1" property="RO"/>
				<Member name="rdata" description="Raw data value." range="0" property="RO"/>
				<Register offset="0x0084"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="SPI" i2cSupport="false">
			<Module baseAddress="0x101FF000"/>
			<RegisterGroup name="SPICR0" description="SPICR0 is control register 0." value="0x0000" startoffset="0x000">
				<Member name="scr" description="Serial clock rate ranging from 0 to 255. The SCR value is used to generate the transmit and receive bit rates of the SPI. The bit rate is FSPICLK/(CPSDVSR x (1 + SCR)).&lt;br&gt;CPSDVSR is an even value ranging from 2 to 254, set by the SPICPSR register." range="15:8" property="RW"/>
				<Member name="sph" description="SPICLKOUT phase. For details, see the SPI frame formats in section 10.9.4 &quot;Timing of Three Types of Peripheral Buses.&quot;" range="7" property="RW"/>
				<Member name="spo" description="SPICLKOUT polarity. For details, see the SPI frame formats in section 10.9.4 &quot;Timing of Three Types of Peripheral Buses.&quot;" range="6" property="RW"/>
				<Member name="frf" description="Frame format selection.&lt;br&gt;00: Motorola SPI frame format.&lt;br&gt;01: TI synchronous serial frame format.&lt;br&gt;10: National Microwire frame format.&lt;br&gt;11: reserved." range="5:4" property="RW"/>
				<Member name="dss" description="Data bit width.&lt;br&gt;0011: 4 bits.&lt;br&gt;1000: 9 bits.&lt;br&gt;1101: 14 bits.&lt;br&gt;0100: 5 bits.&lt;br&gt;1001: 10 bits.&lt;br&gt;1110: 15 bits.&lt;br&gt;0101: 6 bits.&lt;br&gt;1010: 11 bits.&lt;br&gt;1111: 16 bits.&lt;br&gt;0110: 7 bits.&lt;br&gt;1011: 12 bits.&lt;br&gt;0111: 8 bits.&lt;br&gt;1100: 13 bits.&lt;br&gt;Other values: reserved." range="3:0" property="RW"/>
				<Register offset="0x000"/>
			</RegisterGroup>
			<RegisterGroup name="SPICR1" description="SPICR1 is control register 1." value="0x7F00" startoffset="0x004">
				<Member name="waiten" description="Wait enable. This bit takes effect when FRF of the SPICR0 register is set to the National Microwire frame format.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="15" property="RW"/>
				<Member name="waitval" description="Number of beats of the waiting time between the read operation and the write operation when the National Microwire frame format is used. These bits take effect when WaitEn value is 1 and the National Microwire frame format is used." range="14:8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:5" property="RW"/>
				<Member name="bigend" description="Little endian and the large endian modes.&lt;br&gt;0: The little endian mode ends.&lt;br&gt;1: The large endian mode ends." range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="RW"/>
				<Member name="ms" description="Master or slave mode. This mode can be changed only when the SPI is disabled.&lt;br&gt;0: master mode (default).&lt;br&gt;1: reserved." range="2" property="RW"/>
				<Member name="sse" description="SPI enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="1" property="RW"/>
				<Member name="lbm" description="Loopback mode.&lt;br&gt;0: The normal serial interface operation is enabled.&lt;br&gt;1: Output of transmit serial shift register is connected to input of receive serial shift register internally." range="0" property="RW"/>
				<Register offset="0x004"/>
			</RegisterGroup>
			<RegisterGroup name="SPIDR" description="SPIDR is a data register." value="0x0000" startoffset="0x008">
				<Member name="data" description="Transmit/receive FIFO.&lt;br&gt;Read: receive FIFO.&lt;br&gt;Write: transmit FIFO.&lt;br&gt;The data is right-justified when the data bits are less than 16 bits. Unused upper bits are ignored by transmit logic. The receive logic automatically right-justifies the data." range="15:0" property="RW"/>
				<Register offset="0x008"/>
			</RegisterGroup>
			<RegisterGroup name="SPISR" description="SPISR is a status register." value="0x0003" startoffset="0x00C">
				<Member name="reserved" description="Reserved." range="15:5" property="RW"/>
				<Member name="bsy" description="SPI busy flag.&lt;br&gt;0: 0: idle.&lt;br&gt;1: 1: busy." range="4" property="RW"/>
				<Member name="rff" description="The receive FIFO is full.&lt;br&gt;0: not full.&lt;br&gt;1: full." range="3" property="RW"/>
				<Member name="rne" description="The receive FIFO is not empty.&lt;br&gt;0: empty.&lt;br&gt;1: not empty." range="2" property="RW"/>
				<Member name="tnf" description="The receive FIFO is not full.&lt;br&gt;0: full.&lt;br&gt;1: not full." range="1" property="RW"/>
				<Member name="tfe" description="The receive FIFO is empty.&lt;br&gt;0: not empty.&lt;br&gt;1: empty." range="0" property="RW"/>
				<Register offset="0x00C"/>
			</RegisterGroup>
			<RegisterGroup name="SPICPSR" description="SPICPSR is a clock prescale register." value="0x0000" startoffset="0x010">
				<Member name="reserved" description="Reserved." range="15:8" property="RW"/>
				<Member name="cpsdvsr" description="Clock divider. The value must be an even number ranging from 2 to 254, depending on the frequency of the input clock SPICLK. The LSB returns 0 on reads." range="7:0" property="RW"/>
				<Register offset="0x010"/>
			</RegisterGroup>
			<RegisterGroup name="SPIIMSC" description="SPIIMSC is an interrupt mask register. The value 0 indicates that the interrupt is masked, andthe value 1 indicates that the interrupt is not masked." value="0x0000" startoffset="0x014">
				<Member name="reserved" description="Reserved." range="15:4" property="RW"/>
				<Member name="txim" description="Transmit FIFO interrupt mask.&lt;br&gt;0: If the transmit FIFO is half empty or contains less data, the interrupt is masked.&lt;br&gt;1: If the transmit FIFO is half empty or contains less data, the interrupt is not masked." range="3" property="RW"/>
				<Member name="rxim" description="Receive FIFO interrupt mask.&lt;br&gt;0: If the receive FIFO is half empty or contains less data, the interrupt is masked.&lt;br&gt;1: If the receive FIFO is half empty or contains less data, the interrupt is not masked." range="2" property="RW"/>
				<Member name="rtim" description="Receive timeout interrupt.&lt;br&gt;0: The receive timeout interrupt is masked.&lt;br&gt;1: The receive timeout interrupt is not masked." range="1" property="RW"/>
				<Member name="rorim" description="Receive overrun interrupt mask.&lt;br&gt;0: The receive FIFO overrun interrupt is masked.&lt;br&gt;1: The receive FIFO overrun interrupt is not masked.&lt;br&gt;When the bit value is 1, the hardware flow control function is enabled, that is, the SPI stops transmitting data after the receive FIFO is full." range="0" property="RW"/>
				<Register offset="0x014"/>
			</RegisterGroup>
			<RegisterGroup name="SPIRIS" description="SPIRIS is a raw interrupt status register. The value 0 indicates that no interrupt is generated,and the value 1 indicates that an interrupt is generated." value="0x0008" startoffset="0x018">
				<Member name="reserved" description="Reserved." range="15:4" property="RO"/>
				<Member name="txris" description="Raw interrupt status of the transmit FIFO interrupt." range="3" property="RO"/>
				<Member name="rxris" description="Raw interrupt status of the receive FIFO interrupt." range="2" property="RO"/>
				<Member name="rtris" description="Raw interrupt status of the receive timeout interrupt." range="1" property="RO"/>
				<Member name="rorris" description="Raw interrupt status of the receive overrun interrupt." range="0" property="RO"/>
				<Register offset="0x018"/>
			</RegisterGroup>
			<RegisterGroup name="SPIMIS" description="SPIMIS is a masked interrupt status register. The value 0 indicates that no interrupt isgenerated, and the value 1 indicates that an interrupt is generated." value="0x0000" startoffset="0x01C">
				<Member name="reserved" description="Reserved." range="15:4" property="RO"/>
				<Member name="txmis" description="Masked interrupt status of the transmit FIFO interrupt." range="3" property="RO"/>
				<Member name="rxmis" description="Masked interrupt status of the receive FIFO interrupt." range="2" property="RO"/>
				<Member name="rtmis" description="Masked interrupt status of the receive timeout interrupt." range="1" property="RO"/>
				<Member name="rormis" description="Masked interrupt status of the receive overrun interrupt." range="0" property="RO"/>
				<Register offset="0x01C"/>
			</RegisterGroup>
			<RegisterGroup name="SPIICR" description="SPIICR is an interrupt clear register. Writing 1 clears the interrupt, and writing 0 has no effect." value="0x0000" startoffset="0x020">
				<Member name="reserved" description="Reserved." range="15:2" property="RO"/>
				<Member name="rtic" description="Receive timeout interrupt clear." range="1" property="RO"/>
				<Member name="roric" description="Receive overrun interrupt clear." range="0" property="RO"/>
				<Register offset="0x020"/>
			</RegisterGroup>
			<RegisterGroup name="SPIDMACR" description="SPIDMACR is a DMA control register." value="0x0000" startoffset="0x024">
				<Member name="reserved" description="Reserved." range="15:2" property="WO"/>
				<Member name="txdmae" description="DMA transmit FIFO enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="1" property="WO"/>
				<Member name="rxdmae" description="DMA receive FIFO enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="0" property="WO"/>
				<Register offset="0x024"/>
			</RegisterGroup>
			<RegisterGroup name="SPITXFIFOCR" description="SPITXFIFOCR is a transmit FIFO control register." value="0x0009" startoffset="0x028">
				<Member name="reserved" description="Reserved." range="15:6" property="RW"/>
				<Member name="txintsize" description="Threshold for the transmit FIFO to transmit the interrupt request. That is, when the number of data segments in the transmit FIFO is smaller than or equal to the value of TXINTSize, TXRIS takes effect.&lt;br&gt;000: 1.&lt;br&gt;001: 4.&lt;br&gt;010: 8.&lt;br&gt;011: 16.&lt;br&gt;100: 32.&lt;br&gt;101: 64.&lt;br&gt;110: 64.&lt;br&gt;111: 64." range="5:3" property="RW"/>
				<Member name="dmatxbrsize" description="Threshold for the transmit FIFO to transmit the request for the DMA burst transfer. That is, when the number of data segments in the transmit FIFO is smaller than or equal to the number of words determined by the result of (256 – DMATXBRSize), DMATXBREQ takes effect. The word length is 16 bits.&lt;br&gt;000: 1.&lt;br&gt;001: 4.&lt;br&gt;010: 8.&lt;br&gt;011: 16.&lt;br&gt;100: 32.&lt;br&gt;101: 64.&lt;br&gt;110: 128.&lt;br&gt;111: 128." range="2:0" property="RW"/>
				<Register offset="0x028"/>
			</RegisterGroup>
			<RegisterGroup name="SPIRXFIFOCR" description="SPIRXFIFOCR is a receive FIFO control register." value="0x0009" startoffset="0x02C">
				<Member name="reserved" description="Reserved." range="15:6" property="RW"/>
				<Member name="rxintsize" description="Threshold for the receive FIFO to transmit interrupt request. That is, when the number of data segments in the receive FIFO is greater than or equal to the number of words determined by the result of (256 – RXINTSize), RXRIS takes effect. The word length is 16 bits.&lt;br&gt;000: 1.&lt;br&gt;001: 4.&lt;br&gt;010: 8.&lt;br&gt;011: 16.&lt;br&gt;100: 32.&lt;br&gt;101: 64.&lt;br&gt;110: 64.&lt;br&gt;111: 64." range="5:3" property="RW"/>
				<Member name="dmarxbrsize" description="Threshold for the receive FIFO to transmit the request for the DMA burst transfer. That is, when the number of data segments in the receive FIFO is greater than or equal to the number of words specified by DMARXBRSize, DMARXBREQ takes effect.&lt;br&gt;000: 1.&lt;br&gt;001: 4.&lt;br&gt;010: 8.&lt;br&gt;011: 16.&lt;br&gt;100: 32.&lt;br&gt;101: 64.&lt;br&gt;110: 128.&lt;br&gt;111: 224." range="2:0" property="RW"/>
				<Register offset="0x02C"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="UART" i2cSupport="false">
			<Module baseAddress="0x101FB000"/>
			<RegisterGroup name="UART_DR" description="UART_DR is a UART data register used to store the receive data and transmit data. Thereception status can be read from this register." value="0x00" startoffset="0x000">
				<Member name="reserved" description="Reserved." range="15:12" property="-"/>
				<Member name="oe" description="Overrun error.&lt;br&gt;0: No overrun error occurs.&lt;br&gt;1: An overrun error occurs. The full receive FIFO receives an additional data segment." range="11" property="RO"/>
				<Member name="be" description="Break error.&lt;br&gt;0: No break error occurs.&lt;br&gt;1: A break error occurs. The period for maintaining the low level of the input of the receive data is longer than the transfer time of a full word (including start bit, data, parity bit and stop bit)." range="10" property="RO"/>
				<Member name="pe" description="Parity check error.&lt;br&gt;0: No parity check error occurs.&lt;br&gt;1: A parity check error occurs." range="9" property="RO"/>
				<Member name="fe" description="Frame error.&lt;br&gt;0: No frame error occurs.&lt;br&gt;1: A frame error occurs (incorrect stop bit)." range="8" property="RO"/>
				<Member name="data" description="Receive data and transmit data." range="7:0" property="RW"/>
				<Register offset="0x000"/>
			</RegisterGroup>
			<RegisterGroup name="UART_RSR" description="UART_RSR is a receive status register/error clear register.&lt;br&gt;&lt;ul&gt;&lt;li&gt;When the read operation is performed, the register functions as the receive status register.&lt;br&gt;&lt;/li&gt;&lt;li&gt;When the write operation is performed, the register functions as the error clear register.&lt;br&gt;The receive status can also be read from UART_DR. The status information about the break,frame and parity read from UART_DR has a higher priority than the information read fromUART_RSR (that is, the status change in UART_DR is faster than that in UART_RSR).&lt;br&gt;Any write operations performed on the UART_RSR register will reset the register.&lt;/li&gt;&lt;/ul&gt;" value="0x00" startoffset="0x004">
				<Member name="reserved" description="Reserved." range="7:4" property="-"/>
				<Member name="oe" description="Overrun error.&lt;br&gt;0: No overrun error occurs.&lt;br&gt;1: An overrun error occurs.&lt;br&gt;When the FIFO is full, the contents in the FIFO are kept valid because no more data will be written to the FIFO. The offset register, however, will overrun. The CPU must read the data immediately to empty the FIFO." range="3" property="RW"/>
				<Member name="be" description="Break error.&lt;br&gt;0: No break error occurs.&lt;br&gt;1: A break error occurs.&lt;br&gt;Occurrence condition of break errors: The period for maintaining the low level of the input of the receive data is longer than the transfer time of a full word (with defined start bit, data, parity bit and stop bit)." range="2" property="RW"/>
				<Member name="pe" description="Parity check error.&lt;br&gt;0: No parity check error occurs.&lt;br&gt;1: A parity check error occurs in the receive data.&lt;br&gt;In FIFO mode, the parity check error is related to the data at the top of the FIFO." range="1" property="RW"/>
				<Member name="fe" description="Frame error.&lt;br&gt;0: No frame error occurs.&lt;br&gt;1: The stop bit in the received data is incorrect (the valid stop bit is 1)." range="0" property="RW"/>
				<Register offset="0x004"/>
			</RegisterGroup>
			<RegisterGroup name="UART_FR" description="UART_FR is a UART flag register." value="0x0197" startoffset="0x018">
				<Member name="reserved" description="Reserved." range="15:8" property="-"/>
				<Member name="txfe" description="The meaning of this bit is determined by the UART_LCR_H[fen] status.&lt;br&gt;If UART_LCR_H[fen] is 0, this bit is set to 1 when the transmit holding register is empty.&lt;br&gt;If UART_LCR_H[fen] is 1, this bit is set to 1 when the transmit FIFO is empty." range="7" property="RO"/>
				<Member name="rxff" description="The meaning of this bit is determined by the UART_LCR_H[FEN] status.&lt;br&gt;If UART_LCR_H[fen] is 0, this bit is set to 1 when the receive holding register is full.&lt;br&gt;If UART_LCR_H[fen] is 1, this bit is set to 1 when the receive FIFO is full." range="6" property="RO"/>
				<Member name="txff" description="The meaning of this bit is determined by the UART_LCR_H[FEN] status.&lt;br&gt;If UART_LCR_H[fen] is 0, this bit is set to 1 when the transmit holding register is full.&lt;br&gt;If UART_LCR_H[fen] is 1, this bit is set to 1 when the transmit FIFO is full." range="5" property="RO"/>
				<Member name="rxfe" description="The meaning of this bit is determined by the UART_LCR_H[FEN] status.&lt;br&gt;If UART_LCR_H[fen] is 0, this bit is set to 1 when the receive holding register is empty.&lt;br&gt;If UART_LCR_H[fen] is 1, this bit is set to 1 when the receive FIFO is empty." range="4" property="RO"/>
				<Member name="busy" description="UART busy/idle state.&lt;br&gt;0: The UART is idle or the data transmission is complete.&lt;br&gt;1: The UART is busy with data transmission.&lt;br&gt;After this bit is set, the state persists until the whole byte (including all the stop bits) is completely transmitted from the offset register.&lt;br&gt;This bit is set once the transmit FIFO is not empty, no matter whether the UART is enabled or not." range="3" property="RO"/>
				<Member name="reserved" description="Reserved." range="2:0" property="-"/>
				<Register offset="0x018"/>
			</RegisterGroup>
			<RegisterGroup name="UART_IBRD" description="UART_IBRD is an integral baud rate register." value="0x0000" startoffset="0x024">
				<Member name="bauddivint" description="Clock divider of the integral baud rate. All the bits are cleared during reset." range="15:0" property="RW"/>
				<Register offset="0x024"/>
			</RegisterGroup>
			<RegisterGroup name="UART_FBRD" description="UART_FBRD is a fraction baud rate register.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;The values of the integral baud rate register and the fraction baud rate register can beupdated only after the current data transmission and reception is complete.&lt;br&gt;&lt;/li&gt;&lt;li&gt;The minimum clock divider is 1, and the maximum clock divider is 65535 (216–1). That is,UART_IBRD = 0 has no effect, and UART_FBRD in this case will be omitted. &lt;/li&gt;&lt;li&gt;If transmission and the reception can fail.&lt;br&gt;If UART_FBRD = 0x1E and UART_IBRD = 0x01, the integer part is 30 and the fractionalpart is 0.015625. That is, the whole clock divider is 30.015625.&lt;br&gt;&lt;/li&gt;&lt;li&gt;UART baud rate = internal bus frequency/(16 x clock divider) = internal bus frequency/(16x 30.015625)&lt;/li&gt;&lt;/ul&gt;" value="0x00" startoffset="0x028">
				<Member name="reserved" description="Reserved." range="7:6" property="-"/>
				<Member name="banddivfrac" description="Clock divider of the fraction baud rate. All the bits are cleared during reset." range="5:0" property="RW"/>
				<Register offset="0x028"/>
			</RegisterGroup>
			<RegisterGroup name="UART_LCR_H" description="UART_LCR_H is a transfer mode control register. The registers UART_LCR_H,UART_IBRD and UART_FBRD, you should also update UART_LCR_H at the same time." value="0x0000" startoffset="0x02C">
				<Member name="reserved" description="Reserved." range="15:8" property="-"/>
				<Member name="sps" description="Parity check select.&lt;br&gt;When bit[1], bit[2] and bit[7] of this register are set, the parity bit will be transmitted and detected as 0.&lt;br&gt;When bit[1] and bit[7] of this register are set and bit[2] is 0, the parity bit will be transmitted and detected as 1.&lt;br&gt;When bit[1], bit[2] and bit[7] are all cleared, the stick parity is disabled." range="7" property="RW"/>
				<Member name="wlen" description="Number of bits in a received or transmitted data frame.&lt;br&gt;00: 5 bits.&lt;br&gt;01: 6 bits.&lt;br&gt;10: 7 bits.&lt;br&gt;11: 8 bits." range="6:5" property="RW"/>
				<Member name="fen" description="Transmit and receive FIFOs enable control.&lt;br&gt;0: The transmit and receive FIFOs are disabled.&lt;br&gt;1: The transmit and receive FIFOs are enabled." range="4" property="RW"/>
				<Member name="stp2" description="Presence of the 2-bit wide stop bit at the end of a transmitted frame.&lt;br&gt;0: No 2-bit wide stop bit exists at the end of a transmitted frame.&lt;br&gt;1: A 2-bit wide stop bit exists at the end of a transmitted frame.&lt;br&gt;The receive logic does not check the 2-bit wide stop bit during data reception." range="3" property="RW"/>
				<Member name="eps" description="Selection of the odd or even parity check in the data transmitting and receiving processes.&lt;br&gt;0: The odd parity bit is generated or checked in the data transmitting and receiving processes.&lt;br&gt;1: The even parity bit is generated or checked in the data transmitting and receiving processes.&lt;br&gt;When UART_LCR_H[fen] is 0, this bit does take effect." range="2" property="RW"/>
				<Member name="pen" description="Parity check select bit.&lt;br&gt;0: The parity check is not used.&lt;br&gt;1: The transmit direction generates a parity bit, and the receive direction performs parity check." range="1" property="RW"/>
				<Member name="brk" description="Transmission break.&lt;br&gt;0: no effect.&lt;br&gt;1: After the current data is transmitted, the UTXD continuously outputs low levels.&lt;br&gt;Note: The software must set this bit to 1 and maintain the value for a period longer than the transfer time of two full frames to ensure that the break command is correctly performed. Generally, this bit should be cleared." range="0" property="RW"/>
				<Register offset="0x02C"/>
			</RegisterGroup>
			<RegisterGroup name="UART_CR" description="UART_CR is a UART control register.&lt;br&gt;Perform the following steps to configure UART_CR:&lt;br&gt;Write 0 to UART_CR[uarten] to disable the UART.&lt;br&gt;Wait for the current data to be completely transmitted or received.&lt;br&gt;Clear UART_LCR_H[fen].&lt;br&gt;Configure UART_CR.&lt;br&gt;Write 1 to UART_CR[uarten] to enable the UART.&lt;br&gt;----End" value="0x0300" startoffset="0x030">
				<Member name="ctsen" description="CTS hardware flow control enable.&lt;br&gt;0: The CTS hardware flow control is not enabled.&lt;br&gt;1: The CTS hardware flow control is enabled. Data is transmitted only when the nUARTCTS signal is valid." range="15" property="RW"/>
				<Member name="rtsen" description="RTS hardware flow control enable.&lt;br&gt;0: The RTS hardware flow control is not enabled.&lt;br&gt;1: The RTS hardware flow control is enabled. The request for data reception is transmitted only when the receive FIFO has room for the data." range="14" property="RW"/>
				<Member name="reserved" description="Reserved." range="13:12" property="-"/>
				<Member name="rts" description="Request to transmit.&lt;br&gt;This bit indicates the negating of the status output signal nUARTRTS of the UART modem.&lt;br&gt;0: The output signal is not changed.&lt;br&gt;1: This bit is set to 1. As a result, the output signal is 0." range="11" property="RW"/>
				<Member name="dtr" description="Data transmission preparation.&lt;br&gt;This bit indicates the negating of the status output signal nUARTDTR of the UART modem.&lt;br&gt;0: The output signal is not changed.&lt;br&gt;1: This bit is set to 1. As a result, the output signal is 0." range="10" property="RW"/>
				<Member name="rxe" description="UART receive enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled.&lt;br&gt;If the UART is disabled during data reception, the reception of the current data will terminate before the reception properly stops." range="9" property="RW"/>
				<Member name="txe" description="UART transmit enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled.&lt;br&gt;If the UART is disabled during data transmission, the transmission of the current data will terminate before the transmission properly stops." range="8" property="RW"/>
				<Member name="lbe" description="Loopback enable.&lt;br&gt;0: disabled.&lt;br&gt;1: The UARTTXD output is looped back to UARTRXD." range="7" property="RW"/>
				<Member name="reserved" description="Reserved." range="6:1" property="-"/>
				<Member name="uarten" description="UART enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled.&lt;br&gt;If the UART is disabled during data transmission or reception, the transmission or reception of the current data will terminate before the transmission or reception properly stops." range="0" property="RW"/>
				<Register offset="0x030"/>
			</RegisterGroup>
			<RegisterGroup name="UART_IFLS" description="UART_IFLS is a FIFP interrupt threshold selection register used to set the trigger lines(UART_TXINTR or UART_RXINTR) of FIFO interrupts." value="0x0012" startoffset="0x034">
				<Member name="reserved" description="Reserved." range="15:6" property="-"/>
				<Member name="rxiflsel" description="Threshold selection for the receive interrupt FIFO. The trigger points for the receive interrupts are as follows:&lt;br&gt;000: receive FIFO ≥ 1/8full&lt;br&gt;001: receive FIFO ≥ 1/4full&lt;br&gt;010: receive FIFO ≥ 1/2full&lt;br&gt;011: receive FIFO ≥ 3/4full&lt;br&gt;100: receive FIFO ≥ 7/8full&lt;br&gt;101–111: reserved." range="5:3" property="RW"/>
				<Member name="txiflsel" description="Threshold selection for the transmit interrupt FIFO. The trigger points for the transmit interrupts are as follows:&lt;br&gt;000: transmit FIFO ≤ 1/8full&lt;br&gt;001: transmit FIFO ≤ 1/4full&lt;br&gt;011: transmit FIFO ≤ 3/4full&lt;br&gt;010: transmit FIFO ≤ 1/2full&lt;br&gt;100: transmit FIFO ≤ 7/8full&lt;br&gt;101–111: reserved." range="2:0" property="RW"/>
				<Register offset="0x034"/>
			</RegisterGroup>
			<RegisterGroup name="UART_IMSC" description="UART_IMSC is an interrupt mask register used to mask interrupts." value="0x0000" startoffset="0x038">
				<Member name="reserved" description="Reserved." range="15:11" property="-"/>
				<Member name="oeim" description="Mask status of the overrun error interrupt.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="10" property="RW"/>
				<Member name="beim" description="Mask status of the break interrupt.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="9" property="RW"/>
				<Member name="peim" description="Mask status of the parity check interrupt.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="8" property="RW"/>
				<Member name="feim" description="Mask status of the frame error interrupt.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="7" property="RW"/>
				<Member name="rtim" description="Mask status of the receive timeout interrupt.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="6" property="RW"/>
				<Member name="txim" description="Mask status of the transmit interrupt.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="5" property="RW"/>
				<Member name="rxim" description="Mask status of the receive interrupt.&lt;br&gt;0: masked.&lt;br&gt;1: not masked." range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3:0" property="-"/>
				<Register offset="0x038"/>
			</RegisterGroup>
			<RegisterGroup name="UART_RIS" description="UART_RIS is a raw interrupt status register. The contents in this register are not influencedby the interrupt mask register." value="0x0000" startoffset="0x03C">
				<Member name="reserved" description="Reserved." range="15:11" property="-"/>
				<Member name="oeris" description="Raw overrun error interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="10" property="RO"/>
				<Member name="beris" description="Raw break error interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="9" property="RO"/>
				<Member name="peris" description="Raw parity check interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="8" property="RO"/>
				<Member name="feris" description="Raw error interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="7" property="RO"/>
				<Member name="rtris" description="Raw receive timeout interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="6" property="RO"/>
				<Member name="txris" description="Raw transmit interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="5" property="RO"/>
				<Member name="rxris" description="Raw receive interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="4" property="RO"/>
				<Member name="reserved" description="Reserved." range="3:0" property="-"/>
				<Register offset="0x03C"/>
			</RegisterGroup>
			<RegisterGroup name="UART_MIS" description="UART_MIS is a masked interrupt status register. The contents in this register are the results ofthe AND operation between the raw interrupt status and the interrupt mask." value="0x0000" startoffset="0x040">
				<Member name="reserved" description="Reserved." range="15:11" property="-"/>
				<Member name="oemis" description="Masked overrun error interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="10" property="RO"/>
				<Member name="bemis" description="Masked break error interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="9" property="RO"/>
				<Member name="pemis" description="Masked parity check interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="8" property="RO"/>
				<Member name="femis" description="Masked error interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="7" property="RO"/>
				<Member name="rtmis" description="Masked receive timeout interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="6" property="RO"/>
				<Member name="txmis" description="Masked transmit interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="5" property="RO"/>
				<Member name="rxmis" description="Masked receive interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="4" property="RO"/>
				<Member name="reserved" description="Reserved." range="3:0" property="-"/>
				<Register offset="0x040"/>
			</RegisterGroup>
			<RegisterGroup name="UART_ICR" description="UART_ICR is an interrupt clear register. When a bit in the register is set to 1, thecorresponding interrupt is cleared. When a bit in the register is set to 0, the bit does not take effect." value="0x0000" startoffset="0x044">
				<Member name="reserved" description="Reserved." range="15:11" property="-"/>
				<Member name="oeic" description="Clear the overflow error interrupt.&lt;br&gt;0: no effect.&lt;br&gt;1: The interrupt is cleared." range="10" property="WO"/>
				<Member name="beic" description="Clear the break error interrupt.&lt;br&gt;0: no effect.&lt;br&gt;1: The interrupt is cleared." range="9" property="WO"/>
				<Member name="peic" description="Clear the parity check interrupt.&lt;br&gt;0: no effect.&lt;br&gt;1: The interrupt is cleared." range="8" property="WO"/>
				<Member name="feic" description="Clear the error interrupt.&lt;br&gt;0: no effect.&lt;br&gt;1: The interrupt is cleared." range="7" property="WO"/>
				<Member name="rtic" description="Clear the receive timeout interrupt.&lt;br&gt;0: no effect.&lt;br&gt;1: The interrupt is cleared." range="6" property="WO"/>
				<Member name="txic" description="Clear the transmit interrupt.&lt;br&gt;0: no effect.&lt;br&gt;1: The interrupt is cleared." range="5" property="WO"/>
				<Member name="rxic" description="Clear the receive interrupt.&lt;br&gt;0: no effect.&lt;br&gt;1: The interrupt is cleared." range="4" property="WO"/>
				<Member name="reserved" description="Reserved." range="3:0" property="-"/>
				<Register offset="0x044"/>
			</RegisterGroup>
			<RegisterGroup name="UART_DMACR" description="UART_DMACR is a DMA control register used to enable the DMA of the transmit FIFO andthe receive FIFO." value="0x0000" startoffset="0x048">
				<Member name="reserved" description="Reserved." range="15:3" property="-"/>
				<Member name="dmaonerr" description="Receive channel DMA enable control upon the occurrence of the UART error interrupt (UARTEINTR).&lt;br&gt;0: The output request of the receive channel DMA (UARTRXDMASREQ or UARRTXDMABREQ) is valid when the UART error interrupt (UARTEINTR) is valid.&lt;br&gt;1: The output request of the receive channel DMA (UARTRXDMASREQ or UARRTXDMABREQ) is invalid when the UART error interrupt (UARTEINTR) is valid." range="2" property="RW"/>
				<Member name="txdmae" description="DMA enable control of the receive FIFO.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="1" property="RW"/>
				<Member name="rxdmae" description="DMA enable control of the transmit FIFO.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="0" property="RW"/>
				<Register offset="0x048"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="USB" i2cSupport="false">
			<Module baseAddress="0x60080000"/>
			<RegisterGroup name="INSNREG00" description="INSNREG00 is a micro-frame length configuration register." value="0x00000000" startoffset="0x90">
				<Member name="reserved" description="Reserved." range="31:14" property="-"/>
				<Member name="val" description="Value of the micro-frame counter. This register is used only for emulation. In normal working conditions, the micro-frame length is 125 μs defined by the protocol. During emulation, you can configure the register to change the micro-frame length to shorten the emulation period." range="13:1" property="RW"/>
				<Member name="en" description="Enable the register.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="0" property="RW"/>
				<Register offset="0x90"/>
			</RegisterGroup>
			<RegisterGroup name="INSNREG04" description="INSNREG04 is a debug register." value="0x00000000" startoffset="0xA0">
				<Member name="reserved" description="Reserved." range="31:6" property="-"/>
				<Member name="auto_en" description="Automatic gauge enable.&lt;br&gt;0: enabled. (When the software resets the run/stop bit and the hchalted bit is not set, the suspend signal takes effect.)&lt;br&gt;1: disabled. (That is, the port is not suspended when the software clears the run/stop bit.)&lt;br&gt;The default value is 0." range="5" property="RW"/>
				<Member name="nak_reldfix_en" description="NAK reloading enable.&lt;br&gt;0: enabled.&lt;br&gt;1: disabled." range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="-"/>
				<Member name="scaledwn_enum_time" description="Reduce the port enumeration time.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="2" property="RW"/>
				<Member name="hccparam_en" description="HCCPARAMS register write enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="1" property="RW"/>
				<Member name="hcsparam_en" description="HCSPARAMS register write enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled." range="0" property="RW"/>
				<Register offset="0xA0"/>
			</RegisterGroup>
			<RegisterGroup name="INSNREG06" description="INSNREG06 is an AHB error status register." value="0x00000000" startoffset="0xA8">
				<Member name="err_capture" description="Whether an AHB error occurs.&lt;br&gt;0: No AHB error occurs.&lt;br&gt;1: An AHB error occurs." range="31" property="RW"/>
				<Member name="reserved" description="Reserved." range="30:12" property="-"/>
				<Member name="hbusrt_err" description="hburst value of the control transfer stage upon the AHB error occurrence." range="11:9" property="RO"/>
				<Member name="num_beat_err" description="Number of the beats in the current bust transfer upon the AHB error occurrence. The maximum beat number is 16.&lt;br&gt;0x00–0x10: valid.&lt;br&gt;0x11–0x1F: reserved." range="8:4" property="RO"/>
				<Member name="num_beat_ok" description="Number of completed beats in the current bust transfer upon the AHB error occurrence." range="3:0" property="RO"/>
				<Register offset="0xA8"/>
			</RegisterGroup>
			<RegisterGroup name="INSNREG07" description="INSNREG07 is an AHB error address register." value="0x00000000" startoffset="0xAC">
				<Member name="err_addr" description="Address of the control transfer stage upon the AHB error occurrence." range="31:0" property="RO"/>
				<Register offset="0xAC"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="CRG" i2cSupport="false">
			<Module baseAddress="0x101F5000"/>
			<RegisterGroup name="PERI_CRG0" description="PERI_CRG0 is a CPU clock gating and soft reset control register." value="0x00000000" startoffset="0x0040">
				<Member name="reserved" description="Reserved." range="31:7" property="RW"/>
				<Member name="cs_srst_req" description="CS soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="6" property="RW"/>
				<Member name="cluster_scu_srst_req" description="SCU soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="5" property="RW"/>
				<Member name="cluster_peri_srst_req" description="PERI soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="4" property="RW"/>
				<Member name="cpu_clkoff_sys_0" description="CPU0 clock off select.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="3" property="RW"/>
				<Member name="sc_wd_srst_req_0" description="WD0 soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="2" property="RW"/>
				<Member name="cluster_dbg_srst_req_0" description="DBG0 soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="1" property="RW"/>
				<Member name="arm0_srst_req" description="A9 soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0040"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG1" description="PERI_CRG1 is a VOU clock and soft reset control register." value="0x00107F00" startoffset="0x0044">
				<Member name="reserved" description="Reserved." range="31:26" property="RW"/>
				<Member name="vo_hd_div" description="Ratio of the frequency of the VOHD clock to the frequency of the VOHD_DATE clock.&lt;br&gt;00: 1/2&lt;br&gt;01: 1/4&lt;br&gt;1x: 1/1" range="25:24" property="RW"/>
				<Member name="vo_hd_clk_sel" description="VOHD mode select.&lt;br&gt;0: high-definition (HD) mode&lt;br&gt;1: standard-definition (SD) mode" range="23" property="RW"/>
				<Member name="reserved" description="Reserved." range="22" property="RW"/>
				<Member name="vo_hddac_sel" description="VO HD DAC clock select.&lt;br&gt;0: HD clock&lt;br&gt;1: 54 MHz" range="21" property="RW"/>
				<Member name="reserved" description="Reserved." range="20" property="RW"/>
				<Member name="vo_sddac_sel" description="VO SD DAC clock select.&lt;br&gt;0: 54 MHz&lt;br&gt;1: HD clock" range="19" property="RW"/>
				<Member name="lcd_mode" description="LCD mode select.&lt;br&gt;0: non-LCD mode&lt;br&gt;1: LCD mode" range="18" property="RW"/>
				<Member name="vo_sc_div" description="VO clock divider select.&lt;br&gt;0: divided by 2&lt;br&gt;1: divided by 4" range="17" property="RW"/>
				<Member name="reserved" description="Reserved." range="16:15" property="RW"/>
				<Member name="vo_hdac_cken" description="VO HD DAC clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="14" property="RW"/>
				<Member name="vo_hdate_cken" description="VO HD DATE clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="13" property="RW"/>
				<Member name="vo_hd_cken" description="VO HD clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="12" property="RW"/>
				<Member name="vo_sdac_cken" description="VO SD DAC clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="11" property="RW"/>
				<Member name="vo_sdate_cken" description="VO SD DATE clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="10" property="RW"/>
				<Member name="vo_sd_cken" description="VO SD clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="9" property="RW"/>
				<Member name="vo_hcken" description="VO bus clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="vo_srst_req" description="VO soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0044"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG2" description="PERI_CRG2 is an HDMI clock and soft reset control register." value="0x00000301" startoffset="0x0048">
				<Member name="reserved" description="Reserved." range="31:20" property="RW"/>
				<Member name="hdmi_cec_clk_sel" description="HDMI CEC clock select.&lt;br&gt;0: 28.8 MHz crystal clock divided by 14&lt;br&gt;1: 148.5 MHz clock divided by 72" range="19" property="RW"/>
				<Member name="hdmi_test_sel" description="HDMI test clock select.&lt;br&gt;0: HDMI asclk&lt;br&gt;1: HDMI cec clk" range="18" property="RW"/>
				<Member name="hdmi_asclk_sel" description="HDMI ASCLK select.&lt;br&gt;0: HDMI PHY clock&lt;br&gt;1: PLL clock" range="17" property="RW"/>
				<Member name="hdmi_osclk_sel" description="HDMI OSCLK select.&lt;br&gt;0: HDMI PHY clock&lt;br&gt;1: PLL clock" range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:10" property="RW"/>
				<Member name="hdmi_idcken" description="HDMI pixel clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="9" property="RW"/>
				<Member name="hdmi_hcken" description="HDMI bus clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="hdmi_srst_req" description="HDMI soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0048"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG3" description="PERI_CRG3 is a BPD clock and soft reset control register." value="0x00000100" startoffset="0x004C">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="bpd_cken" description="BPD clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="bpd_srst_req" description="BPD soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x004C"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG5" description="PERI_CRG5 is a TDE clock and soft reset control register." value="0x00000100" startoffset="0x0054">
				<Member name="reserved" description="Reserved." range="31:18" property="RW"/>
				<Member name="tde_clk_sel" description="TDE clock select.&lt;br&gt;00: 400 MHz&lt;br&gt;01: 300 MHz&lt;br&gt;1x: reserved" range="17:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="RW"/>
				<Member name="tde_cken" description="TDE clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="tde_srst_req" description="TDE soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0054"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG7" description="PERI_CRG7 is an SCD clock and soft reset control register." value="0x00000200" startoffset="0x005C">
				<Member name="reserved" description="Reserved." range="31:10" property="RW"/>
				<Member name="scd_cken" description="SCD clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="9" property="RW"/>
				<Member name="reserved" description="Reserved." range="8:2" property="RW"/>
				<Member name="scd_srst_req" description="SCD soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="1" property="RW"/>
				<Member name="reserved" description="Reserved." range="0" property="RW"/>
				<Register offset="0x005C"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG8" description="PERI_CRG8 is a VDH clock and soft reset control register." value="0x00000100" startoffset="0x0060">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="vdh0_cken" description="VDH0 clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="vdh0_srst_req" description="VDH0 soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0060"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG9" description="PERI_CRG9 is a DNR clock and soft reset control register." value="0x00000100" startoffset="0x0064">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="dnr_cken" description="DNR clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="dnr_srst_req" description="DNR soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0064"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG10" description="PERI_CRG10 is a JPEG clock and soft reset control register." value="0x00000100" startoffset="0x0068">
				<Member name="reserved" description="Reserved." range="31:19" property="RW"/>
				<Member name="jpeg_clk_sel" description="JPEG clock source select.&lt;br&gt;0: 148.5 MHz&lt;br&gt;1: 171.5 MHz" range="18" property="RW"/>
				<Member name="jpeg_clk_scale" description="JPEG clock divider select.&lt;br&gt;00: no division&lt;br&gt;01: 148.5 x 15/16&lt;br&gt;10: 148.5 x 7/8&lt;br&gt;11: 148.5 x 3/4" range="17:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="RW"/>
				<Member name="jpeg_cken" description="JPEG clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="jpeg_srst_reg" description="JPEG soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0068"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG11" description="PERI_CRG11 is a VEDU clock and soft reset control register." value="0x00000100" startoffset="0x006C">
				<Member name="reserved" description="Reserved." range="31:18" property="RW"/>
				<Member name="vedu_clk_scale" description="VEDU clock divider select.&lt;br&gt;00: no division&lt;br&gt;01: 200 x 7/8&lt;br&gt;10: 200 x 3/4&lt;br&gt;11: 200 x 1/2" range="17:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="RW"/>
				<Member name="vedu_cken" description="VEDU clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:5" property="RW"/>
				<Member name="vedu_mdu_srst_req" description="VEDU MDU soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="4" property="RW"/>
				<Member name="vedu_jpge_srst_req" description="VEDU JPGE soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="3" property="RW"/>
				<Member name="vedu_vabt_srst_req" description="VEDU VARBITER soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="2" property="RW"/>
				<Member name="reserved" description="Reserved" range="1" property="RW"/>
				<Member name="vedu_core_srst_req" description="VEDU core soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x006C"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG12" description="PERI_CRG12 is an AO0 clock divider configuration register." value="0x00000000" startoffset="0x0070">
				<Member name="reserved" description="Reserved." range="31:24" property="RW"/>
				<Member name="ao_ckcfg0" description="Clock divider of AO MCLK0. The configured value is calculated as follows: (MCLK0/frequency of the SIO clock source) x 2^27." range="23:0" property="RW"/>
				<Register offset="0x0070"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG13" description="PERI_CRG13 is an AO0 clock select configuration register." value="0x00000100" startoffset="0x0074">
				<Member name="reserved" description="Reserved." range="31:23" property="RW"/>
				<Member name="fsclk_div0" description="Division relationship between the bit clock BCLK and the sampling clock FS.&lt;br&gt;000: The FS is generated by dividing the BCLK by 16.&lt;br&gt;001: The FS is generated by dividing the BCLK by 32.&lt;br&gt;010: The FS is generated by dividing the BCLK by 48.&lt;br&gt;011: The FS is generated by dividing the BCLK by 64.&lt;br&gt;100: The FS is generated by dividing the BCLK by 128.&lt;br&gt;101: The FS is generated by dividing the BCLK by 256.&lt;br&gt;Other values: The FS is generated by dividing the BCLK by 8." range="22:20" property="RW"/>
				<Member name="bclk_div0" description="Division relationship between the main clock MCLK and the bit clock BCLK.&lt;br&gt;0000: The BCLK is generated by dividing the MCLK by 1.&lt;br&gt;0001: The BCLK is generated by dividing the MCLK by 3.&lt;br&gt;0010: The BCLK is generated by dividing the MCLK by 2.&lt;br&gt;0011: The BCLK is generated by dividing the MCLK by 4.&lt;br&gt;0100: The BCLK is generated by dividing the MCLK by 6.&lt;br&gt;0101: The BCLK is generated by dividing the MCLK by 8.&lt;br&gt;0110: The BCLK is generated by dividing the MCLK by 12.&lt;br&gt;0111: The BCLK is generated by dividing the MCLK by 16.&lt;br&gt;1000: The BCLK is generated by dividing the MCLK by 24.&lt;br&gt;1001: The BCLK is generated by dividing the MCLK by 32.&lt;br&gt;1010: The BCLK is generated by dividing the MCLK by 48.&lt;br&gt;1011: The BCLK is generated by dividing the MCLK by 64.&lt;br&gt;Other values: The BCLK is generated by dividing the MCLK by 8." range="19:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="RW"/>
				<Member name="ao0_cken" description="AO0 clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:0" property="RW"/>
				<Register offset="0x0074"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG15" description="PERI_CRG15 is an ADAC reset configuration register." value="0x00000000" startoffset="0x007C">
				<Member name="reserved" description="Reserved." range="31:2" property="RW"/>
				<Member name="adac_srst_req" description="ADAC soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="1" property="RW"/>
				<Member name="reserved" description="Reserved." range="0" property="RW"/>
				<Register offset="0x007C"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG17" description="PERI_CRG17 is an AO configuration register." value="0x00000200" startoffset="0x0084">
				<Member name="reserved" description="Reserved." range="31:10" property="RW"/>
				<Member name="ao_cken" description="HIAO working clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="9" property="RW"/>
				<Member name="reserved" description="Reserved." range="8:1" property="RW"/>
				<Member name="ao_srst_req" description="HIAO soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0084"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG18" description="PERI_CRG18 is an SIO0 clock divider configuration register." value="0x00000000" startoffset="0x0088">
				<Member name="reserved" description="Reserved." range="31:24" property="RW"/>
				<Member name="ao_ckcfg3" description="Clock divider of SIO0 MCLK. The configured value is calculated as follows: (MCLK3/frequency of the SIO clock source) x 2^27." range="23:0" property="RW"/>
				<Register offset="0x0088"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG19" description="PERI_CRG19 is an SIO0 clock control register." value="0x00000100" startoffset="0x008C">
				<Member name="reserved" description="Reserved." range="31:27" property="RW"/>
				<Member name="sio0_bclkout_pctrl" description="SIO0 BCLKOUT polarity.&lt;br&gt;0: positive&lt;br&gt;1: negative" range="26" property="RW"/>
				<Member name="sio0_bclk_pctrl" description="SIO0 BCLK polarity.&lt;br&gt;0: positive&lt;br&gt;1: negative" range="25" property="RW"/>
				<Member name="sio0_oen" description="SIO0 BCLK IO OEN control.&lt;br&gt;0: BCLK IO is output.&lt;br&gt;1: BCLK IO is input." range="24" property="RW"/>
				<Member name="sio0_bclk_sel" description="SIO0 BCLK select.&lt;br&gt;0: Clocks are generated internally.&lt;br&gt;1: Clocks are input from the external ADAC chip." range="23" property="RW"/>
				<Member name="fsclk_div3" description="Division relationship between the bit clock BCLK and the sampling clock FS.&lt;br&gt;000: The FS is generated by dividing the BCLK by 16.&lt;br&gt;001: The FS is generated by dividing the BCLK by 32.&lt;br&gt;010: The FS is generated by dividing the BCLK by 48.&lt;br&gt;011: The FS is generated by dividing the BCLK by 64.&lt;br&gt;100: The FS is generated by dividing the BCLK by 128.&lt;br&gt;101: The FS is generated by dividing the BCLK by 256.&lt;br&gt;Other values: The FS is generated by dividing the BCLK by 8." range="22:20" property="RW"/>
				<Member name="bclk_div3" description="Division relationship between the main clock MCLK and the bit clock BCLK.&lt;br&gt;0000: The BCLK is generated by dividing the MCLK by 1.&lt;br&gt;0001: The BCLK is generated by dividing the MCLK by 3.&lt;br&gt;0010: The BCLK is generated by dividing the MCLK by 2.&lt;br&gt;0011: The BCLK is generated by dividing the MCLK by 4.&lt;br&gt;0100: The BCLK is generated by dividing the MCLK by 6.&lt;br&gt;0101: The BCLK is generated by dividing the MCLK by 8.&lt;br&gt;0110: The BCLK is generated by dividing the MCLK by 12.&lt;br&gt;0111: The BCLK is generated by dividing the MCLK by 16.&lt;br&gt;1000: The BCLK is generated by dividing the MCLK by 24.&lt;br&gt;1001: The BCLK is generated by dividing the MCLK by 32.&lt;br&gt;1010: The BCLK is generated by dividing the MCLK by 48.&lt;br&gt;1011: The BCLK is generated by dividing the MCLK by 64.&lt;br&gt;Other values: The BCLK is generated by dividing the MCLK by 8." range="19:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="RW"/>
				<Member name="sio0_cken" description="SIO0 clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="sio0_srst_req" description="SIO0 soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x008C"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG24" description="PERI_CRG24 is a QAM/ADC/I2C clock and soft reset control register." value="0x00320F00" startoffset="0x00A0">
				<Member name="reserved" description="Reserved." range="31:28" property="RW"/>
				<Member name="qam_tsclk_div" description="QAM TSCLK clock division.&lt;br&gt;clk_div = clk_source/[2 x (qam_tsclk_div + 1)]" range="27:24" property="RW"/>
				<Member name="reserved" description="Reserved." range="23:22" property="RW"/>
				<Member name="qamadc_clk_sel" description="QAMADC working clock select.&lt;br&gt;0: 28.8 MHz&lt;br&gt;1: 25 MHz" range="21" property="RW"/>
				<Member name="qam_clk_sel" description="QAM 2X working clock select.&lt;br&gt;0: 118.8 MHz &lt;br&gt;1: 148.5 MHz" range="20" property="RW"/>
				<Member name="qam_tsout_pctrl" description="QAM output clock polarity.&lt;br&gt;0: positive&lt;br&gt;1: negative" range="19" property="RW"/>
				<Member name="qam_tsclk_sel" description="QAM TSCLK clock source select.&lt;br&gt;00: 118.8 MHz&lt;br&gt;01: 148.5 MHz&lt;br&gt;10: 1188 MHz&lt;br&gt;11: 1200 MHz" range="18:17" property="RW"/>
				<Member name="qam_adsclk_pctrl" description="QAM ADSCLK polarity.&lt;br&gt;0: positive&lt;br&gt;1: negative" range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:12" property="RW"/>
				<Member name="qam_tsout_cken" description="QAM output clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="11" property="RW"/>
				<Member name="qam_i2c_cken" description="QAM I2C clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="10" property="RW"/>
				<Member name="qamadc_cken" description="QAMADC clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="9" property="RW"/>
				<Member name="qam_cken" description="QAM clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:2" property="RW"/>
				<Member name="qam_i2c_srst_req" description="QAM I2C soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="1" property="RW"/>
				<Member name="qam_sc_rst_req" description="QAM soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00A0"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG25" description="PERI_CRG25 is a PVR clock and soft reset control register." value="0x00207B00" startoffset="0x00A4">
				<Member name="reserved" description="Reserved." range="31:28" property="RW"/>
				<Member name="pvr_tsout_div" description="PVR TSCLK output clock division.&lt;br&gt;clk_div = clk_source/[2 x (pvr_tsout_div + 1)]" range="27:24" property="RW"/>
				<Member name="dmx_clk_sel" description="PVR DEMUX clock select.&lt;br&gt;0: 198 MHz clock&lt;br&gt;1: 171.5 MHz clock" range="23" property="RW"/>
				<Member name="pvr_tsout_sel" description="PVR TSCLK output clock source select.&lt;br&gt;00: 118.8 MHz&lt;br&gt;01: 148.5 MHz&lt;br&gt;10: 1188 MHz&lt;br&gt;11: 1200 MHz" range="22:21" property="RW"/>
				<Member name="dmx_clk_scale" description="DMX clock divider select.&lt;br&gt;00: no division&lt;br&gt;01: 198 x 3/4&lt;br&gt;10: 198 x 1/2&lt;br&gt;11: 198 x 1/4" range="20:19" property="RW"/>
				<Member name="pvr_tsout_pctrl" description="PVR output clock polarity.&lt;br&gt;0: positive&lt;br&gt;1: negative" range="18" property="RW"/>
				<Member name="tsi1_inclk_pctrl" description="TSI1 input clock polarity.&lt;br&gt;0: positive&lt;br&gt;1: negative" range="17" property="RW"/>
				<Member name="tsi0_inclk_pctrl" description="TSI0 input clock polarity.&lt;br&gt;0: positive&lt;br&gt;1: negative" range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15" property="RW"/>
				<Member name="pvr_tsout_cken" description="PVR output clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="14" property="RW"/>
				<Member name="tsi2_cken" description="TSI2 clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="13" property="RW"/>
				<Member name="tsi1_cken" description="TSI1 clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="12" property="RW"/>
				<Member name="tsi0_cken" description="TSI0 clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="11" property="RW"/>
				<Member name="reserved" description="Reserved." range="10" property="RW"/>
				<Member name="dmx_cken" description="DMX clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="9" property="RW"/>
				<Member name="pvr_hcken" description="PVR bus clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="pvr_srst_req" description="PVR soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00A4"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG26" description="PERI_CRG26 is an SF clock and soft reset control register." value="0x00500100" startoffset="0x00A8">
				<Member name="reserved" description="Reserved." range="31:24" property="RW"/>
				<Member name="sf_clk_div" description="SF working clock division. The clock source is QPLL_FOUTPOSTDIV.&lt;br&gt;clk_div = clk_source/[2 x (sf_clk_div + 1)]" range="23:20" property="RW"/>
				<Member name="sf_rmiick1_sel" description="SF RMII down clock select.&lt;br&gt;0: Clocks are output to the PHY.&lt;br&gt;1: Clocks are input from the PHY." range="19" property="RW"/>
				<Member name="sf_rmiick0_sel" description="SF RMII up clock select.&lt;br&gt;0: Clocks are output to the PHY.&lt;br&gt;1: Clocks are input from the PHY." range="18" property="RW"/>
				<Member name="sf_rmiick1_oen" description="I/O OEN control for the SF RMII down clock.&lt;br&gt;0: The RMII clock I/O serves as output.&lt;br&gt;1: The RMII clock I/O serves as input." range="17" property="RW"/>
				<Member name="sf_rmiick0_oen" description="I/O OEN control for the SF RMII up clock.&lt;br&gt;0: The RMII clock I/O serves as output.&lt;br&gt;1: The RMII clock I/O serves as input." range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="RW"/>
				<Member name="sf_cken" description="SF clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:2" property="RW"/>
				<Member name="ethphy_rst_req" description="Off-chip ETH PHY soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="1" property="RW"/>
				<Member name="sf_srst_req" description="SF soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00A8"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG28" description="PERI_CRG28 is a PGD clock select control register." value="0x00000100" startoffset="0x00B0">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="pgd_cken" description="PGD clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="pgd_srst_req" description="PGD soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00B0"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG29" description="PERI_CRG29 is a CA clock and soft reset control register." value="0x00000100" startoffset="0x00B4">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="ca_cken" description="CA clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:2" property="RW"/>
				<Member name="ca_ci_srst_req" description="CA CI soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="1" property="RW"/>
				<Member name="ca_kl_srst_req" description="CA KL soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00B4"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG30" description="PERI_CRG30 is an NFC clock and soft reset control register." value="0x00000100" startoffset="0x00B8">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="nfc_cken" description="NFC clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="nfc_srst_req" description="NFC soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00B8"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG31" description="PERI_CRG31 is an SFC clock and soft reset control register." value="0x00000100" startoffset="0x00BC">
				<Member name="reserved" description="Reserved." range="31:19" property="RW"/>
				<Member name="sfc_clk_sel" description="SFC interface clock source select.&lt;br&gt;0XX: 14.4 MHz crystal oscillator clock&lt;br&gt;100: 49.5 MHz clock&lt;br&gt;101: 24.75 MHz clock&lt;br&gt;11X: 74.25 MHz clock" range="18:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="RW"/>
				<Member name="sfc_cken" description="SFC clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="sfc_srst_req" description="SFC soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00BC"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG33" description="PERI_CRG33 is a DMA clock and soft reset control register." value="0x00000100" startoffset="0x00C4">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="dma_cken" description="DMA clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="dma_srst_req" description="DMA soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00C4"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG34" description="PERI_CRG34 is an SSP clock and soft reset control register." value="0x00000100" startoffset="0x00C8">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="ssp_cken" description="SSP clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="ssp_srst_req" description="SSP soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00C8"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG36" description="PERI_CRG36 is a USB clock and soft reset control register." value="0x0000017F" startoffset="0x00D0">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="usb_cken" description="Statuses of the USB PHY reference clock and controller bus.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7" property="RW"/>
				<Member name="usb_ctrl_utmi1_req" description="Soft reset request of USB controller port1.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="6" property="RW"/>
				<Member name="usb_ctrl_utmi0_req" description="Soft reset request of USB controller port0.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="5" property="RW"/>
				<Member name="usb_ctrl_hub_req" description="Soft reset request of the USB controller hub.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="4" property="RW"/>
				<Member name="usbphy_port1_treq" description="Soft reset request of USB PHY port1.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="3" property="RW"/>
				<Member name="usbphy_port0_treq" description="Soft reset request of USB PHY port0.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="2" property="RW"/>
				<Member name="usbphy_req" description="Soft reset request of the USB PHY.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="1" property="RW"/>
				<Member name="usb_ahb_srst_req" description="Soft reset request of the USB controller bus.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00D0"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG38" description="PERI_CRG38 is an I2C0 clock and soft reset control register." value="0x00000100" startoffset="0x00D8">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="i2c0_cken" description="I2C0 clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="i2c0_srst_req" description="I2C0 soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00D8"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG39" description="PERI_CRG39 is an I2C1 clock and soft reset control register." value="0x00000100" startoffset="0x00DC">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="i2c1_cken" description="I2C1 clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="i2c1_srst_req" description="I2C1 soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00DC"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG40" description="PERI_CRG40 is an I2C2 clock and soft reset control register." value="0x00000100" startoffset="0x00E0">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="i2c2_cken" description="I2C2 clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="i2c2_srst_req" description="I2C2 soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00E0"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG42" description="PERI_CRG42 is an SCI0 clock and soft reset control register." value="0x00040100" startoffset="0x00E8">
				<Member name="reserved" description="Reserved." range="31:20" property="-"/>
				<Member name="sci_clk_div" description="Clock divider of the SCI working clock.&lt;br&gt;clk_div = clk_source/[2 x (sci_clk_div +1)]" range="19:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="-"/>
				<Member name="sci0_cken" description="SCI0 clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="sci0_srst_req" description="SCI0 soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00E8"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG43" description="PERI_CRG43 is an SCI1 clock and soft reset control register." value="0x00000100" startoffset="0x00EC">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="sci1_cken" description="SCI1 clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="sci1_srst_req" description="SCI1 soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00EC"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG44" description="PERI_CRG44 is a UART0 soft reset control register." value="0x00000000" startoffset="0x00F0">
				<Member name="reserved" description="Reserved." range="31:1" property="RW"/>
				<Member name="uart0_srst_req" description="UART0 soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00F0"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG46" description="PERI_CRG46 is an SDIO soft reset control register." value="0x00000300" startoffset="0x00F8">
				<Member name="reserved" description="Reserved." range="31:18" property="RW"/>
				<Member name="sdioclk_pctrl" description="Polarity of the SDIO SAP clock.&lt;br&gt;0: positive&lt;br&gt;1: negative" range="17" property="RW"/>
				<Member name="sdioclk_sel" description="SDIO working clock select.&lt;br&gt;0: 28.8 MHz&lt;br&gt;1: 50 MHz" range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:10" property="RO"/>
				<Member name="sdio_hclken" description="SDIO bus clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="9" property="RW"/>
				<Member name="sdio_cken" description="SDIO clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="sdio_srst_req" description="SDIO soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x00F8"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG48" description="PERI_CRG48 is a DDRC clock gating control register." value="0x00000100" startoffset="0x0100">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="ddrc_cken" description="MDDRC clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:0" property="RW"/>
				<Register offset="0x0100"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG49" description="PERI_CRG49 is a PWM soft reset control register." value="0x00000000" startoffset="0x0104">
				<Member name="reserved" description="Reserved." range="31:1" property="RW"/>
				<Member name="pwm_srst_req" description="PWM soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0104"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG50" description="PERI_CRG50 is an MNT/OSC control register." value="0x00000030" startoffset="0x0108">
				<Member name="reserved" description="Reserved." range="31:6" property="RW"/>
				<Member name="test_clk_en" description="PLL test clock control.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="5" property="RW"/>
				<Member name="osc_mode" description="OSC ring mode.&lt;br&gt;0: select 150-stage phase inverter for output&lt;br&gt;1: select 200-stage phase inverter for output" range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3:2" property="RW"/>
				<Member name="osc_en" description="OSC ring enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="1" property="RW"/>
				<Member name="osc_clk_en" description="OSC ring clk gate.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x0108"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CRG51" description="PERI_CRG51 is a bus bridge soft reset control register." value="0x00000000" startoffset="0x010C">
				<Member name="reserved" description="Reserved." range="31:8" property="RW"/>
				<Member name="x2h_lp_srst_req" description="X2H LP BRG soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="7" property="RW"/>
				<Member name="x2h_hp_srst_req" description="X2H HP BRG soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="6" property="RW"/>
				<Member name="maxi_srst_req" description="AXI BRG soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="5" property="RW"/>
				<Member name="meaxi_srst_req" description="AXI_E BRG soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="4" property="RW"/>
				<Member name="x2p_srst_req" description="X2P BRG soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="3" property="RW"/>
				<Member name="reserved" description="Reserved." range="2" property="RW"/>
				<Member name="h2x_lp_srst_req" description="H2X LP BRG soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="1" property="RW"/>
				<Member name="h2x_hp_srst_req" description="H2X HP BRG soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x010C"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="DMA" i2cSupport="false">
			<Module baseAddress="0x60030000"/>
			<RegisterGroup name="DMAC_INT_STAT" description="DMAC_INT_STAT is an interrupt status register. It shows the status of the masked interrupts.If certain bits of DMAC_INT_TC_STAT and DMAC_INT_ERR_STAT are masked at thesame time, the corresponding bit of DMAC_INT_STAT1 is also masked. Each bit ofDMAC_INT_STAT maps to one DMAC channel. When a bit is 1, it indicates that an interruptrequest is generated in the corresponding channel and the interrupt request may be an errorinterrupt or a terminal count interrupt." value="0x00000000" startoffset="0x000">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="int_stat" description="Status of the masked interrupts of each DMA channel. Bit[7:0] map to channels 7–0.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated. The interrupt request may be an error interrupt or a terminal count interrupt." range="7:0" property="RO"/>
				<Register offset="0x000"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_INT_TC_STAT" description="DMAC_INT_TC_STAT is a terminal count interrupt status register. It shows the status of themasked terminal count interrupts. The corresponding mask bit is DMAC_CX_CONFIG[itc],where X is the channel number ranging from 0 to 7. The register must work withOffset Address" value="0x00000000" startoffset="0x004">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="nt_tc_stat" description="Status of the masked terminal count interrupts. Bit[7:0] map to channels 7–0.&lt;br&gt;0: No terminal count interrupt is generated.&lt;br&gt;1: A terminal count interrupt is generated." range="7:0" property="RO"/>
				<Register offset="0x004"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_INT_TC_CLR" description="DMAC_INT_TC_CLR is a terminal count interrupt clear register. It is used to clear terminalcount interrupts." value="0x00000000" startoffset="0x008">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="int_tc_clr" description="Terminal count interrupt clear. Bit[7:0] map to channels 7–0.&lt;br&gt;0: not clear&lt;br&gt;1: clear" range="7:0" property="WO"/>
				<Register offset="0x008"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_INT_ERR_STAT" description="DMAC_INT_ERR_STAT is an error interrupt status register. It shows the statuses of themasked error interrupts. The corresponding mask bit is DMAC_CX_CONFIG[ie]. Theregister must work with DMAC_INT_STAT." value="0x00000000" startoffset="0x00C">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="int_err_stat" description="Status of masked error interrupts. Bit[7:0] map to channels 7–0.&lt;br&gt;0: No error interrupt is generated.&lt;br&gt;1: An error interrupt is generated." range="7:0" property="RO"/>
				<Register offset="0x00C"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_INT_ERR_CLR" description="DMAC_INT_ERR_CLR is an error interrupt clear register. It is used to clear error interrupts." value="0x00000000" startoffset="0x010">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="int_err_clr" description="Error interrupt clear. Bit[7:0] map to channels 7–0.&lt;br&gt;0: not clear&lt;br&gt;1: clear" range="7:0" property="WO"/>
				<Register offset="0x010"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_RAW_INT_TC_STATUS" description="DMAC_RAW_INT_TC_STATUS is a raw terminal count interrupt status register. It showsthe status of the raw terminal count interrupt of each channel." value="0x00000000" startoffset="0x014">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="raw_int_tc_stat" description="Status of the raw terminal count interrupt of each channel. Bit[7:0] map to channels 7–0.&lt;br&gt;0: No terminal count interrupt is generated.&lt;br&gt;1: A terminal count interrupt is generated." range="7:0" property="RO"/>
				<Register offset="0x014"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_RAW_INT_ERR_STATUS" description="DMAC_RAW_INT_ERR_STATUS is a raw error interrupt status register. It shows the statusof the raw error interrupt of each channel." value="0x00000000" startoffset="0x018">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="raw_int_err_stat" description="Status of the raw error interrupt of each channel. Bit[7:0] map to channels 7–0.&lt;br&gt;0: No error interrupt is generated.&lt;br&gt;1: An error interrupt is generated." range="7:0" property="RO"/>
				<Register offset="0x018"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_ENBLD_CHNS" description="DMAC_ENBLD_CHNS is a DMAC channel enable status register. It shows the enabledchannels.&lt;br&gt;For example, if a bit of DMAC_ENBLD_CHNS is 1, it indicates that the correspondingchannel is enabled. The enable bit of DMAC_CX_CONFIG determines whether thecorresponding channel is enabled. When the DMA transfer of a channel is complete, the bit of DMAC_ENBLD_CHNS corresponding to the channel is cleared." value="0x00000000" startoffset="0x01C">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="enabled_channels" description="Channel enable. Bit[7:0] map to channels 7–0.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="7:0" property="RO"/>
				<Register offset="0x01C"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_SOFT_BREQ" description="DMAC_SOFT_BREQ is a DMA burst request register for software. It is used to controlwhether to generate a DMA burst request using software.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;When this register is read, the device that is requesting the DMA burst transfer can be queried.This register and any peripheral each can generate a DAM request.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;Do not use a software DMA request and a hardware DMA request at the same time." value="0x00000000" startoffset="0x020">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="soft_breq" description="Controls whether to generate a DMA burst transfer request using software. For the details about the request signal corresponding to each bit, see Table 3-40.&lt;br&gt;When this register is written:&lt;br&gt;0: No effect.&lt;br&gt;1: A DMA burst transfer request is generated. When the transfer is complete, the corresponding bit is cleared.&lt;br&gt;When this register is read:&lt;br&gt;0: The peripheral corresponding to the request signal DMACBREQ[15:0] does not send a DMA burst request.&lt;br&gt;1: The peripheral corresponding to the request signal DMACBREQ[15:0] is requesting a DMA burst transfer." range="15:0" property="RW"/>
				<Register offset="0x020"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_SOFT_SREQ" description="DMAC_SOFT_SREQ is a DMA single request register for software. It is used to controlwhether to generate a DMA single transfer request using software.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;When this register is read, the device that is requesting the DMA single transfer can bequeried. This register and any of the 16 DMA request input signals of the DMAC each cangenerate a DMA request.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;Do not use a software DMA request and a hardware DMA request at the same time." value="0x00000000" startoffset="0x024">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="soft_sreq" description="Controls whether to generate a DMA single transfer request using software. For details about the request signal corresponding to each bit, see Table 3-40.&lt;br&gt;When this register is written:&lt;br&gt;0: No effect.&lt;br&gt;1: A DMA single transfer request is generated. When the transfer is complete, the corresponding bit is cleared.&lt;br&gt;When this register is read:&lt;br&gt;0: The peripheral corresponding to the request signal DMACBREQ[15:0] does not send a DMA single request.&lt;br&gt;1: The peripheral corresponding to the request signal DMACBREQ[15:0] is requesting a DMA single transfer." range="15:0" property="RW"/>
				<Register offset="0x024"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_SOFT_LBREQ" description="DMAC_SOFT_LBREQ is a DMA last burst request register for software. It is used to controlwhether to generate a DMA last burst transfer request using software." value="0x00000000" startoffset="0x028">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="soft_lbreq" description="Controls whether to generate a last burst request using software. For details about the request signal corresponding to each bit, see ?Table 3-40.&lt;br&gt;0: No effect.&lt;br&gt;1: A DMA last burst transfer request is generated. When the transfer is complete, the corresponding bit is cleared." range="15:0" property="WO"/>
				<Register offset="0x028"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_SOFT_LSREQ" description="DMAC_SOFT_LSREQ is a DMA last single request register for software. It is used to controlwhether to generate a DMA last single transfer request." value="0x00000000" startoffset="0x02C">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="soft_lsreq" description="Controls whether to generate a last single request using software. For details about the request signal corresponding to each bit, see ?Table 3-40.&lt;br&gt;0: No effect.&lt;br&gt;1: A DMA last single transfer request is generated. When the transfer is complete, the corresponding bit is cleared." range="15:0" property="WO"/>
				<Register offset="0x02C"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_CONFIG" description="DMAC_CONFIG is a configuration register. It is used to configure DMAC operations. Youcan change the endian modes of the two master interfaces of the DMAC by writing to m1(bit[1]) and m2 (bit[2]) of this register. After reset, the modes of the two master interfaces areset to little endian.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;Both two Masters work in little endian mode." value="0x00000000" startoffset="0x030">
				<Member name="reserved" description="Reserved." range="31:3" property="-"/>
				<Member name="m2" description="Endian mode of Master 2.&lt;br&gt;0: little endian mode&lt;br&gt;1: big endian mode" range="2" property="RW"/>
				<Member name="m1" description="Endian mode of Master 1.&lt;br&gt;0: little endian mode&lt;br&gt;1: big endian mode" range="1" property="RW"/>
				<Member name="e" description="DMAC enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x030"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_SYNC" description="DMAC_SYNC is a synchronization register. It is used to enable or disable thesynchronization logic provided for DMA request signals." value="0x00000000" startoffset="0x034">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="dmac_sync" description="Controls whether to synchronize the request signals. For the request signal corresponding to each bit, see Table 3-40.&lt;br&gt;0: enable the synchronization logic provided for the DMA request signals of the corresponding peripheral.&lt;br&gt;1: disable the synchronization logic provided for the DMA request signals of the corresponding peripheral." range="15:0" property="RW"/>
				<Register offset="0x034"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_CX_SRC_ADDR" description="DMAC_CX_SRC_ADDR is a source address register. It shows the source addresses (sortedby byte) of the data to be transferred.&lt;br&gt;The offset address of the register is 0x100+X*0x20. The value of X ranges from 0 to 7. Thevalues 0–7 map to DMA channels 0–7.&lt;br&gt;Before a channel is enabled, its corresponding register must be programmed using software.After the channel is enabled, the register is updated in the following cases:&lt;br&gt;&lt;ul&gt;&lt;li&gt;The source address is incremented.&lt;br&gt;&lt;/li&gt;&lt;li&gt;A complete data block is transferred and loaded from LLI nodes.&lt;br&gt;When a channel is active, no valid information is obtained when this register is read. This isbecause that after software obtains the register value, the value is changed during data transfer.Therefore, the register is read after the channel stops data transfer. At this time, the read valueis the last source address read by the DMAC.&lt;br&gt;The source and destination addresses must be aligned with the transfer widths of the sourceand destination devices.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x100+X*0x20">
				<Member name="src_addr" description="DMA source address." range="31:0" property="RW"/>
				<Register offset="0x100"/>
				<Register offset="0x120"/>
				<Register offset="0x140"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_CX_DEST_ADDR" description="DMAC_CX_DEST_ADDR is a destination address register. Its offset address is0x104+X*0x20. The value of X ranges from 0 to 7. The values 0–7 map to DMA channels 0–7.&lt;br&gt;This register contains the destination address (sorted by byte) of the data to be transferred.Before a channel is enabled, its register must be programmed through software. After thechannel is enabled, the register is updated in the following cases:&lt;br&gt;&lt;ul&gt;&lt;li&gt;The destination address is incremented.&lt;br&gt;&lt;/li&gt;&lt;li&gt;A complete data block is transferred and loaded from LLI nodes.&lt;br&gt;When a channel is active, no valid information is obtained when this register is read. This isbecause that after software obtains the register value, the value is changed during data transfer.Therefore, the register is read after the channel stops data transfer. At this time, the read valueis the last destination address written by the DMAC.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x104+X*0x20">
				<Member name="dest_addr" description="DMA destination address." range="31:0" property="RW"/>
				<Register offset="0x104"/>
				<Register offset="0x124"/>
				<Register offset="0x144"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_CXLLI" description="DMAC_CXLLI is an LLI register. Its offset address is 0x108+X*0x20. The value of X rangesfrom 0 to 7. The values 0–7 map to DMA channels 0–7.&lt;br&gt;The data structure of a DMAC LLI node is as follows:&lt;br&gt;&lt;ul&gt;&lt;li&gt;DMAC_CX_SRC_ADDR. It is used to set the start address of the source device.&lt;br&gt;&lt;/li&gt;&lt;li&gt;DMAC_CX_DEST_ADDR. It is used to set the start address of the destination device.&lt;br&gt;&lt;/li&gt;&lt;li&gt;DMAC_CXLLI. It is used to set the address of the next node.&lt;br&gt;&lt;/li&gt;&lt;li&gt;DMAC_CX_CONTROL. It is used to set the Masters, data widths, burst sizes, addressincrement modes, and transfer sizes of the source device and destination device.&lt;br&gt;Structure of DMAC LLIs&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;The value of the LLI field must be equal to or smaller than 0xFFFF_FFF0. Otherwise, theaddress is wrapped around to 0x0000_0000 during a 4-word burst transfer. As a result, thedata structure of LLI nodes cannot be stored in a continuous address area.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;If the LLI field is set to 0, it indicates that the current node is at the end of the linked list. Inthis case, the corresponding channel is disabled after the corresponding data blocks of thecurrent node are transferred." value="0x00000000" startoffset="0x108+X*0x20">
				<Member name="lli" description="LLI. The bit[31:2]of the next LLI node address and the address bit[1:0] are both set to 0. A linked list address must be 4-byte aligned." range="31:2" property="RW"/>
				<Member name="r" description="Reserved. This bit must be 0 during writes and must be masked during reads." range="1" property="RW"/>
				<Member name="lm" description="Master for loading the next LLI node.&lt;br&gt;0: Master1&lt;br&gt;1: Master2" range="0" property="RW"/>
				<Register offset="0x108"/>
				<Register offset="0x128"/>
				<Register offset="0x148"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_CX_CONTROL" description="DMAC_CX_CONTROL is a channel control register. Its offset address is 0x10C+X*0x20.The value of X ranges from 0 to 7. The values 0–7 map to DMA channels 0–7.&lt;br&gt;This register contains the control information about the DMA channels, such as the transfersize, burst size, and transfer bit width.&lt;br&gt;Before a channel is enabled, its corresponding register must be programmed using software.After the channel is enabled, the value of the register is updated when being loaded from theLLI node after a complete data block is transferred.&lt;br&gt;When a channel is active, no valid information is obtained when this register is read. This isbecause that after software obtains the register value, the value is changed during data transfer.After the channel stops data transfer, the register can be read." value="0x00000000" startoffset="0x10C+X*0x20">
				<Member name="i" description="Terminal count interrupt enable. This bit determines whether the current LLI node triggers a terminal count interrupt.&lt;br&gt;0: not trigger&lt;br&gt;1: trigger" range="31" property="RW"/>
				<Member name="prot" description="HPROT[2:0] access protection signal transmitted by the Master." range="30:28" property="RW"/>
				<Member name="di" description="Destination address increment.&lt;br&gt;0: The destination address is not incremented&lt;br&gt;1: The destination address is incremented once after a data segment is transferred&lt;br&gt;If the destination device is a peripheral, the destination address is not incremented. If the destination device is a memory, the destination address is incremented." range="27" property="RW"/>
				<Member name="si" description="Source address increment.&lt;br&gt;0: The source address is not incremented&lt;br&gt;1: The source address is incremented once after a data segment is transferred&lt;br&gt;If the source device is a peripheral, the source address is not incremented. If the source device is a memory, the source address is incremented." range="26" property="RW"/>
				<Member name="d" description="Master for accessing the destination device.&lt;br&gt;0: The SPDIF, SIO0, SIO1, UART0, UART1, and SCI access the destination device using Master1.&lt;br&gt;1: The SPI flash, NAND flash, NOR flash, and DDRC access the destination device using Master 2." range="25" property="RW"/>
				<Member name="s" description="Master for accessing the source device.&lt;br&gt;0: The SPDIF, SIO0, SIO1, UART0, UART1, and SCI access the source device using Master1.&lt;br&gt;1: The SPI flash, NAND flash, NOR flash, and DDRC access the source device using Master2." range="24" property="RW"/>
				<Member name="dwidth" description="Transfer bit width of the destination device.&lt;br&gt;The transfer bit width is invalid if it is greater than the bit width of the Master.&lt;br&gt;The data widths of the destination and source devices can be different. The hardware automatically packs and unpacks the data.&lt;br&gt;For the mapping between the value of DWidth and the bit width, see Table 3-43." range="23:21" property="RW"/>
				<Member name="swidth" description="Transfer bit width of the source device.&lt;br&gt;The transfer bit width is invalid if it is greater than the bit width of the Master.&lt;br&gt;The data widths of the destination and source devices can be different. The hardware automatically packs and unpacks the data.&lt;br&gt;For the mapping between the value of SWidth and the bit width, see Table 3-43." range="20:18" property="RW"/>
				<Member name="dbsize" description="Burst size of the destination device.&lt;br&gt;Indicates the number of data segments to be transferred by the destination device in a burst transfer, that is, the number of transferred data segments when DMACCxBREQ is valid.&lt;br&gt;This value must be set to a burst size supported by the destination device. If the destination device is a memory, the value is set to the storage area size beyond the storage address boundary.&lt;br&gt;For the mapping between the value of DBSize and the transfer length, see Table 3-42." range="17:15" property="RW"/>
				<Member name="sbsize" description="Burst size of the source device.&lt;br&gt;Indicates the number of data segments to be transferred by the source device in a burst transfer, that is, the number of transferred data segments when DMACCxBREQ is valid.&lt;br&gt;The value must be set to a burst size supported by the source device. If the source device is a memory, the value is set to the storage area size beyond the storage address boundary.&lt;br&gt;For the mapping between the value of SBSize and the transfer length, see Table 3-42." range="14:12" property="RW"/>
				<Member name="transfersize" description="The DMA transfer size can be configured by writing to DMAC_CX_CONTROL only when the DMAC is a flow controller. The transfer size indicates the number of the data segments to be transferred by the source device.&lt;br&gt;When DMAC_CX_CONTROL is read, the number of data segments transferred through the bus connected to the destination device is obtained.&lt;br&gt;When a channel is active, no valid information is obtained when this register is read. This is because that after software obtains the register value, the value is changed during data transfer. Therefore, the register is read after the channel is enabled and data transfer is stopped." range="11:0" property="RW"/>
				<Register offset="0x10c"/>
				<Register offset="0x12c"/>
				<Register offset="0x14c"/>
			</RegisterGroup>
			<RegisterGroup name="DMAC_CX_CONFIG" description="DMAC_CX_CONFIG is a channel configuration register. Its offset address is 0x110+X*0x20.The value of X ranges from 0 to 7. The values 0–7 map to DMA channels 0–7.&lt;br&gt;This register is not updated when a new LLI node is loaded." value="0x00000000" startoffset="0x110+X*0x20">
				<Member name="reserved" description="Reserved.&lt;br&gt;This bit must be 0 during writes and must be masked during reads." range="31:19" property="-"/>
				<Member name="h" description="Halt bit.&lt;br&gt;0: The DMA request is allowed.&lt;br&gt;1: The subsequent DMA requests are ignored and the contents in the channel FIFO are completely transferred.&lt;br&gt;This bit can disable a DMA channel without data loss by working with the Active bit and the Channel Enable bit." range="18" property="RW"/>
				<Member name="a" description="Active bit.&lt;br&gt;0: There is no data in the channel FIFO.&lt;br&gt;1: There is data in the channel FIFO.&lt;br&gt;This bit can disable a DMA channel without data loss by working with the Halt bit and Channel Enable bit." range="17" property="RO"/>
				<Member name="l" description="Lock bit.&lt;br&gt;0: Disable lock transfer on the bus.&lt;br&gt;1: Enable lock transfer on the bus." range="16" property="RW"/>
				<Member name="itc" description="Terminal count interrupt mask bit.&lt;br&gt;0: Mask the terminal count interrupts of the channel.&lt;br&gt;1: Do not mask the terminal count interrupts of the channel." range="15" property="RW"/>
				<Member name="ie" description="Error interrupt mask bit.&lt;br&gt;0: Mask the error interrupts of the channel.&lt;br&gt;1: Do not mask the error interrupts of the channel." range="14" property="RW"/>
				<Member name="flow_cntrl" description="Flow control and transfer type field.&lt;br&gt;This field is used to specify the flow controller and the transfer type. The flow controller can be the DMAC, source device, or destination device.&lt;br&gt;The transfer type can be memory to peripheral, peripheral to memory, peripheral to peripheral, or memory to memory. For details, see Table 3-45." range="13:11" property="RW"/>
				<Member name="reserved" description="Reserved.&lt;br&gt;This bit must be 0 during writes and must be masked during reads." range="10" property="-"/>
				<Member name="dest_peripheral" description="Destination device. This field is used to select a peripheral request signal as the request signal of the DMA destination device of the channel.&lt;br&gt;If the destination device for DMA transfer is a memory, this field is ignored." range="9:6" property="RW"/>
				<Member name="reserved" description="Reserved.&lt;br&gt;This bit must be 0 during writes and must be masked during reads." range="5" property="-"/>
				<Member name="src_peripheral" description="Source device. This field is used to select a peripheral request signal as the request signal of the DMA source device of the channel.&lt;br&gt;If the source device for DMA transfer is a memory, this field is ignored." range="4:1" property="RW"/>
				<Member name="e" description="Channel enable bit. The current status of a channel can be queried by reading this register or DMACEnbldChns.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;Clearing this bit can disable a channel. When this bit is cleared, the current bus continues to transfer data until all data is transferred. Then, the channel is disabled and the remaining data in the FIFO is lost. When the last LLI is transferred or an error occurs during transfer, the channel is also disabled and this bit is cleared. If you want to disable a channel without data loss, the Halt bit must be set to 1 so the subsequent DMA requests are ignored by the channel. After this, the Active bit must be polled until its value becomes 0. This indicates that there is no data in the channel FIFO. At this time, the Enable bit can be cleared.&lt;br&gt;To enable a channel by setting this bit to 1, you must reinitialize the channel. If a channel is enabled by setting this bit to 1 only, unexpected results may occur." range="0" property="RW"/>
				<Register offset="0x110"/>
				<Register offset="0x130"/>
				<Register offset="0x150"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="PERI" i2cSupport="false">
			<Module baseAddress="0x10200000"/>
			<RegisterGroup name="START_MODE" description="START_MODE is a system startup status query register." value="0x00000000" startoffset="0x0000">
				<Member name="reserved" description="Reserved." range="31:24" property="RO"/>
				<Member name="jtag_io_sel" description="Multiplexing control indication of JTAG pins.&lt;br&gt;0: The pin function depends on pin multiplexing registers.&lt;br&gt;1: JTAG function&lt;br&gt;Note: JTAG pins include JTAG_TDI, JTAG_TCK, JTAG_TMS, JTAG_TDO, and JTAG_TRSTN. When jtag_io_sel is 0, the pin function depends on the values of tsi0_vi0_tsi1_gpio_ao[2:0] and tsi0_jtag_gpio_ao[2:0]. For details, see the description of &quot;Pin Multiplexing.&quot;" range="23" property="RO"/>
				<Member name="reserved" description="Reserved." range="22:20" property="RO"/>
				<Member name="mven" description="Macrovision enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="19" property="RO"/>
				<Member name="chipid" description="Chip version identification.&lt;br&gt;01000: Hi3716M&lt;br&gt;Other values: reserved" range="18:14" property="RO"/>
				<Member name="self_boot" description="Self-boot enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="13" property="RO"/>
				<Member name="nf_bootbw" description="Whether to enable the randomizer when a NAND flash is used:&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;Data bit width select signal for MMC booting when an MMC is used:&lt;br&gt;0: 4 bits (MMC)&lt;br&gt;1: 8 bits (MMC)" range="12" property="RO"/>
				<Member name="reserved" description="Reserved." range="11" property="RO"/>
				<Member name="boot_sel" description="Boot memory type select.&lt;br&gt;00: SPI flash&lt;br&gt;01: NAND flash&lt;br&gt;11: MMC&lt;br&gt;Other values: reserved" range="10:9" property="RO"/>
				<Member name="reserved" description="Reserved." range="8:0" property="RO"/>
				<Register offset="0x0000"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_STAT" description="PERI_STAT is a peripheral status indicator register." value="0x00000000" startoffset="0x0004">
				<Member name="reserved" description="Reserved." range="31:20" property="RO"/>
				<Member name="osc_tde_stat" description="TDE OSC status." range="19:10" property="RO"/>
				<Member name="osc_cpuaxi_stat" description="Bus OSC status." range="9:0" property="RO"/>
				<Register offset="0x0004"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CTRL" description="PERI_CTRL is a peripheral control register." value="0x00000000" startoffset="0x0008">
				<Member name="jtag_sel" description="JTAG interface select.&lt;br&gt;00: A9 JTAG interface&lt;br&gt;01: reserved&lt;br&gt;10: reserved&lt;br&gt;11: SoC JTAG interface" range="31:30" property="RW"/>
				<Member name="sdio_card_detect_n" description="Polarity of the SDIO card detection signal.&lt;br&gt;0: active low&lt;br&gt;1: active high" range="29" property="RW"/>
				<Member name="reserved" description="Reserved." range="28:12" property="RW"/>
				<Member name="mddrc_apbclk_gt_en" description="Clock domain gating enable for the MDDRC register.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="11" property="RW"/>
				<Member name="reserved" description="Reserved." range="10:8" property="RW"/>
				<Member name="ssp_cs_sel" description="SSP CS multiplexing control.&lt;br&gt;0: SSP CS0&lt;br&gt;1: SSP CS1" range="7" property="RW"/>
				<Member name="reserved" description="Reserved." range="6:1" property="RW"/>
				<Member name="cbar_en" description="VO cbar enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x0008"/>
			</RegisterGroup>
			<RegisterGroup name="CPU_STAT" description="CPU_STAT is an A9 status query register." value="0x01000000" startoffset="0x000C">
				<Member name="reserved" description="Reserved." range="31:25" property="RO"/>
				<Member name="l2_idle_stat" description="Status of the L2 cache controller.&lt;br&gt;0: non-idle&lt;br&gt;1: idle" range="24" property="RO"/>
				<Member name="reserved" description="Reserved." range="23:15" property="RO"/>
				<Member name="deflags0" description="Status of the internal data engine of core0.&lt;br&gt;Bit[6]: 0&lt;br&gt;Bit[5]: the same as the internal register FPSCR[7] of core0&lt;br&gt;Bit[4:0]: the same as the internal register FPSCR[4:0] of core0" range="14:8" property="RO"/>
				<Member name="core1_standbywfe" description="Reserved." range="7" property="RO"/>
				<Member name="core0_standbywfe" description="Whether core0 enters the wait for event (WFE) mode.&lt;br&gt;0: do not enter the WFE mode&lt;br&gt;1: enter the WFE mode" range="6" property="RO"/>
				<Member name="core1_standbywfi" description="Reserved." range="5" property="RO"/>
				<Member name="core0_standbywfi" description="Whether core0 enters the wait for interrupt (WFI) mode.&lt;br&gt;0: do not enter the WFI mode&lt;br&gt;1: enter the WFI mode" range="4" property="RO"/>
				<Member name="core1_pmupriv" description="Reserved." range="3" property="RO"/>
				<Member name="core0_pmupriv" description="Core0 status.&lt;br&gt;0: user mode&lt;br&gt;1: privileged mode" range="2" property="RO"/>
				<Member name="core1_pmusecure" description="Reserved." range="1" property="RO"/>
				<Member name="core0_pmusecure" description="Core0 secure status.&lt;br&gt;0: non-secure mode&lt;br&gt;1: secure mode" range="0" property="RO"/>
				<Register offset="0x000C"/>
			</RegisterGroup>
			<RegisterGroup name="CPU_SET" description="CPU_SET is an A9 configuration register." value="0x00000000" startoffset="0x0010">
				<Member name="reserved" description="Reserved." range="31:3" property="RW"/>
				<Member name="core0_cfgnmfi" description="Whether core0 masks the fast interrupt request (FIQ).&lt;br&gt;0: clear the NMFI bit of the CP15 c1 control register&lt;br&gt;1: set the NMFI bit of the CP15 c1 control register to 1&lt;br&gt;Note: This bit can be configured only before the CPU core is reset." range="2" property="RW"/>
				<Member name="cfgsdisable" description="Access control for a specific internal register of the CPU core.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="1" property="RW"/>
				<Member name="core0_cp15sdisable" description="Access control for certain internal control registers of CPU core0.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x0010"/>
			</RegisterGroup>
			<RegisterGroup name="NF_CFG" description="NF_CFG is a NAND flash configuration status query register." value="0x00000000" startoffset="0x0014">
				<Member name="reserved" description="Reserved." range="31:19" property="RW"/>
				<Member name="nf_boot_cfg_in" description="Value of the NF_BOOT_CFG chip.&lt;br&gt;00000: 512-byte page size, 1-bit ECC, 32 pages/blocks, 4 addresses&lt;br&gt;00001: 2 KB page size, 1-bit ECC, 64 pages/blocks, 5 addresses&lt;br&gt;00010: 8 KB page size, 40-bit ECC, 256 pages/blocks&lt;br&gt;00011: 2 KB page size, 4-bit ECC, 64 pages/blocks, 5 addresses&lt;br&gt;00100: 4 KB page size, 24-bit ECC, 256 pages/blocks&lt;br&gt;00101: 2 KB page size, 24-bit ECC, 64 pages/blocks&lt;br&gt;00110: 2 KB page size, 1-bit ECC, 64 pages/blocks, 4 addresses&lt;br&gt;00111: 8 KB page size, 24-bit ECC, 256 pages/blocks&lt;br&gt;01000: 4 KB page size, 4-bit ECC, 128 pages/blocks&lt;br&gt;01001: 4 KB page size, 4-bit ECC, 64 pages/blocks&lt;br&gt;01010: 2 KB page size, 4-bit ECC, 64 pages/blocks, 4 addresses&lt;br&gt;01011: 4 KB page size, 24-bit ECC, 128 pages/blocks&lt;br&gt;01100: 16 KB page size, 40-bit ECC, 128 pages/blocks&lt;br&gt;01101: 8 KB page size, 24-bit ECC, 128 pages/blocks&lt;br&gt;01110: 8 KB page size, 40-bit ECC, 64 pages/blocks&lt;br&gt;01111: 16 KB page size, 40-bit ECC, 512 pages/blocks&lt;br&gt;10000: 8 KB page size, 24-bit ECC, 64 pages/blocks&lt;br&gt;10001: 4 KB page size, 24-bit ECC, 64 pages/blocks&lt;br&gt;10010: clear NAND, 8 KB page size, 128 pages/blocks&lt;br&gt;10011: 4 KB page size, 1-bit ECC, 64 pages/blocks&lt;br&gt;10100: 16 KB page size, 40-bit ECC, 256 pages/blocks&lt;br&gt;10101: 2 KB page size, 4-bit ECC, 128 pages/blocks&lt;br&gt;10110: 2 KB page size, 8-bit ECC, 128 pages/blocks&lt;br&gt;10111: clear NAND, 16 KB page size, 128 pages/blocks&lt;br&gt;11000: clear NAND, 16 KB page size, 256 pages/blocks&lt;br&gt;11001: 2 KB page size, 24-bit ECC, 128 pages/blocks&lt;br&gt;11010: 2 KB page size, 8-bit ECC, 64 pages/blocks&lt;br&gt;11011: clear NAND, 8 KB page size, 256 pages/blocks&lt;br&gt;11100: clear NAND, 16 KB page size, 512 pages/blocks&lt;br&gt;11101: 8 KB page size, 40-bit ECC, 128 pages/blocks&lt;br&gt;11110: 4 KB page size, 8-bit ECC, 64 pages/blocks&lt;br&gt;11111: 4 KB page size, 8-bit ECC, 128 pages/blocks" range="18:14" property="RW"/>
				<Member name="nf_boot_cfg_lock" description="NAND flash for booting the system.&lt;br&gt;00000: 512-byte page size, 1-bit ECC, 32 pages/blocks, 4 addresses&lt;br&gt;00001: 2 KB page size, 1-bit ECC, 64 pages/blocks, 5 addresses&lt;br&gt;00010: 8 KB page size, 40-bit ECC, 256 pages/blocks&lt;br&gt;00011: 2 KB page size, 4-bit ECC, 64 pages/blocks, 5 addresses&lt;br&gt;00100: 4 KB page size, 24-bit ECC, 256 pages/blocks&lt;br&gt;00101: 2 KB page size, 24-bit ECC, 64 pages/blocks&lt;br&gt;00110: 2 KB page size, 1-bit ECC, 64 pages/blocks, 4 addresses&lt;br&gt;00111: 8 KB page size, 24-bit ECC, 256 pages/blocks&lt;br&gt;01000: 4 KB page size, 4-bit ECC, 128 pages/blocks&lt;br&gt;01001: 4 KB page size, 4-bit ECC, 64 pages/blocks&lt;br&gt;01010: 2 KB page size, 4-bit ECC, 64 pages/blocks, 4 addresses&lt;br&gt;01011: 4 KB page size, 24-bit ECC, 128 pages/blocks&lt;br&gt;01100: 16 KB page size, 40-bit ECC, 128 pages/blocks&lt;br&gt;01101: 8 KB page size, 24-bit ECC, 128 pages/blocks&lt;br&gt;01110: 8 KB page size, 40-bit ECC, 64 pages/blocks&lt;br&gt;01111: 16 KB page size, 40-bit ECC, 512 pages/blocks&lt;br&gt;10000: 8 KB page size, 24-bit ECC, 64 pages/blocks&lt;br&gt;10001: 4 KB page size, 24-bit ECC, 64 pages/blocks&lt;br&gt;10010: clear NAND, 8 KB page size, 128 pages/blocks&lt;br&gt;10011: 4 KB page size, 1-bit ECC, 64 pages/blocks&lt;br&gt;10100: 16 KB page size, 40-bit ECC, 256 pages/blocks&lt;br&gt;10101: 2 KB page size, 4-bit ECC, 128 pages/blocks&lt;br&gt;10110: 2 KB page size, 8-bit ECC, 128 pages/blocks&lt;br&gt;10111: clear NAND, 16 KB page size, 128 pages/blocks&lt;br&gt;11000: clear NAND, 16 KB page size, 256 pages/blocks&lt;br&gt;11001: 2 KB page size, 24-bit ECC, 128 pages/blocks&lt;br&gt;11010: 2 KB page size, 8-bit ECC, 64 pages/blocks&lt;br&gt;11011: clear NAND, 8 KB page size, 256 pages/blocks&lt;br&gt;11100: clear NAND, 16 KB page size, 512 pages/blocks&lt;br&gt;11101: 8 KB page size, 40-bit ECC, 128 pages/blocks&lt;br&gt;11110: 4 KB page size, 8-bit ECC, 64 pages/blocks&lt;br&gt;11111: 4 KB page size, 8-bit ECC, 128 pages/blocks" range="13:9" property="RO"/>
				<Member name="nf_adnum" description="Number of addresses sent to the NAND flash.&lt;br&gt;0: 4 addresses&lt;br&gt;1: 5 addresses" range="8" property="RO"/>
				<Member name="nf_page" description="Page size of the NAND flash during booting&lt;br&gt;000: 512 bytes&lt;br&gt;001: 2 KB&lt;br&gt;010: 4 KB&lt;br&gt;011: 8 KB&lt;br&gt;100: 16 KB&lt;br&gt;Other values: reserved" range="7:5" property="RO"/>
				<Member name="nf_blksize" description="Block size of the NAND flash during booting.&lt;br&gt;00: 64 pages for the single-level cell (SLC) component&lt;br&gt;01: 128 pages for the multi-level cell (MLC) component&lt;br&gt;10: 256 pages&lt;br&gt;11: 512 pages" range="4:3" property="RO"/>
				<Member name="nf_ecc_type" description="ECC mode during booting.&lt;br&gt;000: non-ECC mode&lt;br&gt;001: 1-bit mode&lt;br&gt;010: 4-bit mode&lt;br&gt;110: 8-bit mode&lt;br&gt;100: 24-bit mode&lt;br&gt;101: 40-bit mode&lt;br&gt;Other values: reserved" range="2:0" property="RO"/>
				<Register offset="0x0014"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_USB_CONFIG" description="PERI_USB_ CONFIG is a usb_config register." value="0x000333A8" startoffset="0x0028">
				<Member name="reserved" description="Reserved." range="31:21" property="RW"/>
				<Member name="preamble_sel" description="Idle cycle after the full-speed preamble packet.&lt;br&gt;0: five full-speed idle cycles after the full-speed preamble packet&lt;br&gt;1: four full-speed idle cycles after the full-speed preamble packet" range="20" property="RW"/>
				<Member name="ovr_merge_en" description="Overcurrent signal shared by two ports. That is, the port overcurrent signal when phy1_ovrcur_en or phy0_ovrcur_en is 1.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="19" property="RW"/>
				<Member name="pwr_merge_en" description="Both phy1_pwr_en and phy0_pwr_en are enabled only when a port is powered on.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="18" property="RW"/>
				<Member name="usbovr_p_ctrl" description="Polarity for overcurrent protection.&lt;br&gt;0: active low&lt;br&gt;1: active high" range="17" property="RW"/>
				<Member name="usbpwr_p_ctrl" description="Polarity for power enable.&lt;br&gt;0: active low&lt;br&gt;1: active high" range="16" property="RW"/>
				<Member name="phy1_ovrcur_en" description="Overcurrent protection enable of PHY1.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="15" property="RW"/>
				<Member name="phy0_ovrcur_en" description="Overcurrent protection enable of PHY0.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="14" property="RW"/>
				<Member name="phy1_pwr_en" description="Power-off control for the PHY1 power supply.&lt;br&gt;0: power off&lt;br&gt;1: enable the power output of the controller" range="13" property="RW"/>
				<Member name="phy0_pwr_en" description="Power-off control for the PHY0 power supply.&lt;br&gt;0: power off&lt;br&gt;1: enable the power output of the controller" range="12" property="RW"/>
				<Member name="reserved" description="Reserved." range="11:10" property="RW"/>
				<Member name="ss_ena_incr16_i" description="AHB burst16 enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled (default)" range="9" property="RW"/>
				<Member name="ss_ena_incr8_i" description="AHB burst8 enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled (default)" range="8" property="RW"/>
				<Member name="ss_ena_incr4_i" description="AHB burst4 enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled (default)" range="7" property="RW"/>
				<Member name="ss_ena_incrx_align_i" description="Burst alignment enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled (default)" range="6" property="RW"/>
				<Member name="ss_autoppd_on_overcur_en_i" description="Automatic port power-off enable during overcurrent.&lt;br&gt;0: disabled&lt;br&gt;1: enabled (default)" range="5" property="RW"/>
				<Member name="rsv0" description="Reserved (ulpi mode16_en)." range="4" property="RW"/>
				<Member name="ulpi_bypass_en" description="ULPI bypass control. This bit must be set to 1.&lt;br&gt;0: ULPI mode&lt;br&gt;1: UTMI mode" range="3" property="RW"/>
				<Member name="app_start_clk_i" description="Open host controller interface (OHCI) clock control.&lt;br&gt;0: The OHCI works properly (default).&lt;br&gt;1: The OHCI clock is enabled in suspend mode." range="2" property="RW"/>
				<Member name="ohci_susp_lgcy_i" description="Strap input signal when the OHCI is suspended. The default value is 0." range="1" property="RW"/>
				<Member name="wordinterface" description="Data bit width select of the UTMI interface.&lt;br&gt;0: 8 bits (default)&lt;br&gt;1: 16 bits" range="0" property="RW"/>
				<Register offset="0x0028"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_USB_PHY0_CONFIG" description="PERI_USB_PHY0_CONFIG is the usb_phy0_config register." value="0x001D2188" startoffset="0x002C">
				<Member name="reserved" description="Reserved." range="31:23" property="RW"/>
				<Member name="siddq" description="Analog power power-off test enable of PHY0.&lt;br&gt;0: do not power off the analog power&lt;br&gt;1: power off the analog power&lt;br&gt;The default value is 0. The bit must be set to 0 before the built-in self test (BIST)." range="22" property="RW"/>
				<Member name="commononn" description="Whether XO BIAS BANDGAP PLL works when PHY0 is suspended.&lt;br&gt;0: clk48m_ohci output is always valid even when PHY0 is suspended. The default value is 0.&lt;br&gt;1: clk48m_ohci output is valid except when PHY0 is suspended." range="21" property="RW"/>
				<Member name="phy0_txhsxvtune" description="Crossover voltage tune signal of DP/DM.&lt;br&gt;11: default&lt;br&gt;10: +15 mV&lt;br&gt;01: –15 mV&lt;br&gt;00: reserved" range="20:19" property="RW"/>
				<Member name="phy0_sleepm" description="Sleep mode of port 0.&lt;br&gt;1: normal mode&lt;br&gt;0: sleep mode" range="18" property="RW"/>
				<Member name="phy0_loopbackenb" description="Loopback (from D+ to D-) test enable of PHY0. The default value is 0, and this bit must be set to 0." range="17" property="RW"/>
				<Member name="phy0_compdistune" description="HOSDISCONNECT threshold level tune signal of PHY0.&lt;br&gt;111: +4.5%&lt;br&gt;110: +3.0%&lt;br&gt;101: +1.5%&lt;br&gt;100: default&lt;br&gt;010: –3%&lt;br&gt;001: –4.5%&lt;br&gt;000: –6%&lt;br&gt;Other values: reserved" range="16:14" property="RW"/>
				<Member name="phy0_sqrxtune" description="Squelch circuit tune signal of PHY0.&lt;br&gt;111: –15%&lt;br&gt;110: –10%&lt;br&gt;101: –5%&lt;br&gt;100: default&lt;br&gt;011: +5%&lt;br&gt;010: +10%&lt;br&gt;001: +15%&lt;br&gt;000: +20%" range="13:11" property="RW"/>
				<Member name="phy0_txfslstune" description="FS LS impedance tune signal of PHY0.&lt;br&gt;1111: –5%&lt;br&gt;0111: –2.5%&lt;br&gt;0011: default&lt;br&gt;0001: +2.5%&lt;br&gt;0000: +5%&lt;br&gt;Others: reserved" range="10:7" property="RW"/>
				<Member name="phy0_txpreemphasistune" description="Pre-emphasis transmit enable in HS mode of PHY0.&lt;br&gt;1: enabled&lt;br&gt;0: disabled (default)" range="6" property="RW"/>
				<Member name="rev0" description="Reserved." range="5" property="RW"/>
				<Member name="phy0_txrisetune" description="High-speed signal up/down time tune of PHY0.&lt;br&gt;1: –8%&lt;br&gt;0: default" range="4" property="RW"/>
				<Member name="phy0_txverftune" description="DC level tune signal in HS mode of PHY1.&lt;br&gt;1111: +8.75%&lt;br&gt;1110: +7.5%&lt;br&gt;1101: +6.25%&lt;br&gt;1100: +5%&lt;br&gt;1011: +3.7%&lt;br&gt;1010: +2.5% &lt;br&gt;1001: +1.25% &lt;br&gt;1000: default&lt;br&gt;0111: –1.25%&lt;br&gt;0110: –2.5% &lt;br&gt;0101: –3.75% &lt;br&gt;0100: –5%&lt;br&gt;0011: –6.25%&lt;br&gt;0010: –7.5%&lt;br&gt;0001: –8.75%&lt;br&gt;0000: –10%" range="3:0" property="RW"/>
				<Register offset="0x002C"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_USB_PHY1_CONFIG" description="PERI_USB_PHY1_CONFIG is the usb_phy1_config register." value="0x001D2188" startoffset="0x0030">
				<Member name="reserved" description="Reserved." range="31:21" property="RW"/>
				<Member name="phy1_txhsxvtune" description="Crossover voltage tune signal of DP/DM.&lt;br&gt;11: default&lt;br&gt;10: +15 mV&lt;br&gt;01: –15 mV&lt;br&gt;00: reserved" range="20:19" property="RW"/>
				<Member name="phy1_sleepm" description="Sleep mode of port 1.&lt;br&gt;1: normal mode&lt;br&gt;0: sleep mode" range="18" property="RW"/>
				<Member name="phy1_loopbackenb" description="Loopback (from D+ to D-) test enable signal of PHY1. The default value is 0, and the bit must be set to 0." range="17" property="RW"/>
				<Member name="phy1_compdistune" description="HOSDISCONNECT threshold level tune signal of PHY1.&lt;br&gt;111: +4.5%&lt;br&gt;110: +3.0%&lt;br&gt;101: +1.5%&lt;br&gt;100: default&lt;br&gt;010: –3%&lt;br&gt;001: –4.5%&lt;br&gt;000: –6%&lt;br&gt;Other values: reserved" range="16:14" property="RW"/>
				<Member name="phy1_sqrxtune" description="Squelch circuit tune signal of PHY1.&lt;br&gt;111: –15%&lt;br&gt;110: –10%&lt;br&gt;101: –5%&lt;br&gt;100: default&lt;br&gt;011: +5%&lt;br&gt;010: +10%&lt;br&gt;001: +15%&lt;br&gt;000: +20%" range="13:11" property="RW"/>
				<Member name="phy1_txfslstune" description="FS LS impedance tune signal of PHY1.&lt;br&gt;1111: –5%&lt;br&gt;0111: –2.5%&lt;br&gt;0011: default&lt;br&gt;0001: +2.5%&lt;br&gt;0000: +5%&lt;br&gt;Others: reserved" range="10:7" property="RW"/>
				<Member name="phy1_txpreemphasistune" description="Pre-emphasis transmit enable signal in HS mode of PHY1.&lt;br&gt;1: enabled&lt;br&gt;0: disabled (default)" range="6" property="RW"/>
				<Member name="rsv" description="Reserved." range="5" property="RW"/>
				<Member name="phy1_txrisetune" description="High-speed signal up/down time tune of PHY1.&lt;br&gt;1: –8%&lt;br&gt;0: default" range="4" property="RW"/>
				<Member name="phy1_txvreftune" description="DC level tune signal in HS mode of PHY1.&lt;br&gt;1111: +8.75%&lt;br&gt;1110: +7.5%&lt;br&gt;1101: +6.25%&lt;br&gt;1100: +5%&lt;br&gt;1011: +3.7%&lt;br&gt;1010: +2.5%&lt;br&gt;1001: +1.25%&lt;br&gt;1000: default&lt;br&gt;0111: –1.25%&lt;br&gt;0110: –2.5%&lt;br&gt;0101: –3.75%&lt;br&gt;0100: –5%&lt;br&gt;0011: –6.25%&lt;br&gt;0010: –7.5%&lt;br&gt;0001: –8.75%&lt;br&gt;0000: –10%" range="3:0" property="RW"/>
				<Register offset="0x0030"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_QAM" description="PERI_QAM is a QAM control register." value="0x00000000" startoffset="0x0034">
				<Member name="reserved" description="Reserved." range="31:7" property="RW"/>
				<Member name="i2c_qam_devaddr" description="Address of the I2C QAM device." range="6:0" property="RW"/>
				<Register offset="0x0034"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_QAM_ADC0" description="PERI_QAM_ADC0 is QAMADC control register 0." value="0x000000F0" startoffset="0x0038">
				<Member name="samp_phase_sel" description="Sample phase select.&lt;br&gt;0: rising edge&lt;br&gt;1: falling edge" range="31" property="RW"/>
				<Member name="reserved" description="Reserved." range="30:26" property="RW"/>
				<Member name="clk_nover_adj" description="Clock non-overlap adjust.&lt;br&gt;00: nominal&lt;br&gt;01: –100 ps&lt;br&gt;10: +100 ps&lt;br&gt;11: +200 ps" range="25:24" property="RW"/>
				<Member name="in_range_adj" description="Analog input range adjust.&lt;br&gt;00: 1.4 Vpp&lt;br&gt;01: 1.6 Vpp&lt;br&gt;10: 1.0 Vpp&lt;br&gt;11: 1.2 Vpp" range="23:22" property="RW"/>
				<Member name="mode_adj" description="ADC common-mode adjust.&lt;br&gt;00: 600 mV&lt;br&gt;01: 660 mV&lt;br&gt;10: 480 mV&lt;br&gt;11: 540 mV" range="21:20" property="RW"/>
				<Member name="ref_buf_boost" description="Reference buffer boost.&lt;br&gt;00: 1.0X&lt;br&gt;01: 1.5X&lt;br&gt;10: 2.0X&lt;br&gt;11: 2.5X" range="19:18" property="RW"/>
				<Member name="reserved" description="Reserved." range="17" property="RW"/>
				<Member name="mode_sel" description="ADC common-mode select.&lt;br&gt;0: bgap&lt;br&gt;1: avdd/2" range="16" property="RW"/>
				<Member name="ref_amps_ba" description="Reference AMPS bias adjust.&lt;br&gt;00: 20 ?A&lt;br&gt;01: 40 ?A&lt;br&gt;10: 10 ?A&lt;br&gt;11: 15 ?A" range="15:14" property="RW"/>
				<Member name="ref_amps_bu" description="Reference AMPS bias up.&lt;br&gt;00: 1.0X&lt;br&gt;01: 1.5X&lt;br&gt;10: 2.0X&lt;br&gt;11: 2.5X" range="13:12" property="RW"/>
				<Member name="ref_amps_bd" description="Reference AMPS bias down.&lt;br&gt;0x0: maximum Bias&lt;br&gt;0xF: minimum Bias&lt;br&gt;Other values: reserved" range="11:8" property="RW"/>
				<Member name="en_adc" description="Enable ADC.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="7" property="RW"/>
				<Member name="reserved" description="Reserved." range="6" property="RW"/>
				<Member name="en_ref" description="Enable reference buffers.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="5" property="RW"/>
				<Member name="en_bgap_vol_ref" description="Enable bandgap voltage reference.&lt;br&gt;0: external&lt;br&gt;1: internal" range="4" property="RW"/>
				<Member name="cm_resi_div" description="ADC input CM resistive divider.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="3" property="RW"/>
				<Member name="format_sel" description="2's complement select.&lt;br&gt;0: binary&lt;br&gt;1: 2's complement" range="2" property="RW"/>
				<Member name="reserved" description="Reserved." range="1:0" property="RW"/>
				<Register offset="0x0038"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_QAM_ADC1" description="PERI_QAM_ADC1 is QAMADC control register 1." value="0x00000000" startoffset="0x003C">
				<Member name="reserved" description="Reserved." range="31:24" property="RW"/>
				<Member name="bg_trt" description="Bandgap temperature response tuning.&lt;br&gt;0000: nominal&lt;br&gt;0111: +full scale&lt;br&gt;1000: –full scale&lt;br&gt;Other values: reserved" range="23:20" property="RW"/>
				<Member name="bg_gain" description="Bandgap gain control.&lt;br&gt;0000: nominal&lt;br&gt;0111: +full scale&lt;br&gt;1000: –full scale&lt;br&gt;Other values: reserved" range="19:16" property="RW"/>
				<Member name="amp1_stage2_bu" description="ADC AMP1 stage2 bias up.&lt;br&gt;00: 1.0X&lt;br&gt;01: 1.5X&lt;br&gt;10: 2.0X&lt;br&gt;11: 2.5X" range="15:14" property="RW"/>
				<Member name="amp234_stage2_bu" description="ADC AMP2-4 stage2 bias up.&lt;br&gt;00: 1.0X&lt;br&gt;01: 1.5X&lt;br&gt;10: 2.0X&lt;br&gt;11: 2.5X" range="13:12" property="RW"/>
				<Member name="quantizer_bu" description="Quantizer bias up.&lt;br&gt;00: 1.0X&lt;br&gt;01: 1.5X&lt;br&gt;10: 2.0X&lt;br&gt;11: 2.5X" range="11:10" property="RW"/>
				<Member name="reserved" description="Reserved." range="9:8" property="RW"/>
				<Member name="bias_reg_adj" description="ADC bias register adjust.&lt;br&gt;00: 20 ?A&lt;br&gt;01: 40 ?A&lt;br&gt;10: 10 ?A&lt;br&gt;11: 15 ?A" range="7:6" property="RW"/>
				<Member name="main_bd" description="Main bias down.&lt;br&gt;00: –75%&lt;br&gt;01: –50%&lt;br&gt;10: –25%&lt;br&gt;11: nominal" range="5:4" property="RW"/>
				<Member name="amp1_stage1_bu" description="ADC AMP1 stage1 bias up.&lt;br&gt;00: 1.0X&lt;br&gt;01: 1.5X&lt;br&gt;10: 2.0X&lt;br&gt;11: 2.5X" range="3:2" property="RW"/>
				<Member name="amp234_stage1_bu" description="ADC AMP2-4 stage1 bias up.&lt;br&gt;00: 1.0X&lt;br&gt;01: 1.5X&lt;br&gt;10: 2.0X&lt;br&gt;11: 2.5X" range="1:0" property="RW"/>
				<Register offset="0x003C"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE0" description="PERI_PAD_DRIVE0 is PAD drive capability control register 0." value="0x00000102" startoffset="0x0060">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl0" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive0" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD MDIO pin.&lt;br&gt;When this PAD is used as the output of the RMII function mode:&lt;br&gt;Two- or four-layer boards with 4 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended." range="2:0" property="RW"/>
				<Register offset="0x0060"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE1" description="PERI_PAD_DRIVE1 is PAD drive capability control register 1." value="0x00000102" startoffset="0x0064">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl1" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive1" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD MII0_TXD1, MII0_TXD0, MII0_TXEN, MII0_RXDV, MII0_RXD1, or MII0_RXD0 pin.&lt;br&gt;When this PAD is used as the output of the RMII function mode:&lt;br&gt;Two-layer boards with 4 mA current and four-layer boards with 8 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the MII function mode:&lt;br&gt;Two-layer boards with 4 mA current and four-layer boards with 8 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended." range="2:0" property="RW"/>
				<Register offset="0x0064"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE2" description="PERI_PAD_DRIVE2 PAD drive capability control register 2." value="0x00000106" startoffset="0x0068">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl2" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive2" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD MII0_RXCK pin.&lt;br&gt;When this PAD is used as the output of the RMII function mode:&lt;br&gt;Two-layer boards with 8 mA current and four-layer boards with 11 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended." range="2:0" property="RW"/>
				<Register offset="0x0068"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE3" description="PERI_PAD_DRIVE3 PAD drive capability control register 3." value="0x00000102" startoffset="0x006C">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl3" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive3" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD MII1_TXD1, MII1_TXD0, MII1_TXEN, MII1_RXDV, MII1_RXD0, or MII1_RXD1 pin.&lt;br&gt;When this PAD is used as the output of the RMII function mode:&lt;br&gt;Two-layer boards with 4 mA current and four-layer boards with 8 mA current are recommended&lt;br&gt;When this PAD is used as the output of the MII function mode:&lt;br&gt;Two-layer boards with 4 mA current and four-layer boards with 8 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended." range="2:0" property="RW"/>
				<Register offset="0x006C"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE4" description="PERI_PAD_DRIVE4 PAD drive capability control register 4." value="0x00000106" startoffset="0x0070">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl4" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive4" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD MII1_RXCK pin.&lt;br&gt;When this PAD is used as the output of the RMII function mode:&lt;br&gt;Two-layer boards with 8 mA current and four-layer boards with 11 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended." range="2:0" property="RW"/>
				<Register offset="0x0070"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE5" description="PERI_PAD_DRIVE5 PAD drive capability control register 5." value="0x00000102" startoffset="0x0074">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl5" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive5" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD MDCK pin.&lt;br&gt;When this PAD is used as the output of the RMII function mode:&lt;br&gt;Two-layer boards with 4 mA current and four-layer boards with 8 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended." range="2:0" property="RW"/>
				<Register offset="0x0074"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE6" description="PERI_PAD_DRIVE6 PAD drive capability control register 6." value="0x00000106" startoffset="0x0078">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl6" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive6" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD EBI_DQ0–7, NF_CSN0, NF_CLE, or NF_ALE pin.&lt;br&gt;When this PAD is used as the output of the NANDC function mode:&lt;br&gt;Two-layer boards with 4 mA current and four-layer boards with 8 mA current are recommended&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the SDIO function mode:&lt;br&gt;Two- or four-layer boards with 8 mA current are recommended." range="2:0" property="RW"/>
				<Register offset="0x0078"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE7" description="PERI_PAD_DRIVE7 PAD drive capability control register 7." value="0x00000106" startoffset="0x007C">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl7" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive7" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD NF_RDY0 pin.&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the SDIO function mode:&lt;br&gt;Two- or four-layer boards and 11 mA are recommended." range="2:0" property="RW"/>
				<Register offset="0x007C"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE8" description="PERI_PAD_DRIVE8 PAD drive capability control register 8." value="0x00000106" startoffset="0x0080">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl8" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive8" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD NF_REN or NF_WEN pin.&lt;br&gt;When this PAD is used as the output of the NANDC function mode:&lt;br&gt;Two- or four-layer boards with 8 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the SDIO function mode:&lt;br&gt;Two- or four-layer boards with 8 mA current are recommended." range="2:0" property="RW"/>
				<Register offset="0x0080"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE9" description="PERI_PAD_DRIVE9 PAD drive capability control register 9." value="0x00000106" startoffset="0x0084">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl9" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive9" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD SFC_DIO, SFC_WP_IO2, SFC_DOI, or SFC_CS1N pin.&lt;br&gt;When this PAD is used as the output of the SFC function mode:&lt;br&gt;Two-layer boards with 4 mA current and four-layer boards with 8 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the SIO function mode:&lt;br&gt;Two- or four-layer boards with 4 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the AO function mode:&lt;br&gt;Two- or four-layer boards with 4 mA current are recommended." range="2:0" property="RW"/>
				<Register offset="0x0084"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE10" description="PERI_PAD_DRIVE10 PAD drive capability control register 10." value="0x00000106" startoffset="0x0088">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl10" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive10" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD SFC_CLK pin.&lt;br&gt;When this PAD is used as the output of the SFC function mode:&lt;br&gt;Two-layer boards with 4 mA current and four-layer boards with 8 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the SIO function mode:&lt;br&gt;Two-layer boards with 4 mA current and four-layer boards with 8 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the AO function mode:&lt;br&gt;Two-layer boards with 4 mA current and four-layer boards with 8 mA current are recommended." range="2:0" property="RW"/>
				<Register offset="0x0088"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE11" description="PERI_PAD_DRIVE11 PAD drive capability control register 11." value="0x00000106" startoffset="0x008C">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl11" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive11" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD SFC_HOLD_IO3 pin.&lt;br&gt;When this PAD is used as the output of the SFC function mode:&lt;br&gt;Two-layer boards with 4 mA current and four-layer boards with 8 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the GPIO function mode:&lt;br&gt;Two-layer boards with 3 mA current and four-layer boards with 4 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the SIO function mode:&lt;br&gt;Two- or four-layer boards with 8 mA current are recommended.&lt;br&gt;When this PAD is used as the output of the AO function mode:&lt;br&gt;Two- or four-layer boards with 8 mA current are recommended." range="2:0" property="RW"/>
				<Register offset="0x008C"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_PAD_DRIVE12" description="PERI_PAD_DRIVE12 PAD drive capability control register 12." value="0x00000102" startoffset="0x0090">
				<Member name="reserved" description="Reserved." range="31:9" property="RW"/>
				<Member name="peri_pad_sl12" description="PAD slew rate.&lt;br&gt;0: fast&lt;br&gt;1: slow" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:3" property="RW"/>
				<Member name="peri_pad_drive12" description="PAD drive capability.&lt;br&gt;001: 3 mA&lt;br&gt;010: 4 mA&lt;br&gt;110: 8 mA&lt;br&gt;111: 11 mA&lt;br&gt;Other values: reserved&lt;br&gt;Note: This field is used to control the drive capability of the PAD JTAG_TMS pin." range="2:0" property="RW"/>
				<Register offset="0x0090"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_HDMI_HOTPLUG_UP_CTRL" description="PERI_HDMI_HOTPLUG_UP_CTRL is a PAD HDMI_HOTPLUG pull-up control register." value="0x00000001" startoffset="0x0094">
				<Member name="reserved" description="Reserved." range="31:1" property="RW"/>
				<Member name="peri_hdmi_hotplug_up_ctrl" description="PAD HDMI_HOTPLUG pull-up controller.&lt;br&gt;0: no pull-up&lt;br&gt;1: pull-up" range="0" property="RW"/>
				<Register offset="0x0094"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_HDMI_CEC_UP_CTRL" description="PERI_HDMI_CEC_UP_CTRL is a PAD HDMI_CEC pull-up control register." value="0x00000001" startoffset="0x0098">
				<Member name="reserved" description="Reserved." range="31:1" property="RW"/>
				<Member name="peri_hdmi_cec_up_ctrl" description="PAD HDMI_CEC pull-up controller.&lt;br&gt;0: no pull-up&lt;br&gt;1: pull-up" range="0" property="RW"/>
				<Register offset="0x0098"/>
			</RegisterGroup>
			<RegisterGroup name="A9TOMCU_INT" description="A9TOMCU_INT is an A9-to-MCU interrupt register" value="0x00000000" startoffset="0x01B0">
				<Member name="reserved" description="Reserved. Reading this field returns 0, and writing to this field has no effect." range="31:1" property="RW"/>
				<Member name="a9tomcu_int" description="A9 interrupts the MCU by writing this register.&lt;br&gt;0: not interrupted.&lt;br&gt;1: interrupted. The MCU writes 0 to clear the interrupt after receiving an interrupt." range="0" property="RW"/>
				<Register offset="0x01B0"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_TIANLA_ADAC0" description="PERI_TIANLA_ADAC0 is audio DAC configuration register 0." value="0xC8400606" startoffset="0x01B8">
				<Member name="pd_dacl" description="Power down control for the DAC audio-left channel.&lt;br&gt;0: The digital and analog circuits work properly.&lt;br&gt;1: The digital circuit works properly, whereas the analog circuit is powered down." range="31" property="RW"/>
				<Member name="pd_dacr" description="Power down control for the DAC audio-right channel.&lt;br&gt;0: The digital and analog circuits work properly.&lt;br&gt;1: The digital circuit works properly, whereas the analog circuit is powered down." range="30" property="RW"/>
				<Member name="mute_dacl" description="Mute control for the DAC audio-left channel.&lt;br&gt;0: The digital and analog audio-left channels work properly.&lt;br&gt;1: The digital and analog audio-left channels are muted." range="29" property="RW"/>
				<Member name="mute_dacr" description="Mute control for the DAC audio-right channel.&lt;br&gt;0: The digital and analog audio-right channels work properly.&lt;br&gt;1: The digital and analog audio-right channels are muted." range="28" property="RW"/>
				<Member name="pd_vref" description="Power down control for the reference voltage.&lt;br&gt;0: power up&lt;br&gt;1: power down" range="27" property="RW"/>
				<Member name="fs" description="Reference voltage fast startup enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="26" property="RW"/>
				<Member name="popfreel" description="Pop-free control for the DAC audio-left channel.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="25" property="RW"/>
				<Member name="popfreer" description="Pop-free control for the DAC audio-right channel.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="24" property="RW"/>
				<Member name="dacl_path" description="Data source of the DAC audio-left channel.&lt;br&gt;0: RX data1 of the I2S interface (audio-left channel)&lt;br&gt;1: RX data2 of the I2S interface (audio-right channel)" range="23" property="RW"/>
				<Member name="dacr_path" description="Data source of the DAC audio-right channel.&lt;br&gt;0: RX data1 of the I2S interface (audio-left channel)&lt;br&gt;1: RX data2 of the I2S interface (audio-right channel)" range="22" property="RW"/>
				<Member name="dacl_deemph" description="De-emphasis filter enable for the DAC audio-left channel.&lt;br&gt;1: enabled&lt;br&gt;0: disabled" range="21" property="RW"/>
				<Member name="dacr_deemph" description="De-emphasis filter enable for the DAC audio-right channel.&lt;br&gt;1: enabled&lt;br&gt;0: disabled" range="20" property="RW"/>
				<Member name="deemphasis_fs" description="De-emphasis sampling rate control.&lt;br&gt;00: de-emphasis for the 48 kHz sampling rate&lt;br&gt;01: de-emphasis for the 44.1 kHz sampling rate&lt;br&gt;10: de-emphasis for the 32 kHz sampling rate&lt;br&gt;11: reserved" range="19:18" property="RW"/>
				<Member name="reserved" description="Reserved." range="17:15" property="RW"/>
				<Member name="dacl_vol" description="Output volume control for the audio-left channel.&lt;br&gt;0x00: 6 dB&lt;br&gt;0x01: 5 dB&lt;br&gt;…&lt;br&gt;0x06: 0 dB&lt;br&gt;…&lt;br&gt;0x7F: –121 dB&lt;br&gt;Note: The step is 1 dB." range="14:8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7" property="RW"/>
				<Member name="dacr_vol" description="Output volume control for the audio-right channel.&lt;br&gt;0x00: 6 dB&lt;br&gt;0x01: 5 dB&lt;br&gt;…&lt;br&gt;0x06: 0 dB&lt;br&gt;…&lt;br&gt;0x7F: –121 dB&lt;br&gt;Note: The step is 1 dB." range="6:0" property="RW"/>
				<Register offset="0x01B8"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_TIANLA_ADAC1" description="PERI_TIANLA_ADAC1 is audio DAC configuration register 1." value="0x00D04055" startoffset="0x01BC">
				<Member name="smutel" description="Soft mute control for the audio-left channel.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="31" property="RW"/>
				<Member name="smuter" description="Soft mute control for the audio-right channel.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="30" property="RW"/>
				<Member name="sunmutel" description="Soft un-mute control for the audio-left channel of the digital circuit.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="29" property="RW"/>
				<Member name="sunmuter" description="Soft un-mute control for the audio-right channel of the digital circuit.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="28" property="RW"/>
				<Member name="dacvu" description="Volume sync update of the digital audio-left and audio-right channels.&lt;br&gt;0: The gains of the audio-left and audio-right channels are retained.&lt;br&gt;1: The volumes of audio-left and audio-right channels are updated synchronously." range="27" property="RW"/>
				<Member name="mute_rate" description="Volume gain step when the audio-left and audio-right channels are soft muted or soft un-muted.&lt;br&gt;00: fs/2&lt;br&gt;01: fs/8&lt;br&gt;10: fs/32&lt;br&gt;11: fs/64" range="26:25" property="RW"/>
				<Member name="reserved" description="Reserved." range="24" property="RW"/>
				<Member name="data_bits" description="Number of data bits of the interface.&lt;br&gt;00: 16 bits&lt;br&gt;01: 18 bits&lt;br&gt;10: 20 bits&lt;br&gt;11: 24 bits" range="23:22" property="RW"/>
				<Member name="clksel" description="Sampling rate select.&lt;br&gt;000: 1/4 of the reference sampling rate&lt;br&gt;001: 1/2 of the reference sampling rate&lt;br&gt;010: reference sampling rate&lt;br&gt;011: 2 times of the reference sampling rate&lt;br&gt;100: 4 times of the reference sampling rate&lt;br&gt;Other values: reference sampling rate" range="21:19" property="RW"/>
				<Member name="reserved" description="Reserved." range="18:16" property="RW"/>
				<Member name="adj_dac" description="Bias current control for the DAC.&lt;br&gt;00: 0.6 times of the current&lt;br&gt;01: normal current (recommended)&lt;br&gt;10: 1.4 times of the current&lt;br&gt;11: 2 times of the current" range="15:14" property="RW"/>
				<Member name="adj_ctcm" description="Bias current control for the ctcm.&lt;br&gt;00: 0.6 times of the current&lt;br&gt;01: normal current (recommended)&lt;br&gt;10: 1.4 times of the current&lt;br&gt;11: 2 times of the current" range="13:12" property="RW"/>
				<Member name="adj_refbf" description="Bias current control for the reference buffer.&lt;br&gt;00: 0.6 times of the current&lt;br&gt;01: normal current (recommended)&lt;br&gt;10: 1.4 times of the current&lt;br&gt;11: 2 times of the current" range="11:10" property="RW"/>
				<Member name="clksel" description="2-divider clock select.&lt;br&gt;0: 2-divider clock&lt;br&gt;1: input clock" range="9" property="RW"/>
				<Member name="clkdgesel" description="Clock edge select.&lt;br&gt;0: The rising edge is selected as the sampling clock of the analog part.&lt;br&gt;1: The falling edge is selected as the sampling clock of the analog part." range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:0" property="RW"/>
				<Register offset="0x01BC"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CHIP_INFO0" description="PERI_CHIP_INFO0 is chip information register 0." value="0x00000000" startoffset="0x01D0">
				<Member name="peri_chip_info0" description="Reserved." range="31:0" property="RO"/>
				<Register offset="0x01D0"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CHIP_INFO1" description="PERI_CHIP_INFO1 is chip manufacture information register 1." value="0x00000000" startoffset="0x01D4">
				<Member name="peri_chip_info1" description="Chip information." range="31:0" property="RO"/>
				<Register offset="0x01D4"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CHIP_INFO2" description="PERI_CHIP_INFO2 is chip manufacture information register 2." value="0x00000000" startoffset="0x01D8">
				<Member name="peri_chip_info2" description="Chip information." range="31:0" property="RO"/>
				<Register offset="0x01D8"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CHIP_INFO3" description="PERI_CHIP_INFO3 is chip manufacture information register 3." value="0x00000000" startoffset="0x01DC">
				<Member name="peri_chip_info3" description="Chip information." range="31:0" property="RO"/>
				<Register offset="0x01DC"/>
			</RegisterGroup>
			<RegisterGroup name="PERI_CHIP_INFO4" description="PERI_CHIP_INFO4 is chip manufacture information register 4." value="0x00000000" startoffset="0x01E0">
				<Member name="reserved" description="Reserved." range="31:3" property="RO"/>
				<Member name="dts_flag" description="DTS flag.&lt;br&gt;0: without DTS &lt;br&gt;1: with DTS" range="2" property="RO"/>
				<Member name="reserved" description="Reserved." range="1" property="RO"/>
				<Member name="dolby_flag" description="Dolby support flag.&lt;br&gt;0: supported&lt;br&gt;1: not supported" range="0" property="RO"/>
				<Register offset="0x01E0"/>
			</RegisterGroup>
			<RegisterGroup name="PEIR_SW_SET" description="PEIR_SW_SET is a software flag configuration register." value="0x00000000" startoffset="0x01F0">
				<Member name="peri_sw_set" description="This register can be written only once." range="31:0" property="RW"/>
				<Register offset="0x01F0"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="SC_CTRL" i2cSupport="false">
			<Module baseAddress="0x101e0000"/>
			<RegisterGroup name="SC_CTRL" description="SC_CTRL is a system control register. It is used to specify the operations that are performedby the system." value="0x00000212" startoffset="0x000">
				<Member name="reserved" description="Reserved. Reading this field returns 0, and writing to this field has no effect." range="31:24" property="RO"/>
				<Member name="wdogenov" description="Watchdog count clock select.&lt;br&gt;0: crystal oscillator clock&lt;br&gt;1: bus clock" range="23" property="RW"/>
				<Member name="timeren3ov" description="Count clock select of timer3.&lt;br&gt;0: specified by the timeren3sel bit&lt;br&gt;1: bus clock" range="22" property="RW"/>
				<Member name="timeren3sel" description="Timer3 count clock frequency select. It must be set to 0.&lt;br&gt;0: crystal oscillator clock" range="21" property="RW"/>
				<Member name="timeren2ov" description="Count clock select of timer2.&lt;br&gt;0: specified by the timeren2sel bit&lt;br&gt;1: bus clock" range="20" property="RW"/>
				<Member name="timeren2sel" description="Timer2 count clock frequency select. It must be set to 0.&lt;br&gt;0: crystal oscillator clock" range="19" property="RW"/>
				<Member name="timeren1ov" description="Count clock select of timer1.&lt;br&gt;0: specified by the timeren1sel bit&lt;br&gt;1: bus clock" range="18" property="RW"/>
				<Member name="timeren1sel" description="Timer1 count clock frequency select. It must be set to 0.&lt;br&gt;0: crystal oscillator clock" range="17" property="RW"/>
				<Member name="timeren0ov" description="Count clock select of timer0.&lt;br&gt;0: specified by the timeren0sel bit&lt;br&gt;1: bus clock" range="16" property="RW"/>
				<Member name="timeren0sel" description="Timer0 count clock frequency select. It must be set to 0.&lt;br&gt;0: crystal oscillator clock" range="15" property="RW"/>
				<Member name="reserved" description="Reserved." range="14:10" property="RW"/>
				<Member name="remapstat" description="Status of address remap.&lt;br&gt;0: remap clear&lt;br&gt;1: remap" range="9" property="RO"/>
				<Member name="remapclear" description="Address remap clear.&lt;br&gt;0: not clear&lt;br&gt;1: clear" range="8" property="RW"/>
				<Member name="reserved" description="Reserved. Reading this field returns 0, and writing to this field has no effect." range="7" property="RW"/>
				<Member name="modestatus" description="Mode status. Reading this field returns the current operating mode of the system.&lt;br&gt;0000: reserved&lt;br&gt;0001: doze&lt;br&gt;0011: XTAL CTL&lt;br&gt;1011: SWtoXTAL&lt;br&gt;1001: SWfromXTAL&lt;br&gt;0010: slow&lt;br&gt;0110: PLL CTL&lt;br&gt;1110: SWtoPLL&lt;br&gt;1010: SWfromPLL&lt;br&gt;0100: normal&lt;br&gt;Other values: reserved" range="6:3" property="RO"/>
				<Member name="modectrl" description="Mode control. These three bits define the operating mode to which the system controller is switched.&lt;br&gt;000: reserved&lt;br&gt;001: doze&lt;br&gt;010: slow&lt;br&gt;100: normal&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x000"/>
			</RegisterGroup>
			<RegisterGroup name="SC_SYSRES" description="SC_SYSRES is a system status register. When any value is written to this register, the systemcontroller sends a system soft reset request to the reset module. Then the reset module resetsthe system." value="0x00000002" startoffset="0x0004">
				<Member name="softresreq" description="The system is reset when any value is written to this register." range="31:0" property="WO"/>
				<Register offset="0x0004"/>
			</RegisterGroup>
			<RegisterGroup name="SC_XTALCTRL" description="SC_XTALCTRL is a crystal oscillator control register. This register is used to control thestable time after the clock module is initialized, that is, the wait time spent switching themode from XTAL CTL to SWtoXTAL." value="0x00000000" startoffset="0x0010">
				<Member name="reserved" description="Reserved." range="31:19" property="RW"/>
				<Member name="xtaltime" description="Wait time spent switching the crystal oscillator clock.&lt;br&gt;The value of this field specifies the wait time when the system is switched from the XTAL CTL mode to the SWtoXTAL mode.&lt;br&gt;The wait time is calculated as follows: (65,536 – xtaltime) x T30K. T30K indicates the 30 kHz low-frequency clock cycle.&lt;br&gt;Note: To speed up the switching from the doze mode to the slow mode, set the value of xtaltime to 0xFFFF. That is, the system is stable after the crystal oscillator is powered on." range="18:3" property="RW"/>
				<Member name="reserved" description="Reserved. Reading this field returns the written value." range="2:0" property="RW"/>
				<Register offset="0x0010"/>
			</RegisterGroup>
			<RegisterGroup name="SC_APLLCTRL" description="SC_APLLCTRL is an APLL control register. It is used to set the APLL stable wait time. Theclock frequency of the APLL is controlled by the corresponding bits ofOffset Address" value="0x00000000" startoffset="0x0014">
				<Member name="reserved" description="Reserved. Reading this field returns 0, and writing to this field has no effect." range="31:28" property="RW"/>
				<Member name="plltime" description="Stable wait time of the APLL.&lt;br&gt;The wait time refers to the period during which the PLL output becomes stable after the PLL is started. In other words, the wait time is the period during which the system is switch from the PLLCTL mode to the SWtoPLL mode.&lt;br&gt;The timeout time is calculated as follows: (33,554,432 – plltime) x TXIN. TXIN indicates the clock cycle of the external crystal oscillator." range="27:3" property="RW"/>
				<Member name="reserved" description="Reserved. Reading this field returns 0, and writing to this field has no effect." range="2:0" property="RW"/>
				<Register offset="0x0014"/>
			</RegisterGroup>
			<RegisterGroup name="SC_APLLFREQCTRL0" description="SC_APLLFREQCTRL0 is APLL frequency control register 0." value="0x89000000" startoffset="0x0018">
				<Member name="apll_dsmpd" description="APLL frequency-division mode select.&lt;br&gt;0: decimal divider mode&lt;br&gt;1: integer divider mode" range="31" property="RW"/>
				<Member name="apll_bypass" description="APLL clock divider bypass control.&lt;br&gt;0: no bypass&lt;br&gt;1: bypass" range="30" property="RW"/>
				<Member name="apll_postdiv2" description="Level-2 output divider of the APLL." range="29:27" property="RW"/>
				<Member name="apll_postdiv1" description="Level-1 output divider of the APLL." range="26:24" property="RW"/>
				<Member name="apll_frac" description="Decimal divider of the APLL." range="23:0" property="RW"/>
				<Register offset="0x0018"/>
			</RegisterGroup>
			<RegisterGroup name="SC_APLLFREQCTRL1" description="SC_APLLFREQCTRL1 is APLL frequency control register 1." value="0x007C307D" startoffset="0x001C">
				<Member name="reserved" description="Reserved." range="31:30" property="RW"/>
				<Member name="apll_deskew" description="APLL mode control.&lt;br&gt;0: normal mode&lt;br&gt;1: deskew mode" range="29" property="RW"/>
				<Member name="reserved" description="Reserved." range="28:22" property="RW"/>
				<Member name="apll_pd" description="APLL power down control.&lt;br&gt;0: power down&lt;br&gt;1: normal" range="21" property="RW"/>
				<Member name="apll_foutvcopd" description="Power down control for the APLL VCO output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="20" property="RW"/>
				<Member name="apll_postdivpd" description="Power down control for the APLL POSTDIV output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="19" property="RW"/>
				<Member name="apll_fout4phasepd" description="Power down control for the APLL FOUT output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="18" property="RW"/>
				<Member name="apll_refdiv" description="Clock divider of the APLL reference clock." range="17:12" property="RW"/>
				<Member name="apll_fbdiv" description="Integral multiplier of the APLL." range="11:0" property="RW"/>
				<Register offset="0x001C"/>
			</RegisterGroup>
			<RegisterGroup name="SC_VPLL0FREQCTRL0" description="SC_VPLL0FREQCTRL0 is VPLL0 frequency control register 0." value="0x91000000" startoffset="0x0020">
				<Member name="vpll0_dsmpd" description="APLL0 frequency-division mode select.&lt;br&gt;0: decimal divider mode&lt;br&gt;1: integer divider mode" range="31" property="RW"/>
				<Member name="vpll0_bypass" description="VPLL0 clock divider bypass control.&lt;br&gt;0: no bypass&lt;br&gt;1: bypass" range="30" property="RW"/>
				<Member name="vpll0_postdiv2" description="Level-2 output divider of VPLL0." range="29:27" property="RW"/>
				<Member name="vpll0_postdiv1" description="Level-1 output divider of VPLL0." range="26:24" property="RW"/>
				<Member name="vpll0_frac" description="Decimal divider of VPLL0." range="23:0" property="RW"/>
				<Register offset="0x0020"/>
			</RegisterGroup>
			<RegisterGroup name="SC_VPLL0FREQCTRL1" description="SC_VPLL0FREQCTRL1 is VPLL0 frequency control register 1." value="0x007C40A5" startoffset="0x0024">
				<Member name="reserved" description="Reserved." range="31:30" property="RW"/>
				<Member name="vpll0_deskew" description="VPLL0 mode control.&lt;br&gt;0: normal mode&lt;br&gt;1: deskew mode" range="29" property="RW"/>
				<Member name="reserved" description="Reserved." range="28:22" property="RW"/>
				<Member name="vpll0_pd" description="VPLL0 power down control.&lt;br&gt;0: power down&lt;br&gt;1: normal" range="21" property="RW"/>
				<Member name="vpll0_foutvcopd" description="Power down control for the VPLL0 VCO output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="20" property="RW"/>
				<Member name="vpll0_postdivpd" description="Power down control for the VPLL0 POSTDIV output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="19" property="RW"/>
				<Member name="vpll0_fout4phasepd" description="Power down control for the VPLL0 FOUT output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="18" property="RW"/>
				<Member name="vpll0_refdiv" description="Clock divider of the VPLL0 reference clock." range="17:12" property="RW"/>
				<Member name="vpll0_fbdiv" description="Integral multiplier of VPLL0." range="11:0" property="RW"/>
				<Register offset="0x0024"/>
			</RegisterGroup>
			<RegisterGroup name="SC_VPLL1FREQCTRL0" description="SC_VPLL1FREQCTRL0 is VPLL1 frequency control register 0." value="0x91000000" startoffset="0x0028">
				<Member name="vpll1_dsmpd" description="APLL1 frequency-division mode select.&lt;br&gt;0: decimal divider mode&lt;br&gt;1: integer divider mode" range="31" property="RW"/>
				<Member name="vpll1_bypass" description="VPLL1 clock divider bypass control.&lt;br&gt;0: no bypass&lt;br&gt;1: bypass" range="30" property="RW"/>
				<Member name="vpll1_postdiv2" description="Level-2 output divider of VPLL1." range="29:27" property="RW"/>
				<Member name="vpll1_postdiv1" description="Level-1 output divider of VPLL1." range="26:24" property="RW"/>
				<Member name="vpll1_frac" description="Decimal divider of VPLL1." range="23:0" property="RW"/>
				<Register offset="0x0028"/>
			</RegisterGroup>
			<RegisterGroup name="SC_VPLL1FREQCTRL1" description="SC_VPLL1FREQCTRL1 is VPLL1 frequency control register 1." value="0x007C40A5" startoffset="0x002C">
				<Member name="reserved" description="Reserved." range="31:30" property="RW"/>
				<Member name="vpll1_deskew" description="VPLL1 mode control.&lt;br&gt;0: normal mode&lt;br&gt;1: deskew mode" range="29" property="RW"/>
				<Member name="reserved" description="Reserved." range="28:22" property="RW"/>
				<Member name="vpll1_pd" description="VPLL1 power down control.&lt;br&gt;0: power down&lt;br&gt;1: normal" range="21" property="RW"/>
				<Member name="vpll1_foutvcopd" description="Power down control for the VPLL1 VCO output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="20" property="RW"/>
				<Member name="vpll1_postdivpd" description="Power down control for the VPLL1 POSTDIV output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="19" property="RW"/>
				<Member name="vpll1_fout4phasepd" description="Power down control for the VPLL1 FOUT output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="18" property="RW"/>
				<Member name="vpll1_refdiv" description="Clock divider of the VPLL1 reference clock." range="17:12" property="RW"/>
				<Member name="vpll1_fbdiv" description="Integral multiplier of VPLL1." range="11:0" property="RW"/>
				<Register offset="0x002C"/>
			</RegisterGroup>
			<RegisterGroup name="SC_QPLLFREQCTRL0" description="SC_QPLLFREQCTRL0 is QPLL1 frequency control register 0." value="0xAA000000" startoffset="0x0038">
				<Member name="qpll_dsmpd" description="QPLL frequency-division mode select.&lt;br&gt;0: decimal divider mode&lt;br&gt;1: integer divider mode" range="31" property="RW"/>
				<Member name="qpll_bypass" description="QPLL clock divider bypass control.&lt;br&gt;0: no bypass&lt;br&gt;1: bypass" range="30" property="RW"/>
				<Member name="qpll_postdiv2" description="Level-2 output divider of the QPLL" range="29:27" property="RW"/>
				<Member name="qpll_postdiv1" description="Level-1 output divider of the QPLL" range="26:24" property="RW"/>
				<Member name="qpll_frac" description="Decimal divider of the QPLL." range="23:0" property="RW"/>
				<Register offset="0x0038"/>
			</RegisterGroup>
			<RegisterGroup name="SC_QPLLFREQCTRL1" description="SC_QPLLFREQCTRL1 is QPLL1 frequency control register 1." value="0x007C307D" startoffset="0x003C">
				<Member name="reserved" description="Reserved." range="31:30" property="RW"/>
				<Member name="qpll_deskew" description="QPLL mode control.&lt;br&gt;0: normal mode&lt;br&gt;1: deskew mode" range="29" property="RW"/>
				<Member name="reserved" description="Reserved." range="28:22" property="RW"/>
				<Member name="qpll_pd" description="QPLL power down control&lt;br&gt;0: power down&lt;br&gt;1: normal" range="21" property="RW"/>
				<Member name="qpll_foutvcopd" description="Power down control for the QPLL VCO output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="20" property="RW"/>
				<Member name="qpll_postdivpd" description="Power down control for the QPLL POSTDIV output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="19" property="RW"/>
				<Member name="qpll_fout4phasepd" description="Power down control for the QPLL FOUT output.&lt;br&gt;0: no output clock&lt;br&gt;1: normal output clock" range="18" property="RW"/>
				<Member name="qpll_refdiv" description="Clock divider of the QPLL reference clock." range="17:12" property="RW"/>
				<Member name="qpll_fbdiv" description="Integral multiplier of the QPLL." range="11:0" property="RW"/>
				<Register offset="0x003C"/>
			</RegisterGroup>
			<RegisterGroup name="SC_LOW_POWER_CTRL" description="SC_LOW_POWER_CTRL is a low-power control register." value="0x00000000" startoffset="0x0040">
				<Member name="reserved" description="Reserved." range="31:6" property="RW"/>
				<Member name="stb_pwroff_oen_ctrl" description="Direction of the STANDBY_PWROFF pin when this pin is controlled by the power-on area (stb_pwroff_dom_ctrl = 0).&lt;br&gt;0: input pin&lt;br&gt;1: output pin&lt;br&gt;Invalid bit when the STANDBY_PWROFF pin is controlled by the power-off area (stb_pwroff_dom_ctrl = 1)." range="5" property="RW"/>
				<Member name="stb_pwroff_dom_ctrl" description="Control area of the STANDBY_PWROFF pin.&lt;br&gt;0: power-on area&lt;br&gt;1: power-off area" range="4" property="RW"/>
				<Member name="mcu_lp_subsys_iso" description="Isolation area control.&lt;br&gt;0: disabled. That is, signals are not isolated.&lt;br&gt;1: enabled. That is, signals are isolated." range="3" property="RW"/>
				<Member name="mcu_master_mux" description="MUX select when peripherals are accessed through the master port of the MCU.&lt;br&gt;0: X2P channel, that is, power-off area channel. This channel needs to be selected to enter the normal mode.&lt;br&gt;1: H2P channel, that is, power-on channel. This channel needs to be selected to enter the low-power mode." range="2" property="RW"/>
				<Member name="stb_poweroff" description="Polarity of the STANDBY_PWROFF pin.&lt;br&gt;0: low level as output&lt;br&gt;1: high level as output" range="1" property="RW"/>
				<Member name="sys_poweroff" description="Multiplexing select of the pins in the MCU area (excluding the STAND_PWROFF pin). This bit needs to be set to 0 to enter the normal mode and set to 1 to enter the low-power mode.&lt;br&gt;0: pins in the power-off area&lt;br&gt;1: pins in the power-on area" range="0" property="RW"/>
				<Register offset="0x0040"/>
			</RegisterGroup>
			<RegisterGroup name="SC_IO_REUSE_SEL" description="SC_IO_REUSE_SEL is a pin multiplexing control register of the MCU subsystem." value="0x00000000" startoffset="0x0044">
				<Member name="reserved" description="Reserved." range="31:15" property="RW"/>
				<Member name="ir_gpio_sel" description="Multiplexing control for the IR and GPIO5[4] pins.&lt;br&gt;0: IR&lt;br&gt;1: GPIO5[4]" range="14" property="RW"/>
				<Member name="data_gpio_sel" description="Multiplexing control for the LED_DATA and GPIO5[0] pins.&lt;br&gt;0: GPIO5[0]&lt;br&gt;1: LED_DATA" range="13" property="RW"/>
				<Member name="clk_gpio_sel" description="Multiplexing control for the LED_CLK and GPIO5[1] pins.&lt;br&gt;0: GPIO5[1]&lt;br&gt;1: LED_CLK" range="12" property="RW"/>
				<Member name="csn3_gpio_sel" description="Multiplexing control for the LED_CS3N, IR_IN, and GPIO5[4] pins.&lt;br&gt;00: GPIO5[4]&lt;br&gt;01: LED_CS3N&lt;br&gt;10: IR_IN&lt;br&gt;11: GPIO5[4]" range="11:10" property="RW"/>
				<Member name="csn2_gpio_sel" description="Multiplexing control for the LED_CS2N, HCKEN_ERROR, and GPIO5[2] pins.&lt;br&gt;00: GPIO5[2]&lt;br&gt;01: LED_CS2N&lt;br&gt;10: HCKEN_ERROR&lt;br&gt;11: GPIO5[2]" range="9:8" property="RW"/>
				<Member name="csn1_gpio_sel" description="Multiplexing control for the LED_CS1N, PCKEN_ERROR, and GPIO5[3] pins.&lt;br&gt;00: GPIO5[3]&lt;br&gt;01: LED_CS1N&lt;br&gt;10: PCKEN_ERROR&lt;br&gt;11: GPIO5[3]" range="7:6" property="RW"/>
				<Member name="csn0_gpio_sel" description="Multiplexing control for the LED_CS0N, ARMEN_ERROR, and GPIO5[5] pins.&lt;br&gt;00: GPIO5[5]&lt;br&gt;01: LED_CS0N&lt;br&gt;10: ARMEN_ERROR&lt;br&gt;11: GPIO5[5]" range="5:4" property="RW"/>
				<Member name="key1_gpio_sel" description="Multiplexing control for the LED_KEY1 and GPIO pins.&lt;br&gt;00: GPIO5[6]&lt;br&gt;01: LED_KEY1&lt;br&gt;10: LED_CS4N&lt;br&gt;11: GPIO5[6]" range="3:2" property="RW"/>
				<Member name="key0_gpio_sel" description="Multiplexing control for the LED_KEY0 and GPIO pins.&lt;br&gt;00: GPIO5[7]&lt;br&gt;01: LED_KEY0&lt;br&gt;10: LED_CS4N&lt;br&gt;11: GPIO5[7]" range="1:0" property="RW"/>
				<Register offset="0x0044"/>
			</RegisterGroup>
			<RegisterGroup name="SC_SRST_REQ_CTRL" description="SC_SRST_REQ_CTRL is a soft reset request control register of the MCU subsystem." value="0x00000000" startoffset="0x0048">
				<Member name="reserved" description="Reserved." range="31:4" property="RW"/>
				<Member name="so_rst_req" description="Soft reset request (excluding the MCU subsystem).&lt;br&gt;0: normal mode&lt;br&gt;1: soft reset. When the bit is set to 1, all the circuits excluding the circuit of the MCU subsystem are reset." range="3" property="RW"/>
				<Member name="ir_srst_req" description="Soft reset request of the IR module.&lt;br&gt;0: normal mode&lt;br&gt;1: soft reset" range="2" property="RW"/>
				<Member name="led_srst_req" description="Soft reset request of the LEDCTRL module.&lt;br&gt;0: normal mode&lt;br&gt;1: soft reset" range="1" property="RW"/>
				<Member name="reservedmcu_srst_req" description="Reserved.MCU soft reset request.&lt;br&gt;0: normal mode&lt;br&gt;1: soft reset" range="0" property="RW"/>
				<Register offset="0x0048"/>
			</RegisterGroup>
			<RegisterGroup name="SC_WDG_RST_CTRL" description="SC_WDG_RST_CTRL is a software control WDG reset register." value="0x00000000" startoffset="0x0050">
				<Member name="reserved" description="Reserved." range="31:1" property="RW"/>
				<Member name="wdg_rst_ctrl" description="WDG_RST reset signal controlled by the software.&lt;br&gt;0: not reset&lt;br&gt;1: enable WDG_RST software control function. When TIMER01 generates an interrupt, a reset signal is sent through the WDG_RST pin." range="0" property="RW"/>
				<Register offset="0x0050"/>
			</RegisterGroup>
			<RegisterGroup name="SC_DDRC_DFI_RST_CTRL" description="SC_DDRC_DFI_RST_CTRL is a DDR3 SDRAM reset control register." value="0x00000000" startoffset="0x0054">
				<Member name="reserved" description="Reserved." range="31:1" property="RW"/>
				<Member name="ddr_dfi_rst_n" description="Reset control for the DDR3 SDRAM.&lt;br&gt;0: reset&lt;br&gt;1: clear reset" range="0" property="RW"/>
				<Register offset="0x0054"/>
			</RegisterGroup>
			<RegisterGroup name="SC_APLLSSMOD_CTRL" description="SC_APLLSSMOD_CTRL is an APLL spread spectrum module control register." value="0x01000001" startoffset="0x0060">
				<Member name="reserved" description="Reserved." range="31:25" property="RW"/>
				<Member name="apll_ssmod_disable_sscg" description="SSMOD bypass enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="24" property="RW"/>
				<Member name="apll_ssmod_downspread" description="Spread spectrum mode select.&lt;br&gt;0: central spread spectrum&lt;br&gt;1: downwards spread spectrum" range="23" property="RW"/>
				<Member name="apll_ssmod_spread" description="Spread spectrum depth." range="22:20" property="RW"/>
				<Member name="apll_ssmod_divval" description="SSMOD clock divider." range="19:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="RW"/>
				<Member name="apll_ssmod_cken" description="SSMOD clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="apll_ssmod_rst_req" description="SSMOD soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0060"/>
			</RegisterGroup>
			<RegisterGroup name="SC_VPLL0SSMOD_CTRL" description="SC_VPLL0SSMOD_CTRL is a VPLL0 spread spectrum module control register." value="0x01000001" startoffset="0x0064">
				<Member name="reserved" description="Reserved." range="31:25" property="RW"/>
				<Member name="vpll0_ssmod_disable_sscg" description="SSMOD bypass enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="24" property="RW"/>
				<Member name="vpll0_ssmod_downspread" description="Spread spectrum mode select.&lt;br&gt;0: central spread spectrum&lt;br&gt;1: downwards spread spectrum" range="23" property="RW"/>
				<Member name="vpll0_ssmod_spread" description="Spread spectrum depth." range="22:20" property="RW"/>
				<Member name="vpll0_ssmod_divval" description="SSMOD clock divider." range="19:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="RW"/>
				<Member name="vpll0_ssmod_cken" description="SSMOD clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="vpll0_ssmod_rst_req" description="SSMOD soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0064"/>
			</RegisterGroup>
			<RegisterGroup name="SC_VPLL1SSMOD_CTRL" description="SC_VPLL1SSMOD_CTRL is a VPLL1 spread spectrum module control register." value="0x01000001" startoffset="0x0068">
				<Member name="reserved" description="Reserved." range="31:25" property="RW"/>
				<Member name="vpll1_ssmod_disable_sscg" description="SSMOD bypass enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="24" property="RW"/>
				<Member name="vpll1_ssmod_downspread" description="Spread spectrum mode select.&lt;br&gt;0: central spread spectrum&lt;br&gt;1: downwards spread spectrum" range="23" property="RW"/>
				<Member name="vpll1_ssmod_spread" description="Spread spectrum depth." range="22:20" property="RW"/>
				<Member name="vpll1_ssmod_divval" description="SSMOD clock divider." range="19:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="RW"/>
				<Member name="vpll1_ssmod_cken" description="SSMOD clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="vpll1_ssmod_rst_req" description="SSMOD soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x0068"/>
			</RegisterGroup>
			<RegisterGroup name="SC_QPLLSSMOD_CTRL" description="SC_QPLLSSMOD_CTRL is a QPLL spread spectrum module control register." value="0x01000001" startoffset="0x006C">
				<Member name="reserved" description="Reserved." range="31:25" property="RW"/>
				<Member name="qpll_ssmod_disable_sscg" description="SSMOD bypass enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="24" property="RW"/>
				<Member name="qpll_ssmod_downspread" description="Spread spectrum mode select.&lt;br&gt;0: central spread spectrum&lt;br&gt;1: downwards spread spectrum" range="23" property="RW"/>
				<Member name="qpll_ssmod_spread" description="Spread spectrum depth." range="22:20" property="RW"/>
				<Member name="qpll_ssmod_divval" description="SSMOD clock divider." range="19:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:9" property="RW"/>
				<Member name="qpll_ssmod_cken" description="SSMOD clock status.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:1" property="RW"/>
				<Member name="qpll_ssmod_rst_req" description="SSMOD soft reset request.&lt;br&gt;0: deassert reset&lt;br&gt;1: reset" range="0" property="RW"/>
				<Register offset="0x006C"/>
			</RegisterGroup>
			<RegisterGroup name="SC_PLLLOCK_STAT" description="SC_PLLLOCK_STAT is a PLL lock status indicator register." value="0x00000000" startoffset="0x0070">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="sw_disable" description="Internal observation signal of the CRG." range="7:6" property="RW"/>
				<Member name="reserved" description="Reserved." range="5" property="RO"/>
				<Member name="qpll_lock" description="QPLL lock status indicator.&lt;br&gt;0: unlocked&lt;br&gt;1: locked" range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="RO"/>
				<Member name="vpll1_lock" description="VPLL1 lock status indicator.&lt;br&gt;0: unlocked&lt;br&gt;1: locked" range="2" property="RW"/>
				<Member name="vpll0_lock" description="VPLL0 lock status indicator.&lt;br&gt;0: unlocked&lt;br&gt;1: locked" range="1" property="RW"/>
				<Member name="apll_lock" description="APLL lock status indicator.&lt;br&gt;0: unlocked&lt;br&gt;1: locked" range="0" property="RW"/>
				<Register offset="0x0070"/>
			</RegisterGroup>
			<RegisterGroup name="SC_DDRPHY_LP_EN" description="SC_DDRPHY_LP_EN is a low-power mode control register for DDR passive standby." value="0x00000000" startoffset="0x0074">
				<Member name="reserved" description="Reserved." range="31:1" property="RW"/>
				<Member name="ddrphy_lp_en" description="Indication signal before the DDR PHY is powered on or off.&lt;br&gt;0: power-off indication. This bit must be set to 0 before power-off.&lt;br&gt;1: power-on indication. This bit must be set to 1 before power-on." range="0" property="RW"/>
				<Register offset="0x0074"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN0" description="SC_GEN0 is system general-purpose register 0." value="0x00000000" startoffset="0x0080">
				<Member name="sc_gen0" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x0080"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN1" description="SC_GEN1 is system general-purpose register 1." value="0x00000000" startoffset="0x0084">
				<Member name="sc_gen1" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x0084"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN2" description="SC_GEN2 is system general-purpose register 2." value="0x00000000" startoffset="0x0088">
				<Member name="sc_gen2" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x0088"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN3" description="SC_GEN3 is system general-purpose register 3." value="0x00000000" startoffset="0x008C">
				<Member name="sc_gen3" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x008C"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN4" description="SC_GEN4 is system general-purpose register 4." value="0x00000000" startoffset="0x0090">
				<Member name="sc_gen4" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x0090"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN5" description="SC_GEN5 is system general-purpose register 5." value="0x00000000" startoffset="0x0094">
				<Member name="sc_gen5" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x0094"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN6" description="SC_GEN6 is system general-purpose register 6." value="0x00000000" startoffset="0x0098">
				<Member name="sc_gen6" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x0098"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN7" description="SC_GEN7 is system general-purpose register 7." value="0x00000000" startoffset="0x009C">
				<Member name="sc_gen7" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x009C"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN8" description="SC_GEN8 is system general-purpose register 8." value="0x00000000" startoffset="0x00A0">
				<Member name="sc_gen8" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00A0"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN9" description="SC_GEN9 is system general-purpose register 9." value="0x00000000" startoffset="0x00A4">
				<Member name="sc_gen9" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00A4"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN10" description="SC_GEN10 is system general-purpose register 10." value="0x00000000" startoffset="0x00A8">
				<Member name="sc_gen10" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00A8"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN11" description="SC_GEN11 is system general-purpose register 11." value="0x00000000" startoffset="0x00AC">
				<Member name="sc_gen11" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00AC"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN12" description="SC_GEN12 is system general-purpose register 12." value="0x00000000" startoffset="0x00B0">
				<Member name="sc_gen12" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00B0"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN13" description="SC_GEN13 is system general-purpose register 13." value="0x00000000" startoffset="0x00B4">
				<Member name="sc_gen13" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00B4"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN14" description="SC_GEN14 is system general-purpose register 14." value="0x00000000" startoffset="0x00B8">
				<Member name="sc_gen14" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00B8"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN15" description="SC_GEN15 is system general-purpose register 15." value="0x00000000" startoffset="0x00BC">
				<Member name="sc_gen15" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00BC"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN16" description="SC_GEN16 is system general-purpose register 16." value="0x00000000" startoffset="0x00C0">
				<Member name="sc_gen16" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00C0"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN17" description="SC_GEN17 is system general-purpose register 17." value="0x00000000" startoffset="0x00C4">
				<Member name="sc_gen17" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00C4"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN18" description="SC_GEN18 is system general-purpose register 18." value="0x00000000" startoffset="0x00C8">
				<Member name="sc_gen18" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00C8"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN19" description="SC_GEN19 is system general-purpose register 19." value="0x00000000" startoffset="0x00CC">
				<Member name="sc_gen19" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00CC"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN20" description="SC_GEN20 is system general-purpose register 20." value="0x00000000" startoffset="0x00D0">
				<Member name="sc_gen20" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00D0"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN21" description="SC_GEN21 is system general-purpose register 21." value="0x00000000" startoffset="0x00D4">
				<Member name="sc_gen21" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00D4"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN22" description="SC_GEN22 is system general-purpose register 22." value="0x00000000" startoffset="0x00D8">
				<Member name="sc_gen22" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00D8"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN23" description="SC_GEN23 is system general-purpose register 23." value="0x00000000" startoffset="0x00DC">
				<Member name="sc_gen23" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00DC"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN24" description="SC_GEN24 is system general-purpose register 24." value="0x00000000" startoffset="0x00E0">
				<Member name="sc_gen24" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00E0"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN25" description="SC_GEN25 is system general-purpose register 25." value="0x00000000" startoffset="0x00E4">
				<Member name="sc_gen25" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00E4"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN26" description="SC_GEN26 is system general-purpose register 26." value="0x00000000" startoffset="0x00E8">
				<Member name="sc_gen26" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00E8"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN27" description="SC_GEN27 is system general-purpose register 27." value="0x00000000" startoffset="0x00EC">
				<Member name="sc_gen27" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00EC"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN28" description="SC_GEN28 is system general-purpose register 28." value="0x00000000" startoffset="0x00F0">
				<Member name="sc_gen28" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00F0"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN29" description="SC_GEN29 is system general-purpose register 29." value="0x00000000" startoffset="0x00F4">
				<Member name="sc_gen29" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00F4"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN30" description="SC_GEN30 is system general-purpose register 30." value="0x00000000" startoffset="0x00F8">
				<Member name="sc_gen30" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00F8"/>
			</RegisterGroup>
			<RegisterGroup name="SC_GEN31" description="SC_GEN31 is system general-purpose register 31." value="0x00000000" startoffset="0x00FC">
				<Member name="sc_gen31" description="System general-purpose register. In each solution, the register is used to save the system status based on actual conditions." range="31:0" property="RW"/>
				<Register offset="0x00FC"/>
			</RegisterGroup>
			<RegisterGroup name="SC_LOCKEN" description="SC_LOCKEN is a write protection control register. This register provides the write protectionmechanism for the following key registers of the system controller:&lt;br&gt;&lt;ul&gt;&lt;li&gt;SC_CTRL&lt;br&gt;&lt;/li&gt;&lt;li&gt;SC_SYSRES&lt;br&gt;&lt;/li&gt;&lt;li&gt;SC_APLLCTRLSC_APLLFREQCTRL1 and SC_APLLFREQCTRL0&lt;/li&gt;&lt;li&gt;SC_VPLL0FREQCTRL1 and SC_VPLL0FREQCTRL0&lt;br&gt;&lt;/li&gt;&lt;li&gt;SC_VPLL1FREQCTRL1 and SC_VPLL1FREQCTRL0&lt;br&gt;&lt;/li&gt;&lt;li&gt;SC_QPLLFREQCTRL1 and SC_QPLLFREQCTRL0When the value 0x4F50_454E is written to SC_LOCKEN, the write protection function of thepreceding key registers is disabled. In this case, the attributes of the key registers are changedto writable, that is, these registers can be written. When any value instead of 0x4F50_454E iswritten to SC_LOCKEN, the attributes of the key register are changed to read-only. In thiscase, writing these registers has no effect.&lt;br&gt;You can check whether the key registers are write-protected by reading SC_LOCKEN. Forexample:&lt;br&gt;&lt;/li&gt;&lt;li&gt;If the value 0x756E_4C4F is returned after SC_LOCKEN is read, it indicates that thekey registers are not write-protected and write operations are supported.&lt;br&gt;&lt;/li&gt;&lt;li&gt;If the value 0x4C4F_434B is returned after SC_LOCKEN is read, it indicates that thekey registers are write-protected and write operations are not supported.&lt;br&gt;The reset value of SC_LOCKEN is 0x756E_4C4F. It indicates that the key registers are notwrite-protected.&lt;/li&gt;&lt;/ul&gt;" value="0x756E4C4F" startoffset="0x020C">
				<Member name="sc_locken" description="Write protection indicator of key system registers. For details, see the function description of SC_LOCKEN." range="31:0" property="RW"/>
				<Register offset="0x020C"/>
			</RegisterGroup>
			<RegisterGroup name="SC_SYSID0" description="SC_SYSID0 is chip ID register 0." value="0x00000000" startoffset="0x0EE0">
				<Member name="reserved" description="Reserved" range="31:8" property="RW"/>
				<Member name="sysid0" description="Reading this register returns 0x00." range="7:0" property="RW"/>
				<Register offset="0x0EE0"/>
			</RegisterGroup>
			<RegisterGroup name="SC_SYSID1" description="SC_SYSID1 is chip ID register 1." value="0x00000003" startoffset="0x0EE4">
				<Member name="reserved" description="Reserved." range="31:8" property="RW"/>
				<Member name="sysid1" description="Reading this register returns 0x03." range="7:0" property="RW"/>
				<Register offset="0x0EE4"/>
			</RegisterGroup>
			<RegisterGroup name="SC_SYSID2" description="SC_SYSID2 is chip ID register 2." value="0x00000016" startoffset="0x0EE8">
				<Member name="reserved" description="Reserved." range="31:8" property="RW"/>
				<Member name="ysid2" description="Reading this register returns 0x16." range="7:0" property="RW"/>
				<Register offset="0x0EE8"/>
			</RegisterGroup>
			<RegisterGroup name="SC_SYSID3" description="SC_SYSID3 is chip ID register 3." value="0x00000037" startoffset="0x0EEC">
				<Member name="reserved" description="Reserved." range="31:8" property="RW"/>
				<Member name="sysid3" description="Reading this register returns 0x37." range="7:0" property="RW"/>
				<Register offset="0x0EEC"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="timer" i2cSupport="false">
			<Module baseAddress="0x101E2000"/>
			<Module baseAddress="0x10202000"/>
			<Module baseAddress="0x101EB000"/>
			<Module baseAddress="0x10206000"/>
			<RegisterGroup name="TIMER0_LOAD" description="TIMERx_LOAD is an initial count value register. It is used to set the initial count value ofeach timer. Each timer (timer0–timer7) has one such register.&lt;br&gt;When a timer is in periodic mode and the count value reaches 0, the value of TIMERx_LOADis reloaded to the counter. When a value is written to TIMERx_LOAD, the value of thecurrent counter is changed to the input value on the next rising edge of the TIMCLK enabledby TIMCLKENx.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;&lt;br&gt;The minimum valid value written to TIMERx_LOAD is 1.&lt;br&gt;When 0 is written to TIMERx_LOAD, the dual-timer module generates an interrupt immediately.&lt;br&gt;When a value is written to TIMERx_BGLOAD, the value of TIMERx_LOAD is overwritten,but the current value of the timer remains.&lt;br&gt;If values are written to TIMERx_BGLOAD and TIMERx_LOAD before the rising edge ofTIMCLK enabled by TIMCLKENx is reached, the value of the counter on the next risingedge is changed to the written value of TIMERx_LOAD. From then on, when the counterreaches 0, the last value written to TIMERx_BGLOAD or TIMERx_LOAD is reloaded.&lt;br&gt;After TIMERx_BGLOAD and TIMERx_LOAD are written twice respectively, the writtenvalue of TIMERx_BGLOAD is returned when TIMERx_LOAD is read." value="0x00000000" startoffset="0x000">
				<Member name="timer0_load" description="Initial count value of timer0." range="31:0" property="RW"/>
				<Register offset="0x000"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER1_LOAD" description="TIMERx_LOAD is an initial count value register. It is used to set the initial count value ofeach timer. Each timer (timer0–timer7) has one such register.&lt;br&gt;When a timer is in periodic mode and the count value reaches 0, the value of TIMERx_LOADis reloaded to the counter. When a value is written to TIMERx_LOAD, the value of thecurrent counter is changed to the input value on the next rising edge of the TIMCLK enabledby TIMCLKENx.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;&lt;br&gt;The minimum valid value written to TIMERx_LOAD is 1.&lt;br&gt;When 0 is written to TIMERx_LOAD, the dual-timer module generates an interrupt immediately.&lt;br&gt;When a value is written to TIMERx_BGLOAD, the value of TIMERx_LOAD is overwritten,but the current value of the timer remains.&lt;br&gt;If values are written to TIMERx_BGLOAD and TIMERx_LOAD before the rising edge ofTIMCLK enabled by TIMCLKENx is reached, the value of the counter on the next risingedge is changed to the written value of TIMERx_LOAD. From then on, when the counterreaches 0, the last value written to TIMERx_BGLOAD or TIMERx_LOAD is reloaded.&lt;br&gt;After TIMERx_BGLOAD and TIMERx_LOAD are written twice respectively, the writtenvalue of TIMERx_BGLOAD is returned when TIMERx_LOAD is read." value="0x00000000" startoffset="0x020">
				<Member name="timer1_load" description="Initial count value of timer1." range="31:0" property="RW"/>
				<Register offset="0x020"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER0_VALUE" description="TIMERx_VALUE is a current count value register. It shows the current value of the counterthat is being decremented. Each timer (timer0–timer7) has one such register.&lt;br&gt;After a value is written to TIMERx_LOAD, TIMERx_VALUE immediately shows the newlyloaded value of the counter in the PCLK domain without waiting for the next TIMCLK clockedge enabled by TIMCLKENx.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;When a timer is in 16-bit mode, the upper 16 bits of the 32-bit TIMERx_VALUE are not set to 0automatically. If the timer is switched from 32-bit mode to 16-bit mode and no data is written toTIMERx_LOAD in 16-bit mode, the upper 16 bits of TIMERx_VALUE may not be 0.&lt;br&gt;TIMER0_VALUE" value="0xFFFFFFFF" startoffset="0x004">
				<Member name="timer0_value" description="Current count value of timer0 that is being decremented." range="31:0" property="RO"/>
				<Register offset="0x004"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER1_VALUE" description="timer0_value1DescriptionCurrent count value of timer0 that is being decremented.&lt;br&gt;TIMER1_VALUERegister NameTIMER1_VALUE13timer0_value1DescriptionCurrent count value of timer1 that is being decrementedTIMERx_CONTROLTIMERx_CONTROL is a timer control register. Each timer (timer0–timer7) has one suchregister.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;When the periodic mode is selected, TIMERx_CONTROL[timermode] must be set to 1 andTIMERx_CONTROL[oneshot] must be set to 0.&lt;br&gt;TIMER0_CONTROLTIMER0_CONTROLRegister NameTIMER0_CONTROL13reserved0DescriptionReserved.&lt;br&gt;Timer enable.&lt;br&gt;0: disabled1: enabledTimer count mode.&lt;br&gt;0: free-running mode1: periodic modeTIMERx_RIS interrupt mask.&lt;br&gt;0: masked1: not maskedReserved.&lt;br&gt;Timer prescaling divider set bit.&lt;br&gt;00: no prescaling. That is, the clock frequency of the timer isdivided by 1.&lt;br&gt;01: 4-level prescaling. That is, the clock frequency of the timer isdivided by 16.&lt;br&gt;10: 8-level prescaling, namely, dividing the clock frequency of thetimer by 256.&lt;br&gt;11: undefined. If the bits are set to 11, 8-level prescaling isconsidered. That is, the clock frequency of the timer is divided by256.&lt;br&gt;16-bit or 32-bit counter select." value="0xFFFFFFFF" startoffset="0x024">
				<Member name="timer0_value" description="Current count value of timer1 that is being decremented" range="31:0" property="RO"/>
				<Register offset="0x024"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER0_CONTROL" description="TIMERx_CONTROL is a timer control register. Each timer (timer0–timer7) has one suchregister.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;When the periodic mode is selected, TIMERx_CONTROL[timermode] must be set to 1 andTIMERx_CONTROL[oneshot] must be set to 0." value="0x00000020" startoffset="0x008">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="timeren" description="Timer enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="7" property="RW"/>
				<Member name="timermode" description="Timer count mode.&lt;br&gt;0: free-running mode&lt;br&gt;1: periodic mode" range="6" property="RW"/>
				<Member name="intenable" description="TIMERx_RIS interrupt mask.&lt;br&gt;0: masked&lt;br&gt;1: not masked" range="5" property="RW"/>
				<Member name="reserved" description="Reserved." range="4" property="-"/>
				<Member name="timerpre" description="Timer prescaling divider set bit.&lt;br&gt;00: no prescaling. That is, the clock frequency of the timer is divided by 1.&lt;br&gt;01: 4-level prescaling. That is, the clock frequency of the timer is divided by 16.&lt;br&gt;10: 8-level prescaling, namely, dividing the clock frequency of the timer by 256.&lt;br&gt;11: undefined. If the bits are set to 11, 8-level prescaling is considered. That is, the clock frequency of the timer is divided by 256." range="3:2" property="RW"/>
				<Member name="timersize" description="16-bit or 32-bit counter select.&lt;br&gt;0: 16-bit counter&lt;br&gt;1: 32-bit counter" range="1" property="RW"/>
				<Member name="oneshot" description="Count mode select.&lt;br&gt;0: periodic mode or free-running mode&lt;br&gt;1: one-shot mode" range="0" property="RW"/>
				<Register offset="0x008"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER1_CONTROL" description="TIMERx_CONTROL is a timer control register. Each timer (timer0–timer7) has one suchregister.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;B&gt;NOTE&lt;/B&gt;&lt;br&gt;When the periodic mode is selected, TIMERx_CONTROL[timermode] must be set to 1 andTIMERx_CONTROL[oneshot] must be set to 0." value="0x00000020" startoffset="0x028">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="timeren" description="Timer enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="7" property="RW"/>
				<Member name="timermode" description="Timer count mode.&lt;br&gt;0: free-running mode&lt;br&gt;1: periodic mode" range="6" property="RW"/>
				<Member name="intenable" description="TIMERx_RIS interrupt mask.&lt;br&gt;0: masked&lt;br&gt;1: not masked" range="5" property="RW"/>
				<Member name="reserved" description="Reserved." range="4" property="-"/>
				<Member name="timerpre" description="Timer prescaling divider set bit.&lt;br&gt;00: no prescaling. That is, the clock frequency of the timer is divided by 1.&lt;br&gt;01: 4-level prescaling. That is, the clock frequency of the timer is divided by 16.&lt;br&gt;10: 8-level prescaling, namely, dividing the clock frequency of the timer by 256.&lt;br&gt;11: undefined. If the bits are set to 11, 8-level prescaling is considered." range="3:2" property="RW"/>
				<Member name="timersize" description="16-bit or 32-bit counter select.&lt;br&gt;0: 16-bit counter&lt;br&gt;1: 32-bit counter" range="1" property="RW"/>
				<Member name="oneshot" description="Count mode select.&lt;br&gt;0: periodic mode&lt;br&gt;1: one-shot mode" range="0" property="RW"/>
				<Register offset="0x028"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER0_INTCLR" description="TIMERx_INTCLR is an interrupt clear register. The interrupt status of the correspondingcounter is cleared after a value is written to this register. Each timer (timer0–timer7) has onesuch register.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;This register is write-only. When any value is written to this register, the timer interrupts arecleared. In addition, no written value is recorded in this register and no default reset value isdefined.&lt;/li&gt;&lt;/ul&gt;" value="-" startoffset="0x00C">
				<Member name="timer0_intclr" description="Writing this register clears the output interrupts of timer0." range="31:0" property="WO"/>
				<Register offset="0x00C"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER1_INTCLR" description="TIMERx_INTCLR is an interrupt clear register. The interrupt status of the correspondingcounter is cleared after a value is written to this register. Each timer (timer0–timer7) has onesuch register.&lt;br&gt;&lt;B&gt;CAUTION&lt;/B&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;This register is write-only. When any value is written to this register, the timer interrupts arecleared. In addition, no written value is recorded in this register and no default reset value isdefined.&lt;/li&gt;&lt;/ul&gt;" value="-" startoffset="0x02C">
				<Member name="timer1_intclr" description="Writing this register clears the output interrupts of timer1." range="31:0" property="WO"/>
				<Register offset="0x02C"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER0_RIS" description="TIMERx_RIS is a raw interrupt status register. Each timer (timer0–timer7) has one suchregister." value="0x00000000" startoffset="0x010">
				<Member name="reserved" description="Reserved. Writing this field has no effect and reading this field returns 0." range="31:1" property="-"/>
				<Member name="timer0ris" description="Raw interrupt status of timer0.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="0" property="RO"/>
				<Register offset="0x010"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER1_RIS" description="TIMERx_RIS is a raw interrupt status register. Each timer (timer0–timer7) has one suchregister." value="0x00000000" startoffset="0x030">
				<Member name="reserved" description="Reserved. Writing this field has no effect and reading this field returns 0." range="31:1" property="-"/>
				<Member name="timer1ris" description="Raw interrupt status of timer1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="0" property="RO"/>
				<Register offset="0x030"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER0_MIS" description="TIMERx_MIS is a masked interrupt register. Each timer (timer0–timer7) has one such register." value="0x00000000" startoffset="0x014">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="timer0mis" description="Masked interrupt status of timer0.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid." range="0" property="RO"/>
				<Register offset="0x014"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER1_MIS" description="TIMERx_MIS is a masked interrupt register. Each timer (timer0–timer7) has one such register." value="0x00000000" startoffset="0x034">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="timer1mis" description="Masked interrupt status of timer1.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid." range="0" property="RO"/>
				<Register offset="0x034"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER0_BGLOAD" description="TIMERx_BGLOAD is an initial count value register in periodic mode. Each timer (timer0–timer7) has one such register.&lt;br&gt;This register contains the initial count value of the timer. In periodic mode, this register isused to reload an initial count value when the count value of the timer reaches 0.&lt;br&gt;The register also provides another method of accessing TIMERx_LOAD. After a value iswritten to TIMERx_BGLOAD, the timer, however, does not count starting from the new inputvalue immediately." value="0x00000000" startoffset="0x018">
				<Member name="timer0bgload" description="Initial count value of timer0.&lt;br&gt;Note: This register differs from TIMERX_LOAD. For details, see the description of TIMERx_LOAD." range="31:0" property="RW"/>
				<Register offset="0x018"/>
			</RegisterGroup>
			<RegisterGroup name="TIMER1_BGLOAD" description="TIMERx_BGLOAD is an initial count value register in periodic mode. Each timer (timer0–timer7) has one such register.&lt;br&gt;This register contains the initial count value of the timer. In periodic mode, this register isused to reload an initial count value when the count value of the timer reaches 0.&lt;br&gt;The register also provides another method of accessing TIMERx_LOAD. After a value iswritten to TIMERx_BGLOAD, the timer, however, does not count starting from the new inputvalue immediately." value="0x00000000" startoffset="0x038">
				<Member name="timer1bgload" description="Initial count value of timer1.&lt;br&gt;Note: This register differs from TIMERX_LOAD. For details, see the description of TIMERX_LOAD." range="31:0" property="RW"/>
				<Register offset="0x038"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="WDG" i2cSupport="false">
			<Module baseAddress="0x10201000"/>
			<RegisterGroup name="WDG_LOAD" description="WDG_LOAD is an initial count value register. It is used to configure the initial count value ofthe internal counter of the watchdog." value="0xFFFFFFFF" startoffset="0x0000">
				<Member name="wdg_load" description="Initial count value of the watchdog counter." range="31:0" property="RW"/>
				<Register offset="0x0000"/>
			</RegisterGroup>
			<RegisterGroup name="WDG_VALUE" description="WDG_VALUE is a current count value register It is used to read the current count value ofthe internal counter of the watchdog." value="0xFFFFFFFF" startoffset="0x0004">
				<Member name="wdogvalue" description="Current count value of the watchdog counter." range="31:0" property="RO"/>
				<Register offset="0x0004"/>
			</RegisterGroup>
			<RegisterGroup name="WDG_CONTROL" description="WDG_CONTROL is a control register. It is used to enable or disable the watchdog andcontrol the interrupt and reset functions of the watchdog." value="0x00000000" startoffset="0x0008">
				<Member name="reserved" description="Reserved." range="31:2" property="-"/>
				<Member name="resen" description="Output enable of the watchdog reset signal.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="1" property="RW"/>
				<Member name="inten" description="Output enable of the watchdog interrupt signal.&lt;br&gt;0: The counter stops counting, the current count value keeps unchanged, and the watchdog is disabled.&lt;br&gt;1: The counter, interrupt and watchdog are enabled." range="0" property="RW"/>
				<Register offset="0x0008"/>
			</RegisterGroup>
			<RegisterGroup name="WDG_INTCLR" description="WDG_INTCLR is an interrupt clear register. It is used to clear watchdog interrupts so thewatchdog can reload an initial value for counting. This register is write-only. When any valueis written to this register, the watchdog interrupts are cleared. No written value is recorded inthis register and no default reset value is defined." value="-" startoffset="0x000C">
				<Member name="wdg_intclr" description="Writing any value to this register clears the watchdog interrupts and enables the watchdog to reload an initial count value from WDG_LOAD to restart counting." range="31:0" property="WO"/>
				<Register offset="0x000C"/>
			</RegisterGroup>
			<RegisterGroup name="WDG_RIS" description="WDG_RIS is a raw interrupt status register. It shows the raw interrupt status of the watchdog." value="0x00000000" startoffset="0x0010">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="wdogris" description="Status of the raw interrupts of the watchdog. When the count value reaches 0, this bit is set to 1.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="0" property="RO"/>
				<Register offset="0x0010"/>
			</RegisterGroup>
			<RegisterGroup name="WDG_MIS" description="WDG_MIS is a masked interrupt status register. It shows the masked interrupt status of thewatchdog." value="0x00000000" startoffset="0x0014">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="wdogmis" description="Status of the masked interrupts of the watchdog.&lt;br&gt;0: No interrupt is generated or an interrupt is masked.&lt;br&gt;1: An interrupt is generated." range="0" property="RO"/>
				<Register offset="0x0014"/>
			</RegisterGroup>
			<RegisterGroup name="WDG_LOCK" description="WDG_LOCK is a lock register. It is used to control the write and read permissions to thewatchdog registers." value="0x00000000" startoffset="0x0C00">
				<Member name="wdg_lock" description="Writing 0x1ACC_E551 to this register enables the write permissions to all the registers.&lt;br&gt;Writing other values disables the write permissions to all the registers.&lt;br&gt;When this register is read, the lock status rather than the written value of this register is returned.&lt;br&gt;0x0000_0000: The write permission is available (unlocked).&lt;br&gt;0x0000_0001: The write permission is unavailable (locked)." range="31:0" property="RW"/>
				<Register offset="0x0C00"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="DDRC" i2cSupport="false">
			<Module baseAddress="0x10100000"/>
			<RegisterGroup name="DDRC_STATUS" description="DDRC_STATUS is a DDRC status register." value="0x00000005" startoffset="0x000">
				<Member name="reserved" description="Reserved." range="31:4" property="RO"/>
				<Member name="in_init" description="Initialization status of a controller.&lt;br&gt;0: normal&lt;br&gt;1: initializing" range="3" property="RO"/>
				<Member name="in_sr" description="Self-refresh status of a controller.&lt;br&gt;0: normal&lt;br&gt;1: self-refreshing" range="2" property="RO"/>
				<Member name="reserved" description="Reserved." range="1" property="RO"/>
				<Member name="busy" description="Busy status of a controller.&lt;br&gt;0: idle&lt;br&gt;1: A command is being processed." range="0" property="RO"/>
				<Register offset="0x000"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_SREFCTRL" description="DDRC_SREFCTRL is a DDRC self-refresh control register." value="0x00000001" startoffset="0x004">
				<Member name="reserved" description="Reserved." range="31:1" property="RO"/>
				<Member name="sr_req" description="SDRAM self-refresh request.&lt;br&gt;0: exit the self-refresh status&lt;br&gt;1: enter the self-refresh status" range="0" property="RW"/>
				<Register offset="0x004"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_INITCTRL" description="DDRC_INITCTRL is a DDRC initialization control register." value="0x00000000" startoffset="0x008">
				<Member name="reserved" description="Reserved." range="31:1" property="RO"/>
				<Member name="init_req" description="Initialization enable.&lt;br&gt;0: Initialization is complete or initialization is performed properly.&lt;br&gt;1: The SDRAM starts to be initialized." range="0" property="RW"/>
				<Register offset="0x008"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_CTRL" description="DDRC_CTRL is a DDRC control register." value="0x00000000" startoffset="0x010">
				<Member name="reserved" description="Reserved." range="31:1" property="RO"/>
				<Member name="ddr_rst_n" description="DDR3 SDRAM reset.&lt;br&gt;0: valid&lt;br&gt;1: invalid&lt;br&gt;Note: This bit is valid for the DDR3 SDRAM only and is set to 0 by default." range="0" property="RW"/>
				<Register offset="0x010"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_EMRS01" description="DDRC_EMRS01 is a DDR mode configuration register." value="0x00000000" startoffset="0x014">
				<Member name="emrs1" description="DDRn SDRAM extended mode register 1." range="31:16" property="RW"/>
				<Member name="mrs" description="DDRn SDRAM mode register." range="15:0" property="RW"/>
				<Register offset="0x014"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_EMRS23" description="DDRC_EMRS23 is a DDR extended mode configuration register." value="0x00000000" startoffset="0x018">
				<Member name="emrs3" description="DDRn SDRAM extended mode register 3." range="31:16" property="RW"/>
				<Member name="emrs2" description="DDRn SDRAM extended mode register 2." range="15:0" property="RW"/>
				<Register offset="0x018"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_CONFIG0" description="DDRC_CONFIG0 is DDRC function configuration register 0." value="0x20000510" startoffset="0x01C">
				<Member name="init_arefnum" description="Number of auto-refresh operations when the DDRn SDRAM is being initialized.&lt;br&gt;0x0–0x2: two times&lt;br&gt;0x3–0xF: n times" range="31:28" property="RW"/>
				<Member name="pd_prd" description="Power down cycle configuration of the SDRAM low power. When the DDRC does not receive any command in continuous pd_prd cycles, it forces the DDRn SDRAM to enter the low-power mode; when a command is received, the DDRC forces the DDRn SDRAM to exit the low-power mode.&lt;br&gt;0x00: one clock cycle&lt;br&gt;0x01–0xFF: n clock cycles.&lt;br&gt;Note: This parameter is valid only when pd_en is 1." range="27:20" property="RW"/>
				<Member name="rcv_pdr" description="DDR receive I/O dynamic power down control enable. The DDRC disables the receive buffer of the DDR data I/O in the non-read status when it is enabled.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="19" property="RW"/>
				<Member name="sr_cc" description="DDRn SDRAM clock control in self-refresh mode.&lt;br&gt;0: The DDRn SDRAM clock is disabled.&lt;br&gt;1: The DDRn SDRAM clock is disabled." range="18" property="RW"/>
				<Member name="reserved" description="Reserved.&lt;br&gt;This bit can be set only to 0." range="17" property="RW"/>
				<Member name="pd_en" description="Automatic low-power enable of the DDRn SDRAM.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:14" property="RW"/>
				<Member name="rank" description="Rank configuration of the DDRC.&lt;br&gt;00: 1 rank&lt;br&gt;Other values: reserved" range="13:12" property="RW"/>
				<Member name="reserved" description="Reserved." range="11" property="RW"/>
				<Member name="dram_type" description="External memory type.&lt;br&gt;101: DDR2&lt;br&gt;110: DDR3&lt;br&gt;Other values: reserved" range="10:8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:6" property="RW"/>
				<Member name="mem_width" description="Bit width of the storage data bus.&lt;br&gt;00: 16 bits&lt;br&gt;Other values: reserved" range="5:4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3:2" property="RW"/>
				<Member name="brst_a12" description="DDR3 SDRAM A12 command enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;Note: The recommended value is 0." range="1" property="RW"/>
				<Member name="reserved" description="Reserved.&lt;br&gt;Note: Only 0 can be set to this bit." range="0" property="RW"/>
				<Register offset="0x01C"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_CONFIG1" description="DDRC_CONFIG1 is DDRC function configuration register 1." value="0x0000A380" startoffset="0x020">
				<Member name="sref_arefnum" description="Number of self-refresh operations after DDRn SDRAM exits self-refresh in DFS process.&lt;br&gt;0x0–0x1: transmit auto refresh operation one time&lt;br&gt;0x2–0xF: transmit auto refresh operation n times&lt;br&gt;Note: When train_en is 1, the configured value is valid. When train_en is 0, DDRn SDRAM exits self-refresh and the DDRC does not perform auto refresh operation." range="31:28" property="RW"/>
				<Member name="reserved" description="Reserved." range="27:23" property="RW"/>
				<Member name="sref_zqc_en" description="ZQ calibration long enabled when DDR exits self-refresh operations.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;Note: This bit is valid in DDR3 mode. If DDR is in self-refresh status for a long time, this bit must be set to 1. To avoid additional time consumption of the ZQCL, this bit must be set to 0 during DFS process." range="22" property="RW"/>
				<Member name="reserved" description="Reserved." range="21" property="RW"/>
				<Member name="clk_switch" description="DDRC low power clock switch control. Whether to back pressure AXI interface command when DDRC enters low power status (DDR Self Refresh).&lt;br&gt;0: not back pressure command and return to error.&lt;br&gt;1: back pressure command and implement the original command when the clock is switched." range="20" property="RW"/>
				<Member name="reserved" description="Reserved." range="19:18" property="RW"/>
				<Member name="odis_ddrio" description="Output disable configuration of the DDR command and data I/O.&lt;br&gt;0: enable the pin output&lt;br&gt;1: disable the pin output&lt;br&gt;Note: The configuration is a static. After the DDR enters self_refresh status, this bit is recommended to be set to 1 to disable the DDR command and the data output of the I/O module. Before the DDR exits the self_refresh status, this bit is recommended to be set to 0 to enable the DDR command and the data output of the I/O." range="17" property="RW"/>
				<Member name="pd_ac" description="SDRAM address command status enable control in power-down mode.&lt;br&gt;0: enable the pin output&lt;br&gt;1: disable the pin output&lt;br&gt;Note: When pd_en is enabled, the configured value is valid. The control pins exclude CKE, ODT, CSN, and RESET_N." range="16" property="RW"/>
				<Member name="pd_pst_opn" description="SDRAM address command pin enable the delay in advance.&lt;br&gt;00: 0 beat&lt;br&gt;00: 1 beat in advance&lt;br&gt;10: 2 cycles in advance&lt;br&gt;11: 3 cycles in advance&lt;br&gt;Note: When pd_en is enabled, the configured value is valid. The control pins exclude CKE and RESET_N." range="15:14" property="RW"/>
				<Member name="pd_pre_cls" description="SDRAM address command enable delay after enters power-down mode.&lt;br&gt;00: delay 0 beat&lt;br&gt;01: delay 1 beat&lt;br&gt;10: delay 2 beats&lt;br&gt;11: delay 3 beats&lt;br&gt;Note: When pd_en is enabled, the configured value is valid. The control pins exclude CKE and RESET_N." range="13:12" property="RW"/>
				<Member name="reserved" description="Reserved." range="11" property="RW"/>
				<Member name="auto_pre_en" description="Auto precharge function enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="10" property="RW"/>
				<Member name="wr_rcv_mode" description="Mode of receiving the write command over the DDRC AXI port.&lt;br&gt;0: The write command is received directly.&lt;br&gt;1: The write command is received only after the expected write data arrives." range="9" property="RW"/>
				<Member name="exclu_en" description="Exclusive command enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="lock_en" description="WRAPcommand lock enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="7" property="RW"/>
				<Member name="aref_mode" description="Auto-refresh mode select.&lt;br&gt;0: An auto-refresh operation is performed every one tREFI period.&lt;br&gt;1: Eight auto-refresh operations are performed every nine tREFI periods." range="6" property="RW"/>
				<Member name="reserved" description="Reserved." range="5" property="RW"/>
				<Member name="dual_ch" description="Controller dual channels enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;Note: This bit can be set only to 0 in Hi3716M V300." range="4" property="RW"/>
				<Member name="read_mode" description="Read mode select of the DDRC.&lt;br&gt;0: associated read mode&lt;br&gt;1: delay read mode&lt;br&gt;The associated read mode is a mode in which the DDRC samples data based on the data valid signal from the PHY.&lt;br&gt;The delay read mode is a mode in which the DDRC samples the data from the PHY after the internal delay of the DDRC.&lt;br&gt;Note: This bit can be set only to 0 in Hi3716M V300." range="3" property="RW"/>
				<Member name="clkratio" description="Operating mode of the DDRC.&lt;br&gt;0: The ratio of the frequency of the DDRC to the frequency of the PHY is 1:1.&lt;br&gt;1: The ratio of the frequency of the DDRC to the frequency of the PHY is 1:2." range="2" property="RW"/>
				<Member name="reserved" description="Reserved." range="1" property="RW"/>
				<Member name="zqc_en" description="DDR3 SDRAM ZQ enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;Note: This bit is valid for the DDR3 SDRAM only and is set to 0 by default." range="0" property="RW"/>
				<Register offset="0x020"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_CMDCFG" description="DDRC_CMDCFG is a DDRC command configuration register." value="0x00000000" startoffset="0x024">
				<Member name="cmd_mrs" description="Configuration value in DDR mode when LMR command is configured." range="31:16" property="RW"/>
				<Member name="cmd_ba" description="Configured value of the DDR BA when the LMR command is configured." range="15:8" property="RW"/>
				<Member name="cmd_rank" description="Rank of running commands.&lt;br&gt;0: The configuration command is executed.&lt;br&gt;1: The configuration command is not executed.&lt;br&gt;Each bit controls rank." range="7:4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3:2" property="RW"/>
				<Member name="cmd_type" description="DDR command configuration.&lt;br&gt;00: enter the deep power down mode&lt;br&gt;01: exit the deep power down mode&lt;br&gt;10: LMR command&lt;br&gt;11: ZQCL" range="1:0" property="RW"/>
				<Register offset="0x024"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_CMDEXE" description="DDRC_CMDEXE is a DDRC software configuration command start register." value="0x00000000" startoffset="0x028">
				<Member name="reserved" description="Reserved." range="31:1" property="RO"/>
				<Member name="cmd_req" description="Request of executing the configuration command of the DDRC.&lt;br&gt;0: The command is not executed or the parameter is cleared automatically after the command is executed.&lt;br&gt;1: The command is requested to be executed." range="0" property="RW"/>
				<Register offset="0x028"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_RNKCFG" description="DDRC_RNKCFG is a DDR feature configuration register." value="0x00000000" startoffset="0x02C+0x4*rnks">
				<Member name="reserved" description="Reserved." range="31:14" property="RO"/>
				<Member name="mem_map" description="Address translation mode of the SDRAM.&lt;br&gt;00: {Rank,Row,Ba,Col,DW} = AXI_Address&lt;br&gt;01: {Rank,Ba,Row,Col,DW} = AXI_Address&lt;br&gt;10: {Rank,Row,Ba,Col,cs,Col,DW} = AXI_Address&lt;br&gt;11: {Rank,Ba,Row,Col,cs,Col,DW} = AXI_Address&lt;br&gt;This parameter can be set to 'b10 and 'b11 when DDRC_CONFIG1[dual_ch] is valid.&lt;br&gt;When there are multiple ranks, each rank is configured in the same way." range="13:12" property="RW"/>
				<Member name="reserved" description="Reserved." range="11:9" property="RW"/>
				<Member name="mem_bank" description="Number of banks of a single SDRAM.&lt;br&gt;0: 4 banks&lt;br&gt;1: 8 banks&lt;br&gt;If there are multiple ranks, the ranks in the same channel can have different configurations. In dual-channel mode, the dual channels must have the same configuration." range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7" property="RW"/>
				<Member name="mem_row" description="Bit width of the row address of a single DDRn SDRAM.&lt;br&gt;000: 11 bits&lt;br&gt;001: 12 bit&lt;br&gt;010: 13 bits&lt;br&gt;011: 14 bits&lt;br&gt;100: 15 bits&lt;br&gt;101: 16 bits&lt;br&gt;Other values: reserved&lt;br&gt;If there are multiple ranks, the ranks in the same channel can have different configurations. In dual-channel mode, the dual channels must have the same configuration." range="6:4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="RW"/>
				<Member name="mem_col" description="Bit width of the row address of a single DDRn SDRAM.&lt;br&gt;000: 8 bits&lt;br&gt;001: 9 bit&lt;br&gt;010: 10 bits&lt;br&gt;011: 11 bits&lt;br&gt;100: 12 bits&lt;br&gt;Other values: reserved&lt;br&gt;If there are multiple ranks, the ranks in the same channel can have different configurations. In dual-channel mode, the dual channels must have the same configuration.&lt;br&gt;Note: The DDRC does not support the devices whose col address is less than 8. That is the 32-bit width LPDDR2 devices whose capacity is 64 Mbits." range="2:0" property="RW"/>
				<Register offset="0x2c"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_TIMING0" description="DDRC_TIMING0 is DDR timing parameter register 0." value="0xFFFF3F1F" startoffset="0x050">
				<Member name="tmrd" description="Count of wait cycles of LMR command.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles&lt;br&gt;This parameter is set to max{tMRD, tMOD}." range="31:28" property="RW"/>
				<Member name="trrd" description="Number of wait cycles of the ACT bank A to ACT bank B command.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles" range="27:24" property="RW"/>
				<Member name="trp" description="Count of wait cycles of the disable command (PRE period).&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles" range="23:20" property="RW"/>
				<Member name="trcd" description="Number of wait cycles from the ACT bank command to the read or write bank command.&lt;br&gt;0x0–0x3: three clock cycles&lt;br&gt;0x4–0xF: n clock cycles" range="19:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:14" property="RW"/>
				<Member name="trc" description="Count of wait cycles from an ACT bank command to the next ACT bank command.&lt;br&gt;0x00–0x01: one clock cycle&lt;br&gt;0x02–0x3F: n clock cycles" range="13:8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:5" property="RW"/>
				<Member name="tras" description="Number of wait cycles from the ACT bank command to the disable command.&lt;br&gt;0x00–0x01: one clock cycle&lt;br&gt;0x02–0x0F: n clock cycles" range="4:0" property="RW"/>
				<Register offset="0x050"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_TIMING1" description="DDRC_TIMING1 is DDR timing parameter register 1." value="0xFF0145FF" startoffset="0x054">
				<Member name="tsre" description="Count of wait cycles from the self-refresh exit command to the read command.&lt;br&gt;0x0: one clock cycle&lt;br&gt;0x01–0xFF: n x 2 clock cycles.&lt;br&gt;When the DDR3 SDRAM is used, the value is set to tXSDLL." range="31:24" property="RW"/>
				<Member name="trdlat" description="Inherent delay of the DDRPHY.&lt;br&gt;0x0–0xF: n + 1 clock cycles&lt;br&gt;This field is valid when read_mode is 1 (delay read mode)." range="23:20" property="RW"/>
				<Member name="trtw" description="Delay from the last read data segment to the first written data segment.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2-0xF: n + 1 clock cycles" range="19:16" property="RW"/>
				<Member name="twl" description="Count of wait cycles from the write command to the write data.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles&lt;br&gt;For example, 0x3 indicates three clock cycles.&lt;br&gt;Note: twl is set to tcl-1 in DDR2 mode. twl must meet the following condition: twl – taond ≥ 1." range="15:12" property="RW"/>
				<Member name="tcl" description="DDR CL from the read command to the read data.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles" range="11:8" property="RW"/>
				<Member name="trfc" description="Count of wait cycles of the AREF period or AREF to the ACT command. The register can be set to the maximum value max{trfc, tzqcs}.&lt;br&gt;0x00–0x01: one clock cycle&lt;br&gt;0x02–0xFF: n clock cycles" range="7:0" property="RW"/>
				<Register offset="0x054"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_TIMING2" description="DDRC_TIMING2 is DDR timing parameter register 2." value="0xF3F3F000" startoffset="0x058">
				<Member name="tcke" description="Minimum period of maintaining the low-power mode.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles&lt;br&gt;The value needs to be set to the maximum value among tCKESR, tCKSRE, tCKSRX, and tCKE.&lt;br&gt;When the Dophin DDRPHY is used, the value of this register needs to be set to max{tCKSRx, tCKE} + 3." range="31:28" property="RW"/>
				<Member name="twtr" description="Count of wait cycles of the last write-to-read command.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xf: n clock cycles&lt;br&gt;For example, 0x3 indicates three clock cycles." range="27:24" property="RW"/>
				<Member name="twr" description="Count of wait cycles of write recovery.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xf: n clock cycles&lt;br&gt;Note: When DFS is required, the parameter of tWR must be set to the maximum frequency in the DFS and cannot change with the frequency of the DDR." range="23:20" property="RW"/>
				<Member name="reserved" description="Reserved." range="19:18" property="RW"/>
				<Member name="tfaw" description="Count of clock cycles of four continuous activation commands.&lt;br&gt;0x00-0x3F: n clock cycles&lt;br&gt;For example, 0x14 indicates 20 clock cycles." range="17:12" property="RW"/>
				<Member name="reserved" description="Reserved." range="11" property="RW"/>
				<Member name="taref" description="Count of auto-refresh cycles.&lt;br&gt;0x000: forbidden&lt;br&gt;0x001–0x7FF: The auto-refresh cycles of the DDR2 SDRAM are 16 x n clock cycles.&lt;br&gt;For example, 0x008 indicates 128 clock cycles (16x8)&lt;br&gt;The configuration interval is tREFI = 7800/16/tclk. Tclk is the running cycle when SDRAM is used.&lt;br&gt;When DDRC_CONFIG1[aref_mode] is 1, the interval of DDRC_TIMING2 must be set to 8 x tREFI." range="10:0" property="RW"/>
				<Register offset="0x058"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_TIMING3" description="DDRC_TIMING3 is DDR timing parameter register 3." value="0xFFDFF0F2" startoffset="0x05C">
				<Member name="tzq_prd" description="Count of ZQCS command cycles.&lt;br&gt;0x000: The ZQCS command is forbidden.&lt;br&gt;0x001–0x3FF: n x 128 AREF cycles.&lt;br&gt;The count of ZQCS command cycles is equal to n x 128 taref clock cycles." range="31:22" property="RW"/>
				<Member name="tzqinit" description="Count of delay cycles during ZQ initialization.&lt;br&gt;0x0–0x1ff: n + 1 clock cycle&lt;br&gt;The value needs to be set to the maximum value between tZQINIT and tDLLK." range="21:12" property="RW"/>
				<Member name="taond" description="Count of ODT enable/disable cycles.&lt;br&gt;In DDR2 mode (taond/taofd):&lt;br&gt;0x0: 2/2.5&lt;br&gt;0x1: 3/3.5&lt;br&gt;0x2: 4/4.5&lt;br&gt;0x3: 5/5.5&lt;br&gt;Other values: reserved&lt;br&gt;In DDR3 mode, the value is set to tWL – 1." range="11:8" property="RW"/>
				<Member name="txard" description="Count of wait cycles of exiting the DDR low-power mode.&lt;br&gt;0x0–0xF: n clock cycles. The letter n indicates the corresponding decimal value.&lt;br&gt;For example, 0x7 indicates seven clock cycles.&lt;br&gt;The value is set to the maximum value among tXP, tXARD, tXARDS, and tXS.&lt;br&gt;In DDR3 mode, when the register is set to tXS, txard only needs to be set to an equivalent clock cycle of 10 ns." range="7:4" property="RW"/>
				<Member name="trtp" description="Wait delay from the read command to the disable command.&lt;br&gt;000–010: two clock cycles&lt;br&gt;011–111: n clock cycles&lt;br&gt;The calculation formula of Trtp is AL + BL/2 + Max (trtp, 2) – 2." range="3:0" property="RW"/>
				<Register offset="0x05C"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_NXT_TIMING0" description="DDRC_NXT_TIMING0 is DDR timing parameter register 0 for switching frequency." value="0xFFFF3F1F" startoffset="0x070">
				<Member name="tmrd_nxt" description="Count of wait cycles of LMR command.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles" range="31:28" property="RW"/>
				<Member name="trrd_nxt" description="Number of wait cycles of the ACT bank A to ACT bank B command.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles" range="27:24" property="RW"/>
				<Member name="trp_nxt" description="Count of wait cycles of the disable command (PRE period).&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles" range="23:20" property="RW"/>
				<Member name="trcd_nxt" description="Number of wait cycles from the ACT bank command to the read or write bank command.&lt;br&gt;0x0–0x3: three clock cycles&lt;br&gt;0x4–0xF: n clock cycles" range="19:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:14" property="RW"/>
				<Member name="trc_nxt" description="Count of wait cycles from an ACT bank command to the next ACT bank command.&lt;br&gt;0x00–0x01: one clock cycle&lt;br&gt;0x02-0x3F: n clock cycles" range="13:8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:5" property="RW"/>
				<Member name="tras_nxt" description="Number of wait cycles from the ACT bank command to the disable command.&lt;br&gt;0x00–0x01: one clock cycle&lt;br&gt;0x02–0x0F: n clock cycles" range="4:0" property="RW"/>
				<Register offset="0x070"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_NXT_TIMING1" description="DDRC_NXT_TIMING1 is DDR timing parameter register 1 for switching frequency." value="0xFF0145FF" startoffset="0x074">
				<Member name="tsre_nxt" description="Count of wait cycles from the self-refresh exit command to the read command.&lt;br&gt;0x0: one clock cycle&lt;br&gt;0x01–0xFF: n x 2 clock cycles.&lt;br&gt;When the DDR3 SDRAM is used, the value is set to tXSDLL." range="31:24" property="RW"/>
				<Member name="trdlat_nxt" description="Inherent delay of the DDRPHY.&lt;br&gt;0x0–0xF: n + 1 clock cycles&lt;br&gt;When the Dophin DDRPHY is used, the value is set to 0x5." range="23:20" property="RW"/>
				<Member name="trtw_nxt" description="Delay from the last read data segment to the first written data segment.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2-0xF: n + 1 clock cycles" range="19:16" property="RW"/>
				<Member name="twl_nxt" description="Count of wait cycles from the write command to the write data.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles&lt;br&gt;For example, 0x3 indicates three clock cycles.&lt;br&gt;Note: twl is set to tcl-1 in DDR2 mode. twl must meet the following condition: twl – taond ≥ 1." range="15:12" property="RW"/>
				<Member name="tcl_nxt" description="DDR CL from the read command to the read data.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles" range="11:8" property="RW"/>
				<Member name="trfc_nxt" description="Count of wait cycles of the AREF period or AREF to the ACT command. The register can be set to the maximum value max{trfc, tzqcs}.&lt;br&gt;0x00–0x01: one clock cycle&lt;br&gt;0x02–0xFF: n clock cycles" range="7:0" property="RW"/>
				<Register offset="0x074"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_NXT_TIMING2" description="DDRC_NXT_TIMING2 is DDR timing parameter register 2 for switching frequency." value="0xF3F3F000" startoffset="0x078">
				<Member name="tcke_nxt" description="Minimum period of maintaining the low-power mode.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xF: n clock cycles&lt;br&gt;The value needs to be set to the maximum value among tCKESR, tCKSRE, tCKSRX, and tCKE." range="31:28" property="RW"/>
				<Member name="twtr_nxt" description="Count of wait cycles of the last write-to-read command.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2-0xf: n clock cycles&lt;br&gt;For example, 0x3 indicates three clock cycles." range="27:24" property="RW"/>
				<Member name="twr_nxt" description="Count of wait cycles of write recovery.&lt;br&gt;0x0–0x1: one clock cycle&lt;br&gt;0x2–0xf: n clock cycles&lt;br&gt;Note: When DFS is required, the parameter of tWR must be set to the maximum frequency in the DFS and cannot change with the frequency of the DDR." range="23:20" property="RW"/>
				<Member name="reserved" description="Reserved." range="19:18" property="RW"/>
				<Member name="tfaw_nxt" description="Count of clock cycles of four continuous activation commands.&lt;br&gt;0x00-0x3F: n clock cycles&lt;br&gt;For example, 0x14 indicates 20 clock cycles." range="17:12" property="RW"/>
				<Member name="reserved" description="Reserved." range="11" property="RW"/>
				<Member name="taref_nxt" description="Count of auto-refresh cycle.&lt;br&gt;0x000: forbidden&lt;br&gt;0x001–0x7FF: The auto-refresh cycle of the DDR2 SDRAM is 16 x n clock cycles.&lt;br&gt;For example, 0x008 indicates 128 clock cycles (16x8)&lt;br&gt;The configuration interval is tREFI = 7800/16/tclk. Tclk is the running cycle when SDRAM is used.&lt;br&gt;When DDRC_CONFIG1[aref_mode] is 1, the interval of DDRC_TIMING2 must be set to 8 x tREFI." range="10:0" property="RW"/>
				<Register offset="0x078"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_NXT_TIMING3" description="DDRC_NXT_TIMING3 is DDR timing parameter register 3 for switching frequency." value="0xFFDFF0F2" startoffset="0x07C">
				<Member name="tzq_prd_nxt" description="Count of ZQCS command cycles.&lt;br&gt;0x000: The ZQCS command is forbidden.&lt;br&gt;0x001–0x3FF: n x 128 AREF cycles.&lt;br&gt;The count of ZQCS command cycle is equal to n x 128 taref clock cycles." range="31:22" property="RW"/>
				<Member name="tzqinit_nxt" description="Count of delay cycles during ZQ initialization.&lt;br&gt;0x0–0x1ff: n + 1 clock cycle&lt;br&gt;The value needs to be set to the maximum value between tZQINIT and tDLLK." range="21:12" property="RW"/>
				<Member name="taond_nxt" description="Count of ODT enable/disable cycles.&lt;br&gt;In DDR2 mode (taond/taofd):&lt;br&gt;0x0: 2/2.5&lt;br&gt;0x1: 3/3.5&lt;br&gt;0x2: 4/4.5&lt;br&gt;0x3: 5/5.5&lt;br&gt;Other values: reserved&lt;br&gt;In DDR3 mode, the value is set to tWL – 1." range="11:8" property="RW"/>
				<Member name="txard_nxt" description="Count of wait cycles of exiting the DDR low-power mode.&lt;br&gt;0x0–0xF: n clock cycles. The letter n indicates the corresponding decimal value.&lt;br&gt;For example, 0x7 indicates seven clock cycles.&lt;br&gt;The value is set to the maximum value among tXP, tXARD, tXARDS, and tXS.&lt;br&gt;In DDR3 mode, when the register is set to tXS, txard only needs to be set to an equivalent clock cycle of 10 ns." range="7:4" property="RW"/>
				<Member name="trtp_nxt" description="Wait delay from the read command to the disable command.&lt;br&gt;000–010: two clock cycles&lt;br&gt;011–111: n clock cycles&lt;br&gt;The calculation formula of Trtp is AL + BL/2 + Max (trtp, 2) – 2." range="3:0" property="RW"/>
				<Register offset="0x07C"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_DTRCTRL" description="DDRC_DTRCTRL is a DDRC gating training control register." value="0x00000401" startoffset="0x0AC">
				<Member name="dt_byte" description="Byte training enable.&lt;br&gt;0: forbidden&lt;br&gt;1: enabled&lt;br&gt;[24]: DDRC Byte0 training enable&lt;br&gt;…&lt;br&gt;[31]: DDRC Byte7 training enable" range="31:24" property="RO"/>
				<Member name="reserved" description="Reserved." range="23:14" property="RO"/>
				<Member name="train_rank" description="Number of ranks in the gating training.&lt;br&gt;0x0–0x3: n+1 ranks" range="13:12" property="RO"/>
				<Member name="rensel" description="Read enable delay cycle.&lt;br&gt;000–011: n + 1 clock cycles&lt;br&gt;Other values: reserved&lt;br&gt;Note: This bit is fixed at 0x1 in Hi3716M V300." range="11:9" property="RO"/>
				<Member name="reserved" description="Reserved." range="8:2" property="RO"/>
				<Member name="train_en" description="Gating position training enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;Note: This bit can be set only to 0 in Hi3716M V300." range="1" property="RO"/>
				<Member name="itm_rst" description="ITM reset signal of the PHY.&lt;br&gt;0: valid&lt;br&gt;1: invalid" range="0" property="RO"/>
				<Register offset="0x0AC"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_AXISTATUS" description="DDRC_AXISTATUS is a DDRC interface status register." value="0x00000000" startoffset="0x0F0">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="axi_st7" description="Status of DDRC bus interface 7.&lt;br&gt;0: idle&lt;br&gt;1: A command is being executed." range="7" property="RO"/>
				<Member name="axi_st6" description="Status of DDRC bus interface 6.&lt;br&gt;0: idle&lt;br&gt;1: A command is being executed." range="6" property="RO"/>
				<Member name="axi_st5" description="Status of DDRC bus interface 5.&lt;br&gt;0: idle&lt;br&gt;1: A command is being executed." range="5" property="RO"/>
				<Member name="axi_st4" description="Status of DDRC bus interface 4.&lt;br&gt;0: idle&lt;br&gt;1: A command is being executed." range="4" property="RO"/>
				<Member name="axi_st3" description="Status of DDRC bus interface 3.&lt;br&gt;0: idle&lt;br&gt;1: A command is being executed." range="3" property="RO"/>
				<Member name="axi_st2" description="Status of DDRC bus interface 2.&lt;br&gt;0: idle&lt;br&gt;1: A command is being executed." range="2" property="RO"/>
				<Member name="axi_st1" description="Status of DDRC bus interface 1.&lt;br&gt;0: idle&lt;br&gt;1: A command is being executed." range="1" property="RO"/>
				<Member name="axi_st0" description="Status of DDRC bus interface 0.&lt;br&gt;0: idle&lt;br&gt;1: A command is being executed." range="0" property="RO"/>
				<Register offset="0x0F0"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_ODTCFG" description="DDRC_ODTCFG is a DDR ODT feature configuration register." value="0x00000000" startoffset="0x0F4">
				<Member name="reserved" description="Reserved." range="31:17" property="RW"/>
				<Member name="rodt0" description="Read ODT configuration of rank0.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:1" property="RW"/>
				<Member name="wodt0" description="Write ODT configuration of rank1.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x0F4"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_COMPCFG" description="DDRC_COMPCFG is a DDRPHY ZQ calibration configuration register." value="0x00000000" startoffset="0x0F8">
				<Member name="reserved" description="Reserved." range="31:1" property="RW"/>
				<Member name="phy_zqen" description="DDRPHY ZQ self-calibration enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x0F8"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_QOSCFG0" description="DDRC_QOSCFG0 is DDRC QoS algorithm configuration register 0." value="0x0000000F" startoffset="0x100">
				<Member name="reserved" description="Reserved." range="31:8" property="RW"/>
				<Member name="dyn_qosmap_en" description="ID dynamic mapping enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="7" property="RW"/>
				<Member name="idmap_mode" description="ID mapping mode.&lt;br&gt;0: The id_map mapping mode configured by the register is used by default.&lt;br&gt;1: The QoS mapping mode is used. The AXI interface configures this mode in associated mode by running read/write command. This mapping mode is valid only when its macro definition is enabled in the RTL code." range="6" property="RW"/>
				<Member name="id_order_ctl" description="Out-of –order execution enable of the specified ID&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;The DDRC does not ensure the order when the address conflict occurs between the specified ID read/write commands and other ID commands. Master ensures the consistency of the data.&lt;br&gt;Note: The configuration is valid only after the parameters of the corresponding macroblocks are configured in the code." range="5" property="RW"/>
				<Member name="order_en" description="Execution order enable for the commands with the same priority.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="4" property="RW"/>
				<Member name="dmc_fifo_lvl" description="Depth of the command register FIFO in the DMC.&lt;br&gt;0x0–0xf: depth of n+1 commands&lt;br&gt;Other values: reserved" range="3:0" property="RW"/>
				<Register offset="0x100"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_QOSCFG1" description="DDRC_QOSCFG1 is DDRC QoS algorithm configuration register 1." value="0x32103210" startoffset="0x104">
				<Member name="id_map_rd" description="For the read command, QoS that is configured by selecting four bits based on the bus ID.&lt;br&gt;Bit[15:12]: configure bit[3] mapping to the ID&lt;br&gt;Bit[11:8]: configure bit[2] mapping to the ID&lt;br&gt;Bit[7:4]: configure bit[1] mapping to the ID&lt;br&gt;Bit[3:0]: configure bit[0] mapping to the ID&lt;br&gt;For example, if ID_MAP is set to 0x5320, ID[5], ID[3], ID[2], and ID[0] of the bus ID are used for ID mapping and priority configuration.&lt;br&gt;The DDRC inserts three bits between the ninth bit, eighth bit and seventh bit of the existing 13-bit ID. These three bits indicate the AXI port numbers. Therefore, the bit width of the ID mapped by the DDRC is 16 bits.&lt;br&gt;000: axi port 0&lt;br&gt;001: axi port 1&lt;br&gt;010: axi port 2&lt;br&gt;011: axi port 3&lt;br&gt;100: axi port 4&lt;br&gt;101: axi port 5&lt;br&gt;110: axi port 6&lt;br&gt;111: axi port 7" range="31:16" property="RW"/>
				<Member name="id_map_wr" description="For the read command, QoS that is configured by selecting four bits based on the bus ID. &lt;br&gt;Bit[15:12]: configure bit[3] mapping to the ID&lt;br&gt;Bit[11:8]: configure bit[2] mapping to the ID&lt;br&gt;Bit[7:4]: configure bit[1] mapping to the ID&lt;br&gt;Bit[3:0]: configure bit[0] mapping to the ID&lt;br&gt;For example, if ID_MAP is set to 0x5320, ID[5], ID[3], ID[2], and ID[0] of the bus ID are used for ID mapping and priority configuration.&lt;br&gt;The DDRC inserts three bits between the ninth bit, eighth bit and seventh bit of the existing 13-bit ID. These three bits indicate the AXI port numbers. Therefore, the bit width of the ID mapped by the DDRC is 16 bits.&lt;br&gt;000: axi port 0&lt;br&gt;001: axi port 1&lt;br&gt;010: axi port 2&lt;br&gt;011: axi port 3&lt;br&gt;100: axi port 4&lt;br&gt;101: axi port 5&lt;br&gt;110: axi port 6&lt;br&gt;111: axi port 7" range="15:0" property="RW"/>
				<Register offset="0x104"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_QOS" description="DDRC_QOS is a DDRC command priority configuration register." value="0x00000004" startoffset="0x150+0x4*id0s">
				<Member name="reserved" description="Reserved." range="31:28" property="RW"/>
				<Member name="pri_apt" description="Command priority adaptation configuration.&lt;br&gt;0x0: disabled&lt;br&gt;0x1-0xF: n x 16 clock cycles" range="27:24" property="RW"/>
				<Member name="age_prd" description="Command aging cycle configuration.&lt;br&gt;0x0: disabled&lt;br&gt;0x1-0xF: n x 16 clock cycles" range="23:20" property="RW"/>
				<Member name="reserved" description="Reserved." range="19:17" property="RW"/>
				<Member name="qos_en" description="Command QoS enable (timeout).&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:14" property="RW"/>
				<Member name="qos" description="Command QoS configuration (timeout).&lt;br&gt;0x1-0x3FF: n clock cycles&lt;br&gt;Other values: reserved&lt;br&gt;Note: The used timeout value is an integer multiple of 16. The lower four bits of rd_qos is ignored." range="13:4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="RW"/>
				<Member name="pri" description="Command priority configuration.&lt;br&gt;000: highest priority&lt;br&gt;001: higher priority&lt;br&gt;…&lt;br&gt;111: lowest priority" range="2:0" property="RW"/>
				<Register offset="0x150"/>
				<Register offset="0x154"/>
				<Register offset="0x158"/>
				<Register offset="0x15c"/>
				<Register offset="0x160"/>
				<Register offset="0x164"/>
				<Register offset="0x168"/>
				<Register offset="0x16c"/>
				<Register offset="0x170"/>
				<Register offset="0x174"/>
				<Register offset="0x178"/>
				<Register offset="0x17c"/>
				<Register offset="0x180"/>
				<Register offset="0x184"/>
				<Register offset="0x188"/>
				<Register offset="0x18c"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_FLUX" description="DDRC_FLUX is a DDRC AXI port bandwidth control configuration register." value="0x00000000" startoffset="0x200+0x4*ports">
				<Member name="reserved" description="Reserved." range="31:22" property="RW"/>
				<Member name="flux_port_en" description="AXI interface DDRC traffic count enable.&lt;br&gt;0: disable &lt;br&gt;1: enabled" range="21" property="RW"/>
				<Member name="flux_ovfl" description="AXI interface traffic overflow enable&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;When this bit is set to 1, the AXI port traffic exceeds the bandwidth limit, the no-traffic overflow AXI port exists, and a command request is sent, the bandwidth of the AXI port can exceed the configuration traffic." range="20" property="RW"/>
				<Member name="reserved" description="Reserved." range="19:17" property="RW"/>
				<Member name="flux_lvl" description="AXI interface traffic overflow allow threshold.&lt;br&gt;0x0-0x10: allow&lt;br&gt;Other values: reserved&lt;br&gt;When the AXI interface traffic exceeds the configuration bandwidth, flux_ovfl is 1, and the number of commands to be processed in DMA is less than the configuration threshold, the transmission is allowed." range="16:12" property="RW"/>
				<Member name="reserved" description="Reserved." range="11:10" property="RW"/>
				<Member name="flux" description="Allow bandwidth configuration of the AXI interface.&lt;br&gt;0x0–0x3FF: the ratio of maximum DDR bandwidth accessed by the AXI interface to the total bandwidth. The total bandwidth is 1024, the ratio that the configuration value to the total bandwidth.&lt;br&gt;Other values: reserved" range="9:0" property="RW"/>
				<Register offset="0x200"/>
				<Register offset="0x204"/>
				<Register offset="0x208"/>
				<Register offset="0x20c"/>
				<Register offset="0x210"/>
				<Register offset="0x214"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_TEST0" description="DDRC_TEST0 is a DDRC test status register." value="0x00000000" startoffset="0x240">
				<Member name="dmc_ct" description="Controller command type." range="31:16" property="RO"/>
				<Member name="dmc_cv" description="The commands that are being processed by DDRC." range="15:0" property="RO"/>
				<Register offset="0x240"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_TEST7" description="DDRC_TEST7 is a DDRC performance count control register." value="0x00000000" startoffset="0x260">
				<Member name="perf_mode" description="Performance statistical mode.&lt;br&gt;0: continuous trigger mode. Performance count the continuous counts of the corresponding counters. Ensure that no data overflows within 1s count (533 MHz).&lt;br&gt;1: single trigger mode. When the performance counter reaches the maximum value, the count result is remained and the count is stopped.&lt;br&gt;Note: When an overflow occurs, the count values wrap." range="31" property="RW"/>
				<Member name="perf_en" description="Performance measurement mode.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;Note: When perf_mode is 0 and this bit is enabled, performance measurement register starts the cyclic count. When perf_mode is 1, this bit is cleared after one count is complete." range="30" property="RW"/>
				<Member name="perf_ch" description="Read and write count channel.&lt;br&gt;00: disabled&lt;br&gt;01: channel 0&lt;br&gt;10: channel 1&lt;br&gt;11: all channels&lt;br&gt;Other values: reserved&lt;br&gt;Note: This register limits the channels that counted by the read and write commands of DDRC_TEST8 and DDRC_TEST9.&lt;br&gt;Note: This bit can be set only to 00 or 01 in Hi3716M V300." range="29:28" property="RW"/>
				<Member name="perf_prd" description="Performance measurement cycle.&lt;br&gt;0x0–0xFFFFFFF: count cycles&lt;br&gt;The actual count cycle is perf_prdx4xtclk (tclk is the bus clock cycle of the DDRC).&lt;br&gt;Note: This configuration is valid only when perf_mode is 1. When perf_mode is 0, the performance counters keep on counting." range="27:0" property="RW"/>
				<Register offset="0x260"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_TEST8" description="DDRC_TEST8 is a DDRC write command count register." value="0x00000000" startoffset="0x264">
				<Member name="wr_num" description="Count of write commands within the count limit. This register is written to clear.&lt;br&gt;Supports wrap cycle count." range="31:0" property="RWC"/>
				<Register offset="0x264"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_TEST9" description="DDRC_TEST9 is a DDRC read command count register." value="0x00000000" startoffset="0x268">
				<Member name="rd_num" description="Count of read commands within the count limit. This register is written to clear.&lt;br&gt;Supports wrap cycle count." range="31:0" property="RWC"/>
				<Register offset="0x268"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_TEST10" description="DDRC_TEST10 is DDRC DMC command wait number count register." value="0x00000000" startoffset="0x26C">
				<Member name="dmc_cmd_num" description="Count of the DMC command wait number count of the DDRC. This register is written to clear.&lt;br&gt;Supports wrap cycle count.&lt;br&gt;Note: To ensure that an overflow does not occur within 1s in 533 MHz, this bit must be limited by the register bit width. The count result displayed by this register is the count value that the actual count result divided by 2" range="31:0" property="RWC"/>
				<Register offset="0x26C"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_TEST12" description="DDRC_TEST12 is a DDRC test status register." value="0x000000FF" startoffset="0x280">
				<Member name="wfifo_f" description="Write FIFO full status." range="31:16" property="RO"/>
				<Member name="wfifo_e" description="Write FIFO empty status." range="15:0" property="RO"/>
				<Register offset="0x280"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHYSRST" description="DDRC_PHYSRST is a DDRPHY soft reset control signal register." value="0x00000001" startoffset="0x400">
				<Member name="reserved" description="Reserved." range="31:1" property="RO"/>
				<Member name="ddrphy_srst" description="DDRPHY reset control.&lt;br&gt;0: valid&lt;br&gt;1: invalid" range="0" property="RW"/>
				<Register offset="0x400"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHYSTATUS" description="DDRC_PHYSTATUS is a DDRPHY status register." value="0x00000000" startoffset="0x404">
				<Member name="reserved" description="Reserved." range="31:1" property="RO"/>
				<Member name="phy_init_done" description="DDRPHY initialization complete flag&lt;br&gt;0: not complete&lt;br&gt;1: complete" range="0" property="RO"/>
				<Register offset="0x404"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHYCTRL" description="DDRC_PHYCTRL is a DDRPHY control register." value="0x00000001" startoffset="0x408">
				<Member name="reserved" description="Reserved." range="31:1" property="RO"/>
				<Member name="phy_init_start" description="DDRPHY initialization request.&lt;br&gt;0: valid&lt;br&gt;1: invalid" range="0" property="RW"/>
				<Register offset="0x408"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG1" description="DDRC_PHY_REG1 is DDRPHY register 1." value="0x0000003F" startoffset="0x800">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_rfifo_en" description="Receive FIFO enable.&lt;br&gt;01: 8-bit read DQ&lt;br&gt;11: 16-bit read DQ" range="5:4" property="RW"/>
				<Member name="phy_srst1" description="Soft reset 1, active low" range="3" property="RW"/>
				<Member name="phy_srst0" description="Soft reset 0, active low" range="2" property="RW"/>
				<Member name="phy_srts1_type" description="Reset 1 type.&lt;br&gt;1: select soft reset 1&lt;br&gt;0: select TX DLL lock" range="1" property="RW"/>
				<Member name="phy_srst0_type" description="Reset 0 type.&lt;br&gt;1: select soft reset 0&lt;br&gt;0: resetting now" range="0" property="RW"/>
				<Register offset="0x800"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG2" description="DDRC_PHY_REG2 is DDRPHY register 2." value="0x00000000" startoffset="0x808">
				<Member name="reserved" description="Reserved." range="31:7" property="RO"/>
				<Member name="phy_mem_type" description="Memory select.&lt;br&gt;1: DDR2&lt;br&gt;0: DDR3" range="6" property="RW"/>
				<Member name="reserved" description="Reserved." range="5:2" property="RW"/>
				<Member name="cal_mode" description="DQS squelch calibration mode select.&lt;br&gt;1: register bypass mode&lt;br&gt;0: no bypass mode" range="1" property="RW"/>
				<Member name="cal_start" description="DQS squelch auto calibration start, effective in no bypass mode.&lt;br&gt;1: start DQS squelch calibration&lt;br&gt;0: no calibration" range="0" property="RW"/>
				<Register offset="0x808"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG3" description="DDRC_PHY_REG3 is DDRPHY register 3." value="0x00000025" startoffset="0x804">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="reseverd_nz" description="Reserved. The initial value is nonzero." range="7:1" property="RW"/>
				<Member name="phy_bl" description="Burst select calibration.&lt;br&gt;0: burst4&lt;br&gt;1: burst8" range="0" property="RW"/>
				<Register offset="0x804"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG4" description="DDRC_PHY_REG4 is DDRPHY register 4." value="0x00000020" startoffset="0x824">
				<Member name="reserved" description="Reserved." range="31:7" property="RO"/>
				<Member name="phy_ck_en" description="CK/CKB I/O enable.&lt;br&gt;0: open I/O&lt;br&gt;1: close I/O" range="6" property="RW"/>
				<Member name="reserved_nz" description="Reserved. The initial value is nonzero." range="5:4" property="RW"/>
				<Member name="phy_odt_en" description="ODT I/O enable.&lt;br&gt;0: open I/O&lt;br&gt;1: close I/O" range="3" property="RW"/>
				<Member name="phy_cs_en" description="CS I/O enable.&lt;br&gt;0: open I/O&lt;br&gt;1: close I/O" range="2" property="RW"/>
				<Member name="phy_cmd_en" description="CMD I/O enable.&lt;br&gt;0: always open I/O&lt;br&gt;1: when opening a CMD issue" range="1" property="RW"/>
				<Member name="phy_cke_en" description="CKE I/O enable.&lt;br&gt;0: open I/O&lt;br&gt;1: close I/O" range="0" property="RW"/>
				<Register offset="0x824"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG4A" description="DDRC_PHY_REG4A is DDRPHY register 4A." value="0x00000070" startoffset="0x838">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_cl" description="CL value&lt;br&gt;DDR2/DDR3 CAS latency." range="7:4" property="RW"/>
				<Member name="phy_al" description="AL value&lt;br&gt;DDR2/DDR3 additive latency." range="3:0" property="RW"/>
				<Register offset="0x838"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG4B" description="DDRC_PHY_REG4B is DDRPHY register 4B." value="0x00000009" startoffset="0x83C">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_dqssq_dly_h" description="High 8-bit dqs gate delay select bypass mode." range="5:3" property="RW"/>
				<Member name="phy_dqssq_dly_l" description="Low 8-bit dqs gate delay select bypass mode." range="2:0" property="RW"/>
				<Register offset="0x83C"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG6" description="DDRC_PHY_REG6 is DDRPHY register 6." value="0x0000000C" startoffset="0x8D4">
				<Member name="reserved" description="Reserved." range="31:5" property="RO"/>
				<Member name="phy_ltxdqdll_byph" description="Left channel TX DQ DLL phase in bypass mode.&lt;br&gt;0: no delay&lt;br&gt;1: 90° delay" range="4" property="RW"/>
				<Member name="phy_ltxdqdll_en" description="Left channel TX DQ DLL enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="3" property="RW"/>
				<Member name="phy_ltxdqdll_dly" description="Left channel TX DQ DLL delay.&lt;br&gt;000: no delay&lt;br&gt;001: 22.5° delay&lt;br&gt;010: 45° delay&lt;br&gt;011: 67.5° delay&lt;br&gt;100: 90° delay&lt;br&gt;101: 112.5° delay&lt;br&gt;110: 135° delay&lt;br&gt;111: 157.5° delay" range="2:0" property="RW"/>
				<Register offset="0x8D4"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG7" description="DDRC_PHY_REG7 is DDRPHY register 7." value="0x00000008" startoffset="0x8D8">
				<Member name="reserved" description="Reserved." range="31:5" property="RO"/>
				<Member name="phy_ltxdqsdll_byph" description="Left channel TX DQS DLL phase in bypass mode.&lt;br&gt;0: no delay&lt;br&gt;1: 90° delay" range="4" property="RW"/>
				<Member name="phy_ltxdqsdll_en" description="Left channel TX DQS DLL enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="3" property="RW"/>
				<Member name="phy_ltxdqsdll_dly" description="left channel TX DQS DLL delay.&lt;br&gt;000: no delay&lt;br&gt;001: 22.5° delay&lt;br&gt;010: 45° delay&lt;br&gt;011: 67.5° delay&lt;br&gt;100: 90° delay&lt;br&gt;101: 112.5° delay&lt;br&gt;110: 135° delay&lt;br&gt;111: 157.5° delay" range="2:0" property="RW"/>
				<Register offset="0x8D8"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG8" description="DDRC_PHY_REG8 is DDRPHY register 8." value="0x00000001" startoffset="0x8E0">
				<Member name="reserved" description="Reserved." range="31:7" property="RO"/>
				<Member name="phy_ldqssqdll_en" description="Left channel DQS squelch DLL enable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="6" property="RW"/>
				<Member name="phy_ldqssqdll_dly" description="left channel DQS squelch DLL delay tap.&lt;br&gt;000: no delay&lt;br&gt;001: 22.5° delay&lt;br&gt;010: 45° delay&lt;br&gt;011: 67.5° delay&lt;br&gt;100: 90° delay&lt;br&gt;101: 112.5° delay&lt;br&gt;110: 135° delay&lt;br&gt;111: 157.5° delay" range="5:3" property="RW"/>
				<Member name="phy_lrxdqsdll_en" description="left channel RX DQS DLL enable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="2" property="RW"/>
				<Member name="phy_lrxdqsdll_dly" description="left channel RX DQS delay tap.&lt;br&gt;00: no delay&lt;br&gt;01: 22.5° delay&lt;br&gt;10: 45° delay&lt;br&gt;11: 67.5° delay" range="1:0" property="RW"/>
				<Register offset="0x8E0"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_RE9" description="DDRC_PHY_REG9 is DDRPHY register 9." value="0x0000000C" startoffset="0x914">
				<Member name="reserved" description="Reserved." range="31:5" property="RO"/>
				<Member name="phy_rtxdqdll_byph" description="right channel TX DQ DLL phase in bypass mode.&lt;br&gt;0: no delay&lt;br&gt;1: 90° delay" range="4" property="RW"/>
				<Member name="phy_rtxdqdll_en" description="right channel TX DQ DLL enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="3" property="RW"/>
				<Member name="phy_rtxdqdll_dly" description="right channel TX DQ DLL dely.&lt;br&gt;000: no delay&lt;br&gt;001: 22.5° delay&lt;br&gt;010: 45° delay&lt;br&gt;011: 67.5° delay&lt;br&gt;100: 90° delay&lt;br&gt;101: 112.5° delay&lt;br&gt;110: 135° delay&lt;br&gt;111: 157.5° delay" range="2:0" property="RW"/>
				<Register offset="0x914"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_RE10" description="DDRC_PHY_REG10 is DDRPHY register 10." value="0x00000008" startoffset="0x918">
				<Member name="reserved" description="Reserved." range="31:5" property="RO"/>
				<Member name="phy_rtxdqsdll_byph" description="Right channel TX DQS DLL phase in bypass mode.&lt;br&gt;0: no delay&lt;br&gt;1: 90° delay" range="4" property="RW"/>
				<Member name="phy_rtxdqsdll_en" description="Right channel TX DQS DLL enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="3" property="RW"/>
				<Member name="phy_rtxdqsdll_dly" description="Right channel TX DQS DLL dely.&lt;br&gt;000: no delay&lt;br&gt;001: 22.5° delay&lt;br&gt;010: 45° delay&lt;br&gt;011: 67.5° delay&lt;br&gt;100: 90° delay&lt;br&gt;101: 112.5° delay&lt;br&gt;110: 135° delay&lt;br&gt;111: 157.5° delay" range="2:0" property="RW"/>
				<Register offset="0x918"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG11" description="DDRC_PHY_REG11 is DDRPHY register 11." value="0x00000001" startoffset="0x920">
				<Member name="reserved" description="Reserved." range="31:7" property="RO"/>
				<Member name="phy_rdqssqdll_en" description="Right channel DQS squelch DLL enable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="6" property="RW"/>
				<Member name="phy_rdqssqdll_dly" description="Right channel DQS squelch delay tap.&lt;br&gt;000: no delay&lt;br&gt;001: 22.5° delay&lt;br&gt;010: 45° delay&lt;br&gt;011: 67.5° delay&lt;br&gt;100: 90° delay&lt;br&gt;101: 112.5° delay&lt;br&gt;110: 135° delay&lt;br&gt;111: 157.5° delay" range="5:3" property="RW"/>
				<Member name="phy_rrxdqsdll_en" description="Right channel RX DQS DLL enable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="2" property="RW"/>
				<Member name="phy_rrxdqsdll_dly" description="Right channel RX DQS delay tap.&lt;br&gt;00: no delay&lt;br&gt;11: 22.5° delay&lt;br&gt;10: 45° delay&lt;br&gt;11: 67.5° delay" range="1:0" property="RW"/>
				<Register offset="0x920"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG12" description="DDRC_PHY_REG12 is DDRPHY register 12." value="0x00000088" startoffset="0x840">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_cmd0pu_str" description="cmd0 pull up driver strength control bit." range="7:4" property="RW"/>
				<Member name="phy_cmd0pd_str" description="cmd0 pull down driver strength control bit." range="3:0" property="RW"/>
				<Register offset="0x840"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG13" description="DDRC_PHY_REG13 is DDRPHY register 13." value="0x00000088" startoffset="0x844">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_cmd0_rsl" description="cmd0 rising slew rate control bit." range="7:4" property="RW"/>
				<Member name="phy_cmd0_fsl" description="cmd0 falling slew rate control bit." range="3:0" property="RW"/>
				<Register offset="0x844"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG14" description="DDRC_PHY_REG14 is DDRPHY register 14." value="0x00000073" startoffset="0x848">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_cmd0sdll_lpen" description="cmd0 slave dll low power enable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="7" property="RW"/>
				<Member name="phy_cmd0dly_en" description="cmd0 one 2xclk cycle delay select.&lt;br&gt;1: delay one cycle&lt;br&gt;0: no delay" range="6" property="RW"/>
				<Member name="phy_rstn_pu" description="RESETN weak pull up control.&lt;br&gt;0: pull up&lt;br&gt;1: cut off" range="5" property="RW"/>
				<Member name="phy_rstn_pd" description="RESETN weak pull down control.&lt;br&gt;1: pull down&lt;br&gt;0: cut off" range="4" property="RW"/>
				<Member name="phy_cmd0_pu" description="cmd0 weak pull up control.&lt;br&gt;0: pull up&lt;br&gt;1: cut off" range="3" property="RW"/>
				<Member name="phy_cmd0_pd" description="cmd0 weak pull down control.&lt;br&gt;1: pull down&lt;br&gt;0: cut off" range="2" property="RW"/>
				<Member name="phy_cmd0pu_msb" description="cmd0 pull up driver strength control bit, MSB." range="1" property="RW"/>
				<Member name="phy_cmd0pd_msb" description="cmd0 pull down driver strength control bit, MSB." range="0" property="RW"/>
				<Register offset="0x848"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG15" description="DDRC_PHY_REG15 is DDRPHY register 15." value="0x00000008" startoffset="0x84C">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_cmd0fb_en" description="cmd0 feed back enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="5" property="RW"/>
				<Member name="phy_cmd0sdll_inv" description="cmd0 slave dll inverse mode select.&lt;br&gt;1: inverse&lt;br&gt;0: no inverse" range="4" property="RW"/>
				<Member name="phy_cmd0sdll_en" description="cmd0 slave dll enable.&lt;br&gt;1: enabled&lt;br&gt;0: disabled" range="3" property="RW"/>
				<Member name="phy_cmd0txsdll_dly" description="cmd0 TX slave DLL delay.&lt;br&gt;000: no delay&lt;br&gt;001: 22.5° delay&lt;br&gt;010: 45° delay&lt;br&gt;011: 67.5° delay&lt;br&gt;100: 90° delay&lt;br&gt;101: 112.5° delay&lt;br&gt;110: 135° delay&lt;br&gt;111: 157.5° delay" range="2:0" property="RW"/>
				<Register offset="0x84C"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG16" description="DDRC_PHY_REG16 is DDRPHY register 16." value="0x00000088" startoffset="0x854">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_cmd1pu_str" description="cmd1 pull up driver strength control bit." range="7:4" property="RW"/>
				<Member name="phy_cmd1pd_str" description="cmd1 pull down driver strength control bit." range="3:0" property="RW"/>
				<Register offset="0x854"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG17" description="DDRC_PHY_REG17 is DDRPHY register 17." value="0x00000088" startoffset="0x858">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_cmd1_rsl" description="cmd1 rising slew rate control bit." range="7:4" property="RW"/>
				<Member name="phy_cmd1_fsl" description="cmd1 falling slew rate control bit." range="3:0" property="RW"/>
				<Register offset="0x858"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG18" description="DDRC_PHY_REG18 is DDRPHY register 18." value="0x00000053" startoffset="0x85C">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_cmd1sdll_lpen" description="cmd1 slave dll low power enable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="7" property="RW"/>
				<Member name="phy_cmd1dly_en" description="cmd1 one 2xclk cycle delay select.&lt;br&gt;1: delay one cycle &lt;br&gt;0: no delay" range="6" property="RW"/>
				<Member name="phy_rstn_pu" description="CKE weak pull up control.&lt;br&gt;0: pull up&lt;br&gt;1: cut off" range="5" property="RW"/>
				<Member name="phy_rstn_pd" description="CKE weak pull down control.&lt;br&gt;1: pull down&lt;br&gt;0: cut off" range="4" property="RW"/>
				<Member name="phy_cmd1_pu" description="cmd1 weak pull up control.&lt;br&gt;0: pull up&lt;br&gt;1: cut off" range="3" property="RW"/>
				<Member name="phy_cmd1_pd" description="cmd1 weak pull down control.&lt;br&gt;1: pull down&lt;br&gt;0: cut off" range="2" property="RW"/>
				<Member name="phy_cmd1pu_msb" description="cmd1 pull up driver strength control bit, MSB." range="1" property="RW"/>
				<Member name="phy_cmd1pd_msb" description="cmd1 pull down driver strength control bit, MSB." range="0" property="RW"/>
				<Register offset="0x85C"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG19" description="DDRC_PHY_REG19 is DDRPHY register 19." value="0x00000008" startoffset="0x860">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_cmd1fb_en" description="cmd1 feed back enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="5" property="RW"/>
				<Member name="phy_cmd1sdll_inv" description="cmd1 slave dll inverse mode select.&lt;br&gt;1: inverse&lt;br&gt;0: no inverse" range="4" property="RW"/>
				<Member name="phy_cmd1sdll_en" description="cmd1 slave dll enable.&lt;br&gt;1: enabled&lt;br&gt;0: disabled" range="3" property="RW"/>
				<Member name="phy_cmd1txsdll_dly" description="cmd1 TX slave DLL delay.&lt;br&gt;000: no delay&lt;br&gt;001: 22.5° delay&lt;br&gt;010: 45° delay&lt;br&gt;011: 67.5° delay&lt;br&gt;100: 90° delay&lt;br&gt;101: 112.5° delay&lt;br&gt;110: 135° delay&lt;br&gt;111: 157.5° delay" range="2:0" property="RW"/>
				<Register offset="0x860"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG20" description="DDRC_PHY_REG20 is DDRPHY register 20." value="0x00000005" startoffset="0x864">
				<Member name="reserved" description="Reserved." range="31:4" property="RO"/>
				<Member name="phy_cmd1obv_en" description="cmd1 observations enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="3" property="RW"/>
				<Member name="reserved_nz" description="Reserved. The initial value is nonzero." range="2:1" property="RW"/>
				<Member name="phy_ckdly_en" description="CK one 2xclk cycle delay select.&lt;br&gt;1: delay one cycle&lt;br&gt;0: no delay" range="0" property="RW"/>
				<Register offset="0x864"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG21" description="DDRC_PHY_REG21 is DDRPHY register 21." value="0x00000000" startoffset="0x868">
				<Member name="reserved" description="Reserved." range="31:4" property="RO"/>
				<Member name="phy_cksdll_inv" description="CK slave dll inverse mode select.&lt;br&gt;1: inverse&lt;br&gt;0: no inverse" range="3" property="RW"/>
				<Member name="phy_cktxsdll_dly" description="CK TX slave DLL delay.&lt;br&gt;000: no delay&lt;br&gt;001: 22.5° delay&lt;br&gt;010: 45° delay&lt;br&gt;011: 67.5° delay&lt;br&gt;100: 90° delay&lt;br&gt;101: 112.5° delay&lt;br&gt;110: 135° delay&lt;br&gt;111: 157.5° delay" range="2:0" property="RW"/>
				<Register offset="0x868"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG22" description="DDRC_PHY_REG22 is DDRPHY register 22." value="0x00000088" startoffset="0x870">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_ckpu_str" description="CK pull up driver strength control bit." range="7:4" property="RW"/>
				<Member name="phy_ckpd_str" description="CK pull down driver strength control bit." range="3:0" property="RW"/>
				<Register offset="0x870"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG23" description="DDRC_PHY_REG23 is DDRPHY register 23." value="0x00000088" startoffset="0x874">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_ck_rsl" description="CK rising slew rate control bit." range="7:4" property="RW"/>
				<Member name="phy_ck_fsl" description="CK falling slew rate control bit." range="3:0" property="RW"/>
				<Register offset="0x874"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG24" description="DDRC_PHY_REG24 is DDRPHY register 24." value="0x00000003" startoffset="0x878">
				<Member name="reserved" description="Reserved." range="31:2" property="RO"/>
				<Member name="phy_ckpu_msb" description="CK pull up driver strength control bit, MSB." range="1" property="RW"/>
				<Member name="phy_ckpd_msb" description="CK pull down driver strength control bit, MSB." range="0" property="RW"/>
				<Register offset="0x878"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG25" description="DDRC_PHY_REG25 is DDRPHY register 25." value="0x00000088" startoffset="0x880">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_dqpu_str" description="DQ pull up driver strength control bit." range="7:4" property="RW"/>
				<Member name="phy_dqpd_str" description="DQ pull down driver strength control bit." range="3:0" property="RW"/>
				<Register offset="0x880"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG26" description="DDRC_PHY_REG26 is DDRPHY register 26." value="0x00000088" startoffset="0x884">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_dq_rsl" description="DQ rising slew rate control bit." range="7:4" property="RW"/>
				<Member name="phy_dq_fsl" description="DQ falling slew rate control bit." range="3:0" property="RW"/>
				<Register offset="0x884"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG27" description="DDRC_PHY_REG27 is DDRPHY register 27." value="0x00000024" startoffset="0x888">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_dqpu_odt" description="DQ pull up ODT control bit." range="5:3" property="RW"/>
				<Member name="phy_dqpd_odt" description="DQ pull down ODT control bit." range="2:0" property="RW"/>
				<Register offset="0x888"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG28" description="DDRC_PHY_REG28 is DDRPHY register 28." value="0x00000037" startoffset="0x88C">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_dqpd_msb" description="DQ pull down driver strength control bit, MSB." range="5" property="RW"/>
				<Member name="phy_dqpu_msb" description="DQ pull up driver strength control bit, MSB." range="4" property="RW"/>
				<Member name="phy_dqpu_en" description="DQ weak pull up control.&lt;br&gt;0: pull up&lt;br&gt;1: cut off" range="3" property="RW"/>
				<Member name="phy_dqpd_en" description="DQ weak pull down control.&lt;br&gt;1: pull down&lt;br&gt;0: cut off" range="2" property="RW"/>
				<Member name="phy_dqpu_odtmsb" description="DQ pull up ODT control bit, MSB." range="1" property="RW"/>
				<Member name="phy_dqpd_odtmsb" description="DQ pull down ODT control bit, MSB." range="0" property="RW"/>
				<Register offset="0x88C"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG29" description="DDRC_PHY_REG29 is DDRPHY register 29." value="0x0000002D" startoffset="0x9C0">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="reserved_nz1" description="Reserved. The initial value is nonzero." range="5" property="RW"/>
				<Member name="phy_dqssq_2xdly_h" description="High 8bit'DQS squelch 2xclk cycle delay select.&lt;br&gt;11: three cycle&lt;br&gt;10: two cycle&lt;br&gt;01: one cycle&lt;br&gt;00: no delay" range="4:3" property="RW"/>
				<Member name="reserved_nz0" description="Reserved. The initial value is nonzero." range="2" property="RW"/>
				<Member name="phy_dqssq_2xdly_l" description="Low 8 bit DQS squelch 2xclk cycle delay select.&lt;br&gt;11: three cycle&lt;br&gt;10: two cycle&lt;br&gt;01: one cycle&lt;br&gt;00: no delay" range="1:0" property="RW"/>
				<Register offset="0x9C0"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG30" description="DDRC_PHY_REG30 is DDRPHY register 30." value="0x00000024" startoffset="0xAC4">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_a1" description="A1 deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_a0" description="A0 deskew." range="2:0" property="RW"/>
				<Register offset="0xAC4"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG31" description="DDRC_PHY_REG31 is DDRPHY register 31." value="0x00000024" startoffset="0xAC8">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_a3" description="A3 deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_a2" description="A2 deskew." range="2:0" property="RW"/>
				<Register offset="0xAC8"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG32" description="DDRC_PHY_REG32 is DDRPHY register 32." value="0x00000024" startoffset="0xACC">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_a5" description="A5 deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_a4" description="A4 deskew." range="2:0" property="RW"/>
				<Register offset="0xACC"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG33" description="DDRC_PHY_REG33 is DDRPHY register 33." value="0x00000024" startoffset="0xAD0">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_a7" description="A7 deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_a6" description="A6 deskew." range="2:0" property="RW"/>
				<Register offset="0xAD0"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG34" description="DDRC_PHY_REG34 is DDRPHY register 34." value="0x00000024" startoffset="0xAD4">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_a9" description="A9 deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_a8" description="A8 deskew." range="2:0" property="RW"/>
				<Register offset="0xAD4"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG35" description="DDRC_PHY_REG35 is DDRPHY register 35." value="0x00000024" startoffset="0xAD8">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_a11" description="A11 deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_a10" description="A10 deskew." range="2:0" property="RW"/>
				<Register offset="0xAD8"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG36" description="DDRC_PHY_REG36 is DDRPHY register 36." value="0x00000024" startoffset="0xADC">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_a13" description="A13 deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_a12" description="A12 deskew." range="2:0" property="RW"/>
				<Register offset="0xADC"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG37" description="DDRC_PHY_REG37 is DDRPHY register 37." value="0x00000024" startoffset="0xAE0">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_b1" description="B1 deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_b0" description="B0 deskew." range="2:0" property="RW"/>
				<Register offset="0xAE0"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG38" description="DDRC_PHY_REG38 is DDRPHY register 38." value="0x00000024" startoffset="0xAE4">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_rasb" description="RASB deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_b2" description="B2 deskew." range="2:0" property="RW"/>
				<Register offset="0xAE4"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG39" description="DDRC_PHY_REG39 is DDRPHY register 39." value="0x00000024" startoffset="0xAE8">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_web" description="WEB deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_casb" description="CASB deskew." range="2:0" property="RW"/>
				<Register offset="0xAE8"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG40" description="DDRC_PHY_REG40 is DDRPHY register 40." value="0x00000024" startoffset="0xAEC">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_ckb1" description="CKB1 deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_ck1" description="CK1 deskew." range="2:0" property="RW"/>
				<Register offset="0xAEC"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG41" description="DDRC_PHY_REG41 is DDRPHY register 41." value="0x00000024" startoffset="0xAF0">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_cke" description="CKE deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_odt" description="ODT deskew." range="2:0" property="RW"/>
				<Register offset="0xAF0"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG42" description="DDRC_PHY_REG42 is DDRPHY register 42." value="0x00000004" startoffset="0xAF4">
				<Member name="reserved" description="Reserved." range="31:3" property="RO"/>
				<Member name="phy_skew_rstn" description="RESETN deskew." range="2:0" property="RW"/>
				<Register offset="0xAF4"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG43" description="DDRC_PHY_REG43 is DDRPHY register 43." value="0x00000024" startoffset="0xAF8">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_txskew_dm1" description="DM1 deskew." range="5:3" property="RW"/>
				<Member name="phy_txskew_dm0" description="DM0 deskew." range="2:0" property="RW"/>
				<Register offset="0xAF8"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_TXDQSKEW" description="DDRC_PHY_TXDQSKEW is write direction data skew adjustment register." value="0x00000024" startoffset="0xAFC+0x4*dq_hf">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_txskew_dq_o" description="DQ[2xdq_hf+1] deskew." range="5:3" property="RW"/>
				<Member name="phy_txskew_dq_e" description="DQ[2xdq_hal] deskew." range="2:0" property="RW"/>
				<Register offset="0xafc"/>
				<Register offset="0xb00"/>
				<Register offset="0xb04"/>
				<Register offset="0xb08"/>
				<Register offset="0xb0c"/>
				<Register offset="0xb10"/>
				<Register offset="0xb14"/>
				<Register offset="0xb18"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG52" description="DDRC_PHY_REG52 is DDRPHY register 52." value="0x00000024" startoffset="0xB1C">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_txskew_dqs1" description="DQS1 deskew." range="5:3" property="RW"/>
				<Member name="phy_txskew_dqs0" description="DQS0 deskew." range="2:0" property="RW"/>
				<Register offset="0xB1C"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG53" description="DDRC_PHY_REG53 is DDRPHY register 53." value="0x00000004" startoffset="0xB20">
				<Member name="reserved" description="Reserved." range="31:3" property="RO"/>
				<Member name="phy_skew_a14" description="A14 deskew." range="2:0" property="RW"/>
				<Register offset="0xB20"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG54" description="DDRC_PHY_REG54 is DDRPHY register 54." value="0x00000024" startoffset="0xB24">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_skew_ckb0" description="CKB0 deskew." range="5:3" property="RW"/>
				<Member name="phy_skew_ck0" description="CK0 deskew." range="2:0" property="RW"/>
				<Register offset="0xB24"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG55" description="DDRC_PHY_REG55 is DDRPHY register 55." value="0x00000024" startoffset="0xB28">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_rxskew_dm1" description="DM1 rx deskew." range="5:3" property="RW"/>
				<Member name="phy_rxskew_dm0" description="DM0 rx deskew." range="2:0" property="RW"/>
				<Register offset="0xB28"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_RXDQSKEW" description="DDRC_PHY_RXDQSKEW is write direction data skew adjustment register." value="0x00000024" startoffset="0xB2C+0x4*dq_hf">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_rxskew_dq_o" description="DQ[2xdq_hf+1] rx deskew." range="5:3" property="RW"/>
				<Member name="phy_rxskew_dq_e" description="DQ[2xdq_hal] rx deskew." range="2:0" property="RW"/>
				<Register offset="0xb2c"/>
				<Register offset="0xb30"/>
				<Register offset="0xb34"/>
				<Register offset="0xb38"/>
				<Register offset="0xb3c"/>
				<Register offset="0xb40"/>
				<Register offset="0xb44"/>
				<Register offset="0xb48"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG5E" description="DDRC_PHY_REG5E is DDRPHY register 5E." value="0x00000024" startoffset="0xB4C">
				<Member name="reserved" description="Reserved." range="31:6" property="RO"/>
				<Member name="phy_rxskew_dqs1" description="DQS1 rx deskew." range="5:3" property="RW"/>
				<Member name="phy_rxskew_dqs0" description="DQS0 rx deskew." range="2:0" property="RW"/>
				<Register offset="0xB4C"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG60" description="DDRC_PHY_REG60 is DDRPHY register 60." value="0x00000000" startoffset="0xBE0+0x4*blanes">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="phy_cal_dllsel" description="Byte calibration:dll configure for [blanes]." range="7:5" property="RO"/>
				<Member name="phy_cal_ophsel" description="Byte calibration:ophsel configure for [blanes]." range="4:3" property="RO"/>
				<Member name="phy_cal_cycsel" description="Byte calibration: cycsel configure for [blanes]." range="2:0" property="RO"/>
				<Register offset="0xbe0"/>
				<Register offset="0xbe4"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG61" description="DDRC_PHY_REG61 is DDRPHY register 61." value="0x00000000" startoffset="0xBE8">
				<Member name="reserved" description="Reserved." range="31:2" property="RO"/>
				<Member name="phy_cal_done_h" description="High 8bit calibration done signal." range="1" property="RO"/>
				<Member name="phy_cal_done_l" description="Low 8bit calibration done signal." range="0" property="RO"/>
				<Register offset="0xBE8"/>
			</RegisterGroup>
			<RegisterGroup name="DDRC_PHY_REG62" description="DDRC_PHY_REG62 is DDRPHY register 62." value="0x00000000" startoffset="0xBC4">
				<Member name="reserved" description="Reserved." range="31:2" property="RO"/>
				<Member name="phy_idqe_h" description="High 8-bit dqs gate sample dqs value (idqs)." range="1" property="RO"/>
				<Member name="phy_idqs_l" description="Low 8-bit dqs gate sample dqs value (idqs)." range="0" property="RO"/>
				<Register offset="0xBC4"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="EMMC" i2cSupport="false">
			<Module baseAddress="0x601C0000"/>
			<RegisterGroup name="MMC_CTRL" description="MMC_CTRL is an MMC control register." value="0x01000000" startoffset="0x0000">
				<Member name="reserved" description="Reserved." range="31:26" property="-"/>
				<Member name="use_internal_dmac" description="Whether to transfer data by using the IDMAC.&lt;br&gt;0: The CPU transfers data by using the slave interface.&lt;br&gt;1: The CPU transfers data by using the IDMAC." range="25" property="RW"/>
				<Member name="enable_od_pullup" description="External open-drain pull-up.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;This value is inverted internally, and then transmitted to the SDIO_CCMD_ODPULLUP_EN_N pin." range="24" property="RW"/>
				<Member name="reserved" description="Reserved." range="23:9" property="-"/>
				<Member name="abort_read_data" description="Whether to abort the data transfer during data read.&lt;br&gt;0: invalid&lt;br&gt;1: After transmitting a suspend command during data read, the software polls the card to check when suspend occurs.&lt;br&gt;After the suspend occurs, the software sets the bit to 1. This enables the data transfer state machine to be restored to idle state for the next block transfer.&lt;br&gt;After the state machine restores to the idle status, this bit is cleared automatically." range="8" property="RW"/>
				<Member name="send_irq_response" description="Transmit interrupt response control.&lt;br&gt;0: invalid&lt;br&gt;1: An interrupt request (IRQ) response is transmitted automatically.&lt;br&gt;After the response is transmitted, this bit is cleared automatically.&lt;br&gt;To wait for the interrupt generated by the MMC controller, the host transmits the CMD40 command and waits for the interrupt response from the MMC controller. If you do not want the host to keep in the interrupt wait state, set this bit to 1, and transmit the CMD40 command to restore to the idle state." range="7" property="RW"/>
				<Member name="read_wait" description="Read wait control.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;This bit is valid only for the SDIO card that supports the read wait function." range="6" property="RW"/>
				<Member name="dma_enable" description="Reserved. The system uses the IDMAC." range="5" property="RW"/>
				<Member name="int_enable" description="Global interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;The interrupt output is valid only when this bit is valid and the interrupt source is enabled." range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="-"/>
				<Member name="dma_reset" description="Soft reset control for the IDMAC.&lt;br&gt;0: invalid&lt;br&gt;1: reset the internal DMA interface&lt;br&gt;This bit is automatically reset after two AHB clock cycles." range="2" property="RW"/>
				<Member name="fifo_reset" description="Soft reset control for the internal FIFO.&lt;br&gt;0: invalid&lt;br&gt;1: reset the FIFO pointer&lt;br&gt;This bit is reset automatically after the reset operation is complete." range="1" property="RW"/>
				<Member name="controller_reset" description="Soft reset control for the controller.&lt;br&gt;0: invalid&lt;br&gt;1: reset the MMC/SD/SDIO host module" range="0" property="RW"/>
				<Register offset="0x0000"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_PWREN" description="MMC_PWREN is a Power_en control register." value="0x00000000" startoffset="0x0004">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="power_enable" description="Power control.&lt;br&gt;0: power off&lt;br&gt;1: power on&lt;br&gt;This value is used to drive the SDIO_CARD_POWER_EN pin." range="0" property="RW"/>
				<Register offset="0x0004"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_CLKDIV" description="MMC_CLKDIV is a clock divider register that shows the ratio of the frequency of the moduleoutput clock to the frequency of the input clock. For example, if the module input clock is 40MHz and the register value is set to 1, the output clock is 20 MHz.&lt;br&gt;The clock divider is 2 x N. If the value of N is 0x0, it indicates no frequency division (2 x 0 =0); if the value of N is 0x1, the frequency is divided by 2; if the value of N is 0xFF, thefrequency is divided by 510." value="0x00000000" startoffset="0x0008">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="clk_divider0" description="Clock divider 0.&lt;br&gt;The clock divider is 2 x N. If the value of N is 0, it indicates no frequency division; if the value of N is 0x1, the frequency is divided by 2; if the value of N is 0xFF, the frequency is divided by 510." range="7:0" property="RW"/>
				<Register offset="0x0008"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_CLKSRC" description="MMC_CLKSRC is a clock source select register of the SD card." value="0x00000000" startoffset="0x000C">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="clk_source" description="This bit must be set to 0." range="0" property="RW"/>
				<Register offset="0x000C"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_CLKENA" description="MMC_CLKENA is a clock enable register." value="0x00000000" startoffset="0x0010">
				<Member name="reserved" description="Reserved." range="31:17" property="-"/>
				<Member name="cclk_low_power" description="Card low-power control for disabling the card clock.&lt;br&gt;0: non lower-power mode&lt;br&gt;1: low-power mode&lt;br&gt;When the card is idle, the card clock is disabled. This function is used only for the MMC and SD card, because the card clock of the SDIO card must be retained for detecting interrupts." range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:1" property="RW"/>
				<Member name="cclk_enable" description="Card clock enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x0010"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_TMOUT" description="MMC_TMOUT is a timeout register." value="0xFFFFFF40" startoffset="0x0014">
				<Member name="data_timeout" description="Timeout during the data transfer of the card, in the unit of the mmc_clk cycle of the card. The timeout is also the data starvation timeout of the CPU." range="31:8" property="RW"/>
				<Member name="response_timeout" description="Response timeout, in unit of the mmc_clk cycle of the card." range="7:0" property="RW"/>
				<Register offset="0x0014"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_CTYPE" description="MMC_CTYPE is a card type register." value="0x00000000" startoffset="0x0018">
				<Member name="reserved" description="Reserved." range="31:17" property="-"/>
				<Member name="card_width_0" description="Bus width of the card.&lt;br&gt;0: non-8-bit mode&lt;br&gt;1: 8-bit mode&lt;br&gt;The details are as follows:&lt;br&gt;If bit[16] is 1, the bus width of the card is set to 8-bit mode, and the value of bit[0] is ignored.&lt;br&gt;If bit[16] is 0, the bus width of the card is set to 1-bit mode or 4-bit mode. In this case, the bus width depends on the value of bit[0]." range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:1" property="RW"/>
				<Member name="card_width_1" description="Bus width of the card.&lt;br&gt;0: 1-bit mode&lt;br&gt;1: 4-bit mode" range="0" property="RW"/>
				<Register offset="0x0018"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_BLKSIZ" description="MMC_BLKSIZ is a block size configuration register." value="0x00000200" startoffset="0x001C">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="block_size" description="Block size. The initial size of each block is 512 bytes." range="15:0" property="RW"/>
				<Register offset="0x001C"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_BYTCNT" description="MMC_BYTCNT is a block transfer count register." value="0x00000200" startoffset="0x0020">
				<Member name="byte_count" description="Number of transferred bytes. The number must be an integral multiple of the block size.&lt;br&gt;If the data transfer is not block transfer, this register must be set to 0. In this case, the software needs to transmit a stop or an abort command to control the data transfer." range="31:0" property="RW"/>
				<Register offset="0x0020"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_INTMASK" description="MMC_INTMASK is an interrupt mask register." value="0x00000000" startoffset="0x0024">
				<Member name="reserved" description="Reserved." range="31:17" property="-"/>
				<Member name="sdio_int_mask" description="SDIO interrupt mask.&lt;br&gt;0: masked&lt;br&gt;1: not masked" range="16" property="RW"/>
				<Member name="int_mask" description="Interrupt mask.&lt;br&gt;0: masked&lt;br&gt;1: not masked&lt;br&gt;The definitions of bit[15:0] are as follows:&lt;br&gt;Bit[15]: end-bit error (read)/write no CRC (EBE)&lt;br&gt;Bit[14]: auto command done (ACD)&lt;br&gt;Bit[13]: start-bit error (SBE)&lt;br&gt;Bit[12]: hardware locked write error (HLE)&lt;br&gt;Bit[11]: FIFO underrun/overrun error (FRUN)&lt;br&gt;Bit[10]: data starvation-by-host timeout (HTO)&lt;br&gt;Bit[9]: data read timeout (DTO)&lt;br&gt;Bit[8]: response timeout (RTO)&lt;br&gt;Bit[7]: data CRC error (DCRC)&lt;br&gt;Bit[6]: response CRC error (RCRC)&lt;br&gt;Bit[5]: receive FIFO data request (RXDR)&lt;br&gt;Bit[4]: transmit FIFO data request (TXDR)&lt;br&gt;Bit[3]: data transfer over (DTO)&lt;br&gt;Bit[2]: command done (CD)&lt;br&gt;Bit[1]: response error (RE)&lt;br&gt;Bit[0]: card detect (CD)" range="15:0" property="RW"/>
				<Register offset="0x0024"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_CMDARG" description="MMC_CMDARG is a command parameter register." value="0x00000000" startoffset="0x0028">
				<Member name="cmd_arg" description="Command parameter that is transferred to the card. The command parameter is related to the protocol, and each command corresponds to a command parameter." range="31:0" property="RW"/>
				<Register offset="0x0028"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_CMD" description="MMC_CMD is a command register." value="0x00000000" startoffset="0x002C">
				<Member name="start_cmd" description="Start control.&lt;br&gt;0: do not start&lt;br&gt;1: start a command. After the command is transferred to the card interface unit (CIU), this bit is cleared.&lt;br&gt;The CPU does not allow you to modify this register. Otherwise, an HLE interrupt is generated.&lt;br&gt;After transmitting a command, the CPU queries this bit, and transmits the next command when the value of this bit changes to 0." range="31" property="RW"/>
				<Member name="reserved" description="Reserved." range="30:28" property="-"/>
				<Member name="boot_mode" description="Boot mode.&lt;br&gt;0: boot mode&lt;br&gt;1: alternative boot mode" range="27" property="RW"/>
				<Member name="disable_boot" description="Boot disable.&lt;br&gt;If the software enables this bit and the Start_cmd bit at the same time, the controller aborts the boot operation.&lt;br&gt;The Enable_boot and Disable_boot bits cannot be enabled at the same time." range="26" property="RW"/>
				<Member name="expect_boot_ack" description="Boot response enable.&lt;br&gt;If the software enables this bit and the Enable_boot bit at the same time, the controller detects the boot response signal, that is, &quot;0-1-0&quot; sequence." range="25" property="RW"/>
				<Member name="enable_boot" description="Boot enable.&lt;br&gt;This bit is available when the boot mode is mandatory. If the software enables this bit and the Start_cmd bit, the controller pulls down the CMD signal to start the boot process.&lt;br&gt;The Enable_boot and Disable_boot bits cannot be enabled at the same time." range="24" property="RW"/>
				<Member name="reserved" description="Reserved." range="23:22" property="-"/>
				<Member name="update_clock_registes_only" description="Automatic update.&lt;br&gt;0: The normal command sequence is used. That is, the values of MMC_CMD, MMC_CMDARG, MMC_TMOUT, MMC_CTYPE, MMC_BLKSIZ, and MMC_BYTCNT are transferred from the BIU to the CIU. The CIU uses the new values of registers when running new commands.&lt;br&gt;1: No command is transmitted, and only the clock register values in the card clock domain are updated. The values of MMC_CLKDIV, MMC_CLKSRC, and MMC_CLKENA are transferred to the card clock domain.&lt;br&gt;The card clock can be changed (frequency change and clock enable) even no command is transmitted.&lt;br&gt;Each time the card clock is changed, this bit needs to be set to 1. In this case, no command is transmitted to the card, and no CD interrupt is generated." range="21" property="RW"/>
				<Member name="card_number" description="Sequence number of the card that is being used." range="20:16" property="RW"/>
				<Member name="send_initialization" description="Whether to transmit the initialization sequence.&lt;br&gt;0: do not transmit the initialization sequence before transmitting the Send_initialization command (high level in 80 clock cycles)&lt;br&gt;1: transmit the initialization sequence before transmitting the Send_initialization command&lt;br&gt;When a card is powered on, the initialization sequence must be transmitted first for initialization. That is, this bit needs to be set to 1." range="15" property="RW"/>
				<Member name="stop_abort_cmd" description="Whether to transmit the stop/abort command when data is being transferred in open-ended mode or in fixed length mode.&lt;br&gt;0: do not transmit the stop/abort command&lt;br&gt;1: transmit the stop/abort command for stopping the current data transfer" range="14" property="RW"/>
				<Member name="wait_prvdata_complete" description="Whether to transmit a command immediately.&lt;br&gt;0: transmit a command immediately even though the previous data transfer is not complete&lt;br&gt;1: transmit a command only when the previous data transfer is complete&lt;br&gt;The typical value is 0. If this bit is set to 0, the transfer status can be read during data transfer, and the interrupt transfer is supported." range="13" property="RW"/>
				<Member name="send_auto_stop" description="Whether to transmit the stop command.&lt;br&gt;0: do not transmit the stop command after data transfer&lt;br&gt;1: transmit the stop command after data transfer&lt;br&gt;In non-data transfer mode, this bit is ignored." range="12" property="RW"/>
				<Member name="transfer_mode" description="Transfer mode.&lt;br&gt;0: block transfer mode&lt;br&gt;1: stream transfer mode&lt;br&gt;In non-data transfer mode, this bit is ignored." range="11" property="RW"/>
				<Member name="read_write" description="Read/write control.&lt;br&gt;0: read data from the card&lt;br&gt;1: write data to the card&lt;br&gt;In non-data transfer mode, this bit is ignored." range="10" property="RW"/>
				<Member name="data_transfer_expected" description="Data transfer indicator.&lt;br&gt;0: No data is output from the card.&lt;br&gt;1: Data is output from the card." range="9" property="RW"/>
				<Member name="check_repsonse_crc_" description="Whether to perform the CRC check.&lt;br&gt;0: do not check the CRC response&lt;br&gt;1: check the CRC response&lt;br&gt;No valid CRC is returned when some commands are responded. To prevent the host from performing CRC, the software needs to disable this function based on related commands." range="8" property="RW"/>
				<Member name="response_length" description="Response length.&lt;br&gt;0: Short responses are output from the card&lt;br&gt;1: Long responses are output from the card&lt;br&gt;The length of a long response is 128 bits, whereas the length of a short response is 32 bits." range="7" property="RW"/>
				<Member name="response_expect" description="Whether to output response.&lt;br&gt;0: No response is output from the card.&lt;br&gt;1: Responses are output from the card." range="6" property="RW"/>
				<Member name="cmd_index" description="Command index." range="5:0" property="RW"/>
				<Register offset="0x002C"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_RESP0" description="MMC_RESP0 is response register 0." value="0x00000000" startoffset="0x0030">
				<Member name="response0" description="Bit[31:0] of a response." range="31:0" property="RO"/>
				<Register offset="0x0030"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_RESP1" description="MMC_RESP1 is response register 1." value="0x00000000" startoffset="0x0034">
				<Member name="response1" description="Bit[63:32] of a long response.&lt;br&gt;After the CIU transmits an auto-stop command, the corresponding response is stored in this register, and the response to the previous command is still stored in MMC_RESP0.&lt;br&gt;The auto-stop command is available only during data transfer, and the corresponding response is always a short response." range="31:0" property="RO"/>
				<Register offset="0x0034"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_RESP2" description="MMC_RESP2 is response register 2." value="0x00000000" startoffset="0x0038">
				<Member name="response2" description="Bit[95:64] of a long response." range="31:0" property="RO"/>
				<Register offset="0x0038"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_RESP3" description="MMC_RESP3 is response register 3." value="0x00000000" startoffset="0x003C">
				<Member name="response3" description="Bit[127:96] of a long response." range="31:0" property="RO"/>
				<Register offset="0x003C"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_MINTSTS" description="MMC_MINTSTS is a masked interrupt status register." value="0x00000000" startoffset="0x0040">
				<Member name="reserved" description="Reserved." range="31:17" property="-"/>
				<Member name="sdio_interrupt" description="SDIO interrupt mask status.&lt;br&gt;The SDIO interrupt is valid only when MMC_INTMASK [sdio_int_mask] is enabled.&lt;br&gt;0: No SDIO interrupt is output from the card.&lt;br&gt;1: An SDIO interrupt is output from the card." range="16" property="RO"/>
				<Member name="int_status" description="Status of each interrupt.&lt;br&gt;Bit[15]: end-bit error (read)/write no CRC (EBE)&lt;br&gt;Bit[14]: auto command done (ACD)&lt;br&gt;Bit[13]: start-bit error (SBE)&lt;br&gt;Bit[12]: hardware locked write error (HLE)&lt;br&gt;Bit[11]: FIFO underrun/overrun error (FRUN)&lt;br&gt;Bit[10]: data starvation by the host timeout (HTO)&lt;br&gt;Bit[9]: data read timeout (DTO)&lt;br&gt;Bit[8]: response timeout (RTO)&lt;br&gt;Bit[7]: data CRC error (DCRC)&lt;br&gt;Bit[6]: response CRC error (RCRC)&lt;br&gt;Bit[5]: receive FIFO data request (RXDR)&lt;br&gt;Bit[4]: transmit FIFO data request (TXDR)&lt;br&gt;Bit[3]: data transfer over (DTO)&lt;br&gt;Bit[2]: command done (CD)&lt;br&gt;Bit[1]: response error (RE)&lt;br&gt;Bit[0]: card detect (CD)" range="15:0" property="RO"/>
				<Register offset="0x0040"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_RINTSTS" description="MMC_RINTSTS is a raw interrupt status register." value="0x00000000" startoffset="0x0044">
				<Member name="reserved" description="Reserved." range="31:17" property="-"/>
				<Member name="sdio_interrupt" description="Raw SDIO interrupt status.&lt;br&gt;0: No SDIO interrupt is output from the card.&lt;br&gt;1: An SDIO interrupt is output from the card.&lt;br&gt;The value of the interrupt status bit is independent of the interrupt mask status." range="16" property="RW"/>
				<Member name="int_status" description="Raw status of each interrupt. Writing 1 clears the bits, and writing 0 has no effect. The value of the interrupt status bit is independent of the interrupt mask status.&lt;br&gt;Bit[15]: end-bit error (read)/write no CRC (EBE)&lt;br&gt;Bit[14]: auto command done (ACD)&lt;br&gt;Bit[13]: start-bit error (SBE)&lt;br&gt;Bit[12]: hardware locked write error (HLE)&lt;br&gt;Bit[11]: FIFO underrun/overrun error (FRUN)&lt;br&gt;Bit[10]: data starvation by the host timeout (HTO)&lt;br&gt;Bit[9]: data read timeout (DRTO)/boot data start (BDS)&lt;br&gt;Bit[8]: response timeout (RTO)/boot ACK received (BAR)&lt;br&gt;Bit[7]: data CRC error (DCRC)&lt;br&gt;Bit[6]: response CRC error (RCRC)&lt;br&gt;Bit[5]: receive FIFO data request (RXDR)&lt;br&gt;Bit[4]: transmit FIFO data request (TXDR)&lt;br&gt;Bit[3]: data transfer over (DTO)&lt;br&gt;Bit[2]: command done (CD)&lt;br&gt;Bit[1]: response error (RE)&lt;br&gt;Bit[0]: card detect (CD)" range="15:0" property="RW"/>
				<Register offset="0x0044"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_STATUS" description="MMC_STATUS is a status register." value="0x00000006" startoffset="0x0048">
				<Member name="reserved" description="Reserved." range="31:30" property="-"/>
				<Member name="fifo_count" description="FIFO count." range="29:17" property="RO"/>
				<Member name="response_index" description="Sequence number of the previous response, including the response to the auto-stop command." range="16:11" property="RO"/>
				<Member name="data_state_mc_busy" description="0: The data transmit/receive state machine is idle.&lt;br&gt;1: The data transmit/receive state machine is busy." range="10" property="RO"/>
				<Member name="data_busy" description="0: idle&lt;br&gt;1: busy" range="9" property="RO"/>
				<Member name="data_3_status" description="0: There is no card.&lt;br&gt;1: There is a card." range="8" property="RO"/>
				<Member name="commandfsm_states" description="Status of the command state machine.&lt;br&gt;0x0: idle&lt;br&gt;0x1: send initialization sequence&lt;br&gt;0x2: Tx CMD start bit&lt;br&gt;0x3: Tx CMD tx bit&lt;br&gt;0x4: Tx CMD index+arg&lt;br&gt;0x5: Tx CMD crc7&lt;br&gt;0x6: Tx CMD end bit&lt;br&gt;0x7: Rx resp start bit&lt;br&gt;0x8: Rx resp IRQ response&lt;br&gt;0x9: Rx resp tx bit&lt;br&gt;0xA: Rx resp CMD idx&lt;br&gt;0xB: Rx resp data&lt;br&gt;0xC: Rx resp crc7&lt;br&gt;0xD: Rx resp end bit&lt;br&gt;0xE: CMD path wait NCC&lt;br&gt;0xF: wait, CMD-to-response turnaround" range="7:4" property="RO"/>
				<Member name="fifo_full" description="FIFO full flag.&lt;br&gt;0: empty&lt;br&gt;1: full" range="3" property="RO"/>
				<Member name="fifo_empty" description="FIFO empty flag.&lt;br&gt;0: not empty&lt;br&gt;1: empty" range="2" property="RO"/>
				<Member name="fifo_tx_watermark" description="Whether the FIFO reaches the transmit watermark level.&lt;br&gt;0: no&lt;br&gt;1: yes" range="1" property="RO"/>
				<Member name="fifo_rx_watermark" description="Whether the FIFO reaches the receive watermark level.&lt;br&gt;0: no&lt;br&gt;1: yes" range="0" property="RO"/>
				<Register offset="0x0048"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_FIFOTH" description="MMC_FIFOTH is a FIFO threshold register." value="0x00FF0000" startoffset="0x004C">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="rx_wmark" description="FIFO threshold watermark level during data read. If the data amount in the FIFO is above the threshold, a DMA request is enabled. After a data transfer, a DMA request is raised for transferring the remaining data no matter whether the threshold is reached.&lt;br&gt;In non-DMA mode, the RXDR interrupt is enabled. If the data amount in the FIFO is not above the threshold after a data transfer, no interrupt is generated. In this case, the software needs to read the remaining data by querying the DTD interrupt.&lt;br&gt;If a data transfer is complete in DMA mode, the DMA raises a single transfer request to read data until the DTD interrupt is generated even though the remaining data amount is below the threshold.&lt;br&gt;Restriction: RX_WMark ( FIFO_DEPTH – 2&lt;br&gt;Recommendation: A request is raised when the threshold is (FIFO_DEPTH/2) – 1." range="27:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:12" property="RW"/>
				<Member name="tx_wmark" description="FIFO threshold watermark level during data transmittal. If the data amount in the FIFO is below the threshold, a DMA request is enabled. After a data transfer, a DMA request is raised for transferring the remaining data no matter whether the threshold is reached.&lt;br&gt;In non-DMA mode, the RXDR interrupt is enabled. If the data amount in the FIFO is not above the threshold after a data transfer, no interrupt is generated. In this case, the software needs to read the remaining data by querying the DTD interrupt.&lt;br&gt;If a data transfer is complete in DMA mode, the DMA raises a single transfer request to read data until the DTD interrupt is generated even though the remaining data amount is below the threshold.&lt;br&gt;Restriction: TX_WMark ( FIFO_DEPTH – 2&lt;br&gt;Recommendation: A request is raised when the value of [(FIFO_DEPTH/2) – 1] is above the threshold." range="11:0" property="RW"/>
				<Register offset="0x004C"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_CDETECT" description="MMC_CDETECT is a card detection register." value="0x00000001" startoffset="0x0050">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="card_detect_n" description="Card detection signal.&lt;br&gt;The value depends on the SDIO_CARD_DETECT pin." range="0" property="RO"/>
				<Register offset="0x0050"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_WRTPRT" description="MMC_WRTPRT is a card write protection register." value="0x00000000" startoffset="0x0054">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="write_protect" description="Card write protection signal.&lt;br&gt;The value depends on the SDIO_CWPR pin." range="0" property="RO"/>
				<Register offset="0x0054"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_TCBCNT" description="MMC_TCBCNT is a count of bytes transmitted to the card register." value="0x00000000" startoffset="0x005C">
				<Member name="trans_card_byte_count" description="Count of bytes transmitted from the CIU to the card.&lt;br&gt;When this register is accessed through a 32-bit AHB, the 32-bit data needs to be read at a time. This avoids the read-coherency error." range="31:0" property="RO"/>
				<Register offset="0x005C"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_TBBCNT" description="MMC_TBBCNT is a count of bytes transmitted from the BIU FIFO register." value="0x00000000" startoffset="0x0060">
				<Member name="trans_fifo_byte_count" description="Count of bytes transferred between the CPU/DMA and BIU FIFO.&lt;br&gt;When this register is accessed through a 32-bit AHB, the 32-bit data needs to be read at a time. This avoids the read-coherency error." range="31:0" property="RO"/>
				<Register offset="0x0060"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_BMOD" description="MMC_BMOD is a bus mode register." value="0x00000000" startoffset="0x0080">
				<Member name="reserved" description="Reserved." range="31:11" property="-"/>
				<Member name="pbl" description="Length of the IDMAC burst transfer.&lt;br&gt;000: 1 transfer&lt;br&gt;001: 4 transfers&lt;br&gt;010: 8 transfers&lt;br&gt;011: 16 transfers&lt;br&gt;1xx: reserved." range="10:8" property="RW"/>
				<Member name="de" description="IDMAC enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="7" property="RW"/>
				<Member name="dsl" description="Span between two descriptors, that is, number of words between two non-linked descriptors. This field is valid only for the dual-buffer descriptors." range="6:2" property="RW"/>
				<Member name="fb" description="Fixed burst length type.&lt;br&gt;0: single and INCR burst types&lt;br&gt;1: single, INCR4, INCR8, and INCR16 burst types" range="1" property="RW"/>
				<Member name="swr" description="Soft reset control for the internal register of the IDMAC.&lt;br&gt;0: not reset&lt;br&gt;1: reset&lt;br&gt;After reset, this bit is automatically cleared one clock cycle later." range="0" property="RW"/>
				<Register offset="0x0080"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_PLDMND" description="MMC_PLDMND is poll demand register." value="0x00000000" startoffset="0x0084">
				<Member name="pd" description="If DES0[OWN] is 0, the IDMAC enters the suspend state. The CPU can write any value to this register to enable the IDMAC to obtain descriptors again." range="31:0" property="WO"/>
				<Register offset="0x0084"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_DBADDR" description="MMC_DBADDR is a base address register of the descriptor linked list." value="0x00000000" startoffset="0x0088">
				<Member name="sdl" description="Start address of the descriptor linked list, that is, the base address of the first descriptor." range="31:0" property="RW"/>
				<Register offset="0x0088"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_IDSTS" description="MMC_IDSTS is an IDMAC status register." value="0x00000000" startoffset="0x008C">
				<Member name="reserved" description="Reserved." range="31:17" property="-"/>
				<Member name="fsm" description="Current state of the IDMAC state machine.&lt;br&gt;0x0: DMA_IDLE&lt;br&gt;0x1: DMA_SUSPEND&lt;br&gt;0x2: DESC_RD&lt;br&gt;0x3: DESC_CHK&lt;br&gt;0x4: DMA_RD_REQ_WAIT&lt;br&gt;0x5: DMA_WR_REQ_WAIT&lt;br&gt;0x6: DMA_RD&lt;br&gt;0x7: DMA_WR&lt;br&gt;0x8: DESC_CLOSE&lt;br&gt;Other values: reserved&lt;br&gt;This bit is read-only." range="16:13" property="RO"/>
				<Member name="eb" description="Bus error type.&lt;br&gt;001: The transmit operation is aborted.&lt;br&gt;010: The receive operation is aborted.&lt;br&gt;Other values: reserved" range="12:10" property="RW"/>
				<Member name="ais" description="Abnormal total interrupt. The value of this bit is obtained after the values of FBE, DE, and CES bits are ORed. Writing 1 clears this bit." range="9" property="RW"/>
				<Member name="nis" description="Normal total interrupt. The value of this bit is obtained after the values of the TI and RI bits are ORed. Writing 1 clears this bit." range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:6" property="-"/>
				<Member name="ces" description="Card error indicator. This bit indicates the card status when data is being received." range="5" property="RW"/>
				<Member name="du" description="Descriptor invalid interrupt. When DES0[OWN] is 0, this bit is set to 1. Writing 1 clears this bit." range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="-"/>
				<Member name="fbe" description="Fatal bus error interrupt. If this bit is set to 1, the IDMAC stops all accesses through the bus. Writing 1 clears this bit." range="2" property="RW"/>
				<Member name="ri" description="Receive done interrupt. This bit indicates that the data for a descriptor is received. Writing 1 clears this bit." range="1" property="RW"/>
				<Member name="ti" description="Transmit done interrupt. This bit indicates that a descriptor finishes transmitting data. Writing 1 clears this bit." range="0" property="RW"/>
				<Register offset="0x008C"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_IDINTEN" description="MMC_IDINTEN is an IDMAC interrupt enable register." value="0x00000000" startoffset="0x0090">
				<Member name="reserved" description="Reserved." range="31:10" property="-"/>
				<Member name="ai" description="Abnormal interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: The FBE/DU/CES interrupts are enabled." range="9" property="RW"/>
				<Member name="ni" description="Normal interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: The TI/RI interrupts are enabled." range="8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:6" property="-"/>
				<Member name="ces" description="Card error interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="5" property="RW"/>
				<Member name="du" description="Descriptor invalid interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="-"/>
				<Member name="fbe" description="Fatal bus error interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="2" property="RW"/>
				<Member name="ri" description="Receive interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="1" property="RW"/>
				<Member name="ti" description="Transmit interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x0090"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_DSCADDR" description="MMC_DSCADDR is an address register of the current descriptor." value="0x00000000" startoffset="0x0094">
				<Member name="had" description="Descriptor pointer. The value is automatically refreshed during data transfer. The register points to the start address of the descriptor that will be used by the IDMAC." range="31:0" property="RO"/>
				<Register offset="0x0094"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_BUFADDR" description="MMC_BUFADDR is an address register of the current data buffer." value="0x00000000" startoffset="0x0098">
				<Member name="hba" description="Data buffer pointer. The value is automatically refreshed during data transfer. The register points to the start address of the data buffer that is being used by the IDMAC." range="31:0" property="RO"/>
				<Register offset="0x0098"/>
			</RegisterGroup>
			<RegisterGroup name="MMC_DATA" description="MMC_DATA is a data register for storing the FIFO entrance address. Before the FIFO is reador written, MMC_STATUS[fifo_count] must be read to query the remaining space of theFIFO. This confirms the data bytes to be read or written based on the remaining space. Inthis way, FIFO overflow is avoided." value="0x00000000" startoffset="0x0100">
				<Member name="data" description="Address for reading/writing to the FIFO. If the address ranges from 0x100 to 0x100+FIFO_DEPTH, the FIFO is selected." range="31:0" property="RW"/>
				<Register offset="0x0100"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="NANDC" i2cSupport="false">
			<Module baseAddress="0x60010000"/>
			<RegisterGroup name="NFC_CON" description="NFC_CON is a NANDC configuration register." value="0x00000180" startoffset="0x0000">
				<Member name="reserved" description="Reserved." range="31:12" property="-"/>
				<Member name="ecc_type" description="ECC mode select.&lt;br&gt;000: non-ECC mode&lt;br&gt;001: 1-bit mode&lt;br&gt;010: 4-bit mode&lt;br&gt;011: reserved&lt;br&gt;100: 24-bit mode for 1 KB&lt;br&gt;101: 40-bit mode&lt;br&gt;110: 8-bit mode&lt;br&gt;111: reserved&lt;br&gt;The reset value depends on the NFC_ECC_TYPE pin." range="11:9" property="RW"/>
				<Member name="rb_sel" description="It is valid when multiple NAND flash devices (multiple CSs) are connected externally.&lt;br&gt;0: The NAND flash memories share a ready/busy signal.&lt;br&gt;1: The NAND flash memories use their own ready/busy signals.&lt;br&gt;When only one NAND flash is connected, only cs0 and ready/busy 0 are used." range="8" property="RW"/>
				<Member name="cs_ctrl" description="CS control.&lt;br&gt;0: When the NAND flash is busy, the CS signal is fixed at 0.&lt;br&gt;1: When the NAND flash is busy, the CS signal to is set to 1.&lt;br&gt;This mode maps to the &quot;cs do not care&quot; mode of the NAND flash." range="7" property="RW"/>
				<Member name="reserved" description="Reserved." range="6:5" property="-"/>
				<Member name="bus_width" description="Data line width of the NAND flash.&lt;br&gt;0: 8 bits&lt;br&gt;1: 16 bits&lt;br&gt;The reset value depends on the pin NFC_BUS_WIDE." range="4" property="RW"/>
				<Member name="pagesize" description="Page size of the NAND flash.&lt;br&gt;000: 512 byte&lt;br&gt;001: 2 KB&lt;br&gt;010: 4 KB&lt;br&gt;011: 8 KB&lt;br&gt;100: 16 KB&lt;br&gt;101–111: reserved&lt;br&gt;The reset value depends on the pin NFC_PAGE_SIZE." range="3:1" property="RW"/>
				<Member name="op_mode" description="Operating mode of the NANDC.&lt;br&gt;0: boot mode&lt;br&gt;1: normal mode" range="0" property="RW"/>
				<Register offset="0x0000"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_PWIDTH" description="NFC_PWIDTH is a read/write pulse width configuration register." value="0x00000333" startoffset="0x0004">
				<Member name="reserved" description="Reserved." range="31:12" property="-"/>
				<Member name="rw_hcnt" description="High-level width of the read/write signal of the NAND flash.&lt;br&gt;0x0–0xF: 1–16 clock cycles." range="11:8" property="RW"/>
				<Member name="r_lcnt" description="Low-level width of the read signal of the NAND flash.&lt;br&gt;0x0–0xF: 1–16 clock cycles." range="7:4" property="RW"/>
				<Member name="w_lcnt" description="Low-level width of the write signal of the NAND flash.&lt;br&gt;0x0–0xF: 1–16 clock cycles." range="3:0" property="RW"/>
				<Register offset="0x0004"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_OPIDLE" description="NFC_OPIDLE is an operation interval configuration register." value="0x00FFFFFF" startoffset="0x0008">
				<Member name="reserved" description="Reserved." range="31:24" property="-"/>
				<Member name="frb_wait" description="When a number of cycles are delayed after a read/write command is sent, the ready signal is detected to check whether it becomes high. The number of delay cycles is frb_wait x 8." range="23:20" property="RW"/>
				<Member name="cmd1_wait" description="Number of wait cycles after command 1 is sent.&lt;br&gt;0x0–0xF: 1–16 clock cycles." range="19:16" property="RW"/>
				<Member name="addr_wait" description="Number of wait cycles after the address is sent.&lt;br&gt;The number of delay cycles is addr_wait x 8." range="15:12" property="RW"/>
				<Member name="write_data_wait" description="Number of wait cycles after data is written.&lt;br&gt;0x0–0xF: 1–16 clock cycles." range="11:8" property="RW"/>
				<Member name="cmd2_wait" description="Number of wait cycles after command 2 is sent.&lt;br&gt;0x0–0xF: 1–16 clock cycles." range="7:4" property="RW"/>
				<Member name="frb_idle" description="A read signal can be sent only when a number of cycles are delayed after the ready signal of the NAND flash becomes high.&lt;br&gt;The number of delay cycles is frb_idle x 8." range="3:0" property="RW"/>
				<Register offset="0x0008"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_CMD" description="NFC_CMD is a command word configuration register." value="0x00703000" startoffset="0x000C">
				<Member name="reserved" description="Reserved." range="31:24" property="-"/>
				<Member name="read_status_cmd" description="Read status command word." range="23:16" property="RW"/>
				<Member name="cmd2" description="Command 2 that is sent to the NAND flash by the NANDC." range="15:8" property="RW"/>
				<Member name="cmd1" description="Command 1 that is sent to the NAND flash by the NANDC." range="7:0" property="RW"/>
				<Register offset="0x000C"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_ADDRL" description="NFC_ADDRL is a lower-bit address configuration register." value="0x00000000" startoffset="0x0010">
				<Member name="addr_l" description="Lower 32-bit address of the NAND flash." range="31:0" property="RW"/>
				<Register offset="0x0010"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_ADDRH" description="NFC_ADDRH is an upper-bit address configuration register." value="0x00000000" startoffset="0x0014">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="addr_h" description="Upper 16-bit address of the NAND flash." range="15:0" property="RW"/>
				<Register offset="0x0014"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_DATA_NUM" description="NFC_DATA_NUM is a read/written data count configuration register." value="0x00000840" startoffset="0x0018">
				<Member name="reserved" description="Reserved." range="31:12" property="-"/>
				<Member name="nfc_data_num" description="Number of data segments that are read and written randomly by the NANDC. The maximum value is 2368 bytes.&lt;br&gt;Note: This field is valid only when ecc_type is 00." range="11:0" property="RW"/>
				<Register offset="0x0018"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_OP" description="NFC_OP is an operation register." value="0x00000000" startoffset="0x001C">
				<Member name="reserved" description="Reserved." range="31:12" property="-"/>
				<Member name="address_cycles" description="Number of address cycles sent to the NAND flash." range="11:9" property="RW"/>
				<Member name="nf_cs" description="NAND flash CS signal select.&lt;br&gt;00: cs0&lt;br&gt;Other values: reserved" range="8:7" property="RW"/>
				<Member name="cmd1_en" description="Command 1 transmit enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="6" property="RW"/>
				<Member name="addr_en" description="NAND flash address write enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="5" property="RW"/>
				<Member name="write_data_en" description="NAND flash data write enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;Note: read_data_en and write_data_en cannot be 1 at the same time." range="4" property="RW"/>
				<Member name="cmd2_en" description="Command 2 transmit enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="3" property="RW"/>
				<Member name="wait_ready_en" description="Wait ready/busy high enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="2" property="RW"/>
				<Member name="read_data_en" description="NAND flash data read enable by enabling the read status machine.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;Note: read_data_en and write_data_en cannot be 1 at the same time." range="1" property="RW"/>
				<Member name="read_status_en" description="When this bit is 1, the command 0x70 for reading the status is sent to the NAND flash and the status data is read from the NAND flash. After that, the returned data is written to the NFC_STATUS field of the NANDC status register instead of the internal buffer.&lt;br&gt;After the NAND flash is erased and programmed, the results need to be read to check whether the operations are successful. If this bit is enabled, the operations such as erasing and programming can be performed at a time, and the data indicating whether the operation is successful can be returned from the NAND flash. In this way, the CPU intervention is reduced.&lt;br&gt;Note: When read_data_en is 1, this bit is invalid.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x001C"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_STATUS" description="NFC_STATUS is a status register." value="0x0000001E" startoffset="0x0020">
				<Member name="ecc_num" description="Reserved." range="31:16" property="RO"/>
				<Member name="reserved" description="Reserved." range="15:13" property="-"/>
				<Member name="nf_status" description="Status data read from the NAND flash.&lt;br&gt;This field is valid only when both NFC_OP[read_status] and NFC_STATUS[nfc_ready] are 1." range="12:5" property="RO"/>
				<Member name="reserved" description="Reserved." range="4:2" property="-"/>
				<Member name="nf0_ready" description="Status of the ready/busy signal of the NAND flash corresponding to CS0.&lt;br&gt;This bit is valid when multiple flash memories are connected and they use their own ready/busy signals.&lt;br&gt;This is because multiple NAND flash memories share a ready/busy signal by default. The reset value of the bit is 0." range="1" property="RO"/>
				<Member name="nfc_ready" description="Status of the ready/busy signal of the NANDC.&lt;br&gt;0: The NANDC is working.&lt;br&gt;1: The operation is complete and the next command can be received.&lt;br&gt;When the NANDC is enabled by writing to NFC_OP, this bit is cleared automatically." range="0" property="RO"/>
				<Register offset="0x0020"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_INTEN" description="NFC_INTEN is an interrupt enable register." value="0x00000000" startoffset="0x0024">
				<Member name="reserved" description="Reserved." range="31:11" property="-"/>
				<Member name="dma_err_en" description="DMA transfer bus error interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="10" property="RW"/>
				<Member name="dma_done_en" description="DMA transfer completion interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="9" property="RW"/>
				<Member name="wr_lock_en" description="Lock address write error interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RW"/>
				<Member name="ahb_op_en" description="Flash memory read/write NANDC buffer error interrupt enable when the NANDC reads/writes data from/to the flash memory.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="7" property="RW"/>
				<Member name="err_invalid_en" description="Uncorrectable error interrupt.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="6" property="RW"/>
				<Member name="err_valid_en" description="Correctable error interrupt.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="5" property="RW"/>
				<Member name="reserved" description="Reserved." range="4:2" property="-"/>
				<Member name="cs0_done_en" description="CS 0 ready/busy signal going high interrupt.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="1" property="RW"/>
				<Member name="op_done_en" description="Current operation done interrupt status of the NANDC.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x0024"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_INTS" description="NFC_INTS is an interrupt status register." value="0x00000000" startoffset="0x0028">
				<Member name="reserved" description="Reserved." range="31:11" property="-"/>
				<Member name="dma_err" description="DMA transfer bus error interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="10" property="RO"/>
				<Member name="dma_done" description="DMA transfer completion interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="9" property="RO"/>
				<Member name="wr_lock" description="Interrupt status when the lock address is being written.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="8" property="RO"/>
				<Member name="ahb_op" description="Interrupt status when the CPU reads and writes the NANDC buffer in the process of reading/writing data from/to the flash by the NANDC.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="7" property="RO"/>
				<Member name="err_invalid" description="Uncorrectable error interrupt.&lt;br&gt;In 1-bit ECC mode, if errors occur in 1 or more bits of the checked 512-byte data, an interrupt is generated.&lt;br&gt;In 4-bit ECC mode, if errors occur in 8 or more bits of the checked 1024-byte data, an interrupt is generated.&lt;br&gt;In 8-bit ECC mode, if errors occur in 16 or more bits of the checked 1024-byte data, an interrupt is generated.&lt;br&gt;In 24-bit ECC mode, if errors occur in 24 or more bits of the checked 1024-byte data, an interrupt is generated.&lt;br&gt;In 40-bit ECC mode, if errors occur in 40 or more bits of the checked 1024-byte data, an interrupt is generated.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="6" property="RO"/>
				<Member name="err_valid" description="Correctable error interrupt.&lt;br&gt;In 1-bit ECC mode, if an error occurs in one bit of the checked 512-byte data, an interrupt is generated.&lt;br&gt;In 4-bit ECC mode, if errors occur in one to eight bits of the checked 1024-byte data, an interrupt is generated.&lt;br&gt;In 8-bit ECC mode, if errors occur in 1 to 16 bits of the checked 1024-byte data, an interrupt is generated.&lt;br&gt;In 24-bit ECC mode, if an error occurs in 1 to 24 bits of the checked 1024-byte data, an interrupt is generated.&lt;br&gt;In 40-bit ECC mode, if an error occurs in 1 to 40 bits of the checked 1024-byte data, an interrupt is generated.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="5" property="RO"/>
				<Member name="reserved" description="Reserved." range="4:1" property="RO"/>
				<Member name="op_done" description="Controller current operation done interrupt.&lt;br&gt;When the operation register is written, this bit is automatically cleared.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="0" property="RO"/>
				<Register offset="0x0028"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_INTCLR" description="NFC_INTCLR is an interrupt clear register." value="0x00000000" startoffset="0x002C">
				<Member name="reserved" description="Reserved." range="31:11" property="-"/>
				<Member name="dma_err_clr" description="Writing 1 clears the DMA transfer bus error interrupt." range="10" property="RO"/>
				<Member name="dma_done_clr" description="Writing 1 clears the dma_done interrupt." range="9" property="WO"/>
				<Member name="wr_lock_clr" description="Writing 1 clears the wr_lock interrupt." range="8" property="WO"/>
				<Member name="ahb_op_clr" description="Writing 1 clears the ahb_op interrupt." range="7" property="WO"/>
				<Member name="err_invalid_clr" description="Writing 1 clears the err_invalid interrupt." range="6" property="WO"/>
				<Member name="err_valid_clr" description="Writing 1 clears the err_invalid interrupt." range="5" property="WO"/>
				<Member name="reserved" description="Reserved." range="4:1" property="-"/>
				<Member name="op_done_clr" description="Writing 1 clear the op_done interrupt." range="0" property="WO"/>
				<Register offset="0x002C"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_LOCK" description="NFC_LOCK is a lock address configuration register." value="0x00000000" startoffset="0x0030">
				<Member name="reserved" description="Reserved." range="31:4" property="-"/>
				<Member name="lock_excmd_en" description="Protection address write-protection enable according to the extended write command (new commands may be added to new memories).&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="3" property="RW"/>
				<Member name="lock_en" description="Flash lock enable. When this control bit is 1, if the erased or programmed address is between the start lock address and the end lock address, the erasing and programming operations are invalid.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="2" property="RW"/>
				<Member name="global_lock_en" description="Flash global lock enable. When this bit is 1, the NAND flash cannot be erased or programmed.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="1" property="RW"/>
				<Member name="lock_down" description="NAND flash lock mode.&lt;br&gt;0: lock mode&lt;br&gt;1: lock-down mode. After the value 1 is written, this bit cannot be written any more. In addition, this bit can be cleared only when hardware is reset." range="0" property="RW"/>
				<Register offset="0x0030"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_LOCK_SA0" description="NFC_LOCK_SA0 is lock start address 0 configuration register." value="0x00000000" startoffset="0x0034">
				<Member name="reserved" description="Reserved." range="31:21" property="-"/>
				<Member name="flash_lock_cs" description="NAND flash lock CS select.&lt;br&gt;00: CS 0&lt;br&gt;Other values: reserved" range="20:19" property="RW"/>
				<Member name="flash_lock_addr0" description="Lock start address 0. The least significant bit (LSB) maps to the fifth row address of the NAND flash." range="18:0" property="RW"/>
				<Register offset="0x0034"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_LOCK_SA1" description="NFC_LOCK_SA1 is lock start address 1 configuration register." value="0x00000000" startoffset="0x0038">
				<Member name="reserved" description="Reserved." range="31:21" property="-"/>
				<Member name="flash_lock_cs" description="CS corresponding to lock start address 1.&lt;br&gt;00: CS 0&lt;br&gt;Other values: reserved" range="20:19" property="RW"/>
				<Member name="flash_lock_addr1" description="Lock start address 1. The LSB maps to the fifth row address of the NAND flash." range="18:0" property="RW"/>
				<Register offset="0x0038"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_LOCK_SA2" description="NFC_LOCK_SA2 is lock start address 2 configuration register." value="0x00000000" startoffset="0x003C">
				<Member name="reserved" description="Reserved." range="31:21" property="-"/>
				<Member name="flash_lock_cs" description="CS corresponding to lock start address 2.&lt;br&gt;00: CS 0&lt;br&gt;Other values: reserved" range="20:19" property="RW"/>
				<Member name="flash_lock_addr2" description="Lock start address 2. The LSB maps to the fifth row address of the NAND flash." range="18:0" property="RW"/>
				<Register offset="0x003C"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_LOCK_SA3" description="NFC_LOCK_SA3 is lock start address 3 configuration register." value="0x00000000" startoffset="0x0040">
				<Member name="reserved" description="Reserved." range="31:21" property="-"/>
				<Member name="flash_lock_cs" description="CS corresponding to lock start address 3.&lt;br&gt;00: CS 0&lt;br&gt;Other values: reserved" range="20:19" property="RW"/>
				<Member name="flash_lock_addr3" description="Lock start address 3. The LSB maps to the fifth row address of the NAND flash." range="18:0" property="RW"/>
				<Register offset="0x0040"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_LOCK_EA0" description="NFC_LOCK_EA0 is lock end address 0 configuration register." value="0x00000000" startoffset="0x0044">
				<Member name="reserved" description="Reserved." range="31:21" property="-"/>
				<Member name="flash_lock_cs" description="CS corresponding to lock end address 0.&lt;br&gt;00: CS 0&lt;br&gt;Other values: reserved" range="20:19" property="RW"/>
				<Member name="flash_lock_eaddr0" description="Lock end address 0. The LSB maps to the fifth row address of the NAND flash." range="18:0" property="RW"/>
				<Register offset="0x0044"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_LOCK_EA1" description="NFC_LOCK_EA1 is lock end address 1 configuration register." value="0x00000000" startoffset="0x0048">
				<Member name="reserved" description="Reserved." range="31:21" property="-"/>
				<Member name="flash_lock_cs" description="CS corresponding to lock end address 1.&lt;br&gt;00: CS 0&lt;br&gt;Other values: reserved" range="20:19" property="RW"/>
				<Member name="flash_lock_eaddr1" description="Lock end address 1. The LSB maps to the fifth row address of the NAND flash." range="18:0" property="RW"/>
				<Register offset="0x0048"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_LOCK_EA2" description="NFC_LOCK_EA2 is lock end address 2 configuration register." value="0x00000000" startoffset="0x004C">
				<Member name="reserved" description="Reserved." range="31:21" property="-"/>
				<Member name="flash_lock_cs" description="CS corresponding to lock end address 2.&lt;br&gt;00: CS 0&lt;br&gt;Other values: reserved" range="20:19" property="RW"/>
				<Member name="flash_lock_eaddr2" description="Lock end address 2. The LSB maps to the fifth row address of the NAND flash." range="18:0" property="RW"/>
				<Register offset="0x004C"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_LOCK_EA3" description="NFC_LOCK_EA3 is lock end address 3 configuration register." value="0x00000000" startoffset="0x0050">
				<Member name="reserved" description="Reserved." range="31:21" property="-"/>
				<Member name="flash_lock_cs" description="CS corresponding to lock end address 3.&lt;br&gt;NAND flash lock CS.&lt;br&gt;00: CS0.&lt;br&gt;Other values: reserved" range="20:19" property="RW"/>
				<Member name="flash_lock_eaddr3" description="Lock end address 3. The LSB maps to the fifth row address of the NAND flash." range="18:0" property="RW"/>
				<Register offset="0x0050"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_EXPCMD" description="NFC_EXPCMD is an extended page command register." value="0x00000000" startoffset="0x0054">
				<Member name="ex_pcmd3" description="Extended page write command 3 of the NAND flash." range="31:24" property="RW"/>
				<Member name="ex_pcmd2" description="Extended page write command 2 of the NAND flash." range="23:16" property="RW"/>
				<Member name="ex_pcmd1" description="Extended page write command 1 of the NAND flash." range="15:8" property="RW"/>
				<Member name="ex_pcmd0" description="Extended page write command 0 of the NAND flash." range="7:0" property="RW"/>
				<Register offset="0x0054"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_EXBCMD" description="NFC_EXPCMD is an extended block command register." value="0x00000000" startoffset="0x0058">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="ex_bcmd1" description="Extended block write command 1 of the NAND flash." range="15:8" property="RW"/>
				<Member name="ex_bcmd0" description="Extended block write command 0 of the NAND flash." range="7:0" property="RW"/>
				<Register offset="0x0058"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_ECC_TEST" description="NFC_ECC_TEST is an ECC test register." value="0x00000001" startoffset="0x005C">
				<Member name="err_num" description="When ecc_type is 001 (1 bit per 512 byte ECC mode), each pair of bits within 31 to 16] indicate the decoding result of one sector. The decoding result is defined as follows:&lt;br&gt;00: No error occurs.&lt;br&gt;01: An error occurs in 1-bit data.&lt;br&gt;10: No data error occurs but the saved check codes are incorrect.&lt;br&gt;11: Uncorrectable error (errors of two bits or more).&lt;br&gt;bit[17:16]: number of error bits in sector_0&lt;br&gt;bit[19:18]: number of error bits in sector_1&lt;br&gt;bit[21:20]: number of error bits in sector_2&lt;br&gt;bit[23:22]: number of error bits in sector_3&lt;br&gt;bit[25:24]: number of error bits in oob_0&lt;br&gt;bit[27:26]: number of error bits in oob_1&lt;br&gt;bit[29:28]: number of error bits in oob_2&lt;br&gt;bit[31:30]: number of error bits in oob_3&lt;br&gt;When ecc_type is 010 (4 bits per 512 bytes ECC mode), the following bits indicate the number of error bits in 1 KB data segment. When the following bits are all 1s, it indicates that the errors are uncorrectable.&lt;br&gt;bit[17:12]: number of error bits in the first 1 KB data block&lt;br&gt;bit[23:18]: number of error bits in the second 1 KB data block&lt;br&gt;When ecc_type is 110 (8-bit or 512-byte ECC mode), this bit indicates the number of error bits in each 1 KB data block. When the following bits are all 1s, it indicates that the errors are uncorrectable.&lt;br&gt;bit[17:12]: number of error bits in the second 1 KB data block&lt;br&gt;bit[23:18]: number of error bits in the first 1 KB data block&lt;br&gt;When ecc_type is 110 (24-bit or 1 KB ECC mode), the following bits indicate the number of error bits in 1 KB data block. When the following bits are all 1s, it indicates that the errors are uncorrectable.&lt;br&gt;bit[16:12]: number of error bits in the second 1 KB data block&lt;br&gt;bit[21:17]: number of error bits in the first 1 KB data block&lt;br&gt;When ecc_type is 110 (40-bit or 1K ECC mode), the following bits indicate the number of error bits in 1 KB data block. When the following bits are all 1s, it indicates that the errors are uncorrectable.&lt;br&gt;bit[17:12]: number of error bits in the second 1 KB data block&lt;br&gt;bit[23:18]: number of error bits in the first 1 KB data block" range="31:12" property="RO"/>
				<Member name="reserved" description="Reserved." range="11:8" property="-"/>
				<Member name="block_size" description="Bus width of the NAND flash during booting.&lt;br&gt;00: 64 pages&lt;br&gt;01: 128 pages&lt;br&gt;10: 256 pages&lt;br&gt;11: 512 pages&lt;br&gt;The reset value depends on the NFC_BLOCK_SIZE pin." range="7:6" property="RO"/>
				<Member name="addr_num" description="Number of addresses sent to the NAND flash by the NANDC during booting.&lt;br&gt;0: 4 address cycles&lt;br&gt;1: five address cycles&lt;br&gt;The reset value depends on the NFC_ADDR_NUM pin." range="5" property="RO"/>
				<Member name="bb_err" description="Boot failure due to bad blocks.&lt;br&gt;0: It is not a bad block, so it can boot.&lt;br&gt;1: It is a bad block and it cannot boot." range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="-"/>
				<Member name="ecc_mask" description="ECC function mask.&lt;br&gt;1: The ECC check and correction are disabled. The structure of the data read from or written to the NAND flash is still converted based on the format of ecc_type.&lt;br&gt;0: Whether the ECC check and correction are performed depends on the value of ecc_type." range="2" property="RW"/>
				<Member name="dec_only" description="Decoding only enable.&lt;br&gt;When 1 is written to this bit, ECC decoding is enabled, but the NAND flash is not read or written.&lt;br&gt;When the bit is read, the value 0 is returned." range="1" property="RW"/>
				<Member name="enc_only" description="Encoding only enable.&lt;br&gt;When 1 is written to this bit, ECC encoding is enabled, but the NAND flash is not read or written.&lt;br&gt;When the bit is read, the following values are returned:&lt;br&gt;1: The ECC encoding and decoding are complete.&lt;br&gt;0: The encoding and decoding are being performed." range="0" property="RW"/>
				<Register offset="0x005C"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_DMA_CTRL" description="NFC_DMA_CTRL is a DMA control register." value="0x00000070" startoffset="0x0060">
				<Member name="reserved" description="Reserved." range="31:12" property="-"/>
				<Member name="wr_cmd_disable" description="Whether to send the write command when data is written in DMA mode.&lt;br&gt;0: The NANDC initiates a complete timing for writing to the NAND flash.&lt;br&gt;1: The NANDC initiates a timing for writing data rather than command.&lt;br&gt;This register is valid only when the NAND flash is written in DMA mode." range="11" property="RW"/>
				<Member name="rw_nf_disable" description="Check whether data is transferred only between the DDR and the buffer when data is written in DMA mode.&lt;br&gt;0: The DMA operation and the read/write operation on the NAND flash are performed at the same time.&lt;br&gt;1 Data is transferred between the buffer and DDR, but the NAND flash is not read or written." range="10" property="RW"/>
				<Member name="dma_nf_cs" description="NAND flash CS select for operating the DMA.&lt;br&gt;00: CS0&lt;br&gt;01: CS1&lt;br&gt;10: CS2&lt;br&gt;11: CS3" range="9:8" property="RW"/>
				<Member name="dma_addr_num" description="Number of addresses.&lt;br&gt;0: five addresses&lt;br&gt;1: four addresses" range="7" property="RW"/>
				<Member name="burst16_en" description="Burst 16 enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="6" property="RW"/>
				<Member name="burst8_en" description="Burst 8 enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="5" property="RW"/>
				<Member name="burst4_en" description="Burst 4 enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3:2" property="-"/>
				<Member name="dma_wr_en" description="DMA read/write enable.&lt;br&gt;0: read&lt;br&gt;1: write" range="1" property="RW"/>
				<Member name="dma_start" description="DMA operation start.&lt;br&gt;When the value 1 is written to this bit, the DMA operations are started. The bit remains 1 until the DMA operations are complete. Writing 0 to this bit has no effect.&lt;br&gt;If the value 0 is returned after this bit is read, the DMA operations are complete." range="0" property="RW"/>
				<Register offset="0x0060"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_BADDR_D" description="NFC_BADDR_D is a base address register of the data transfer area in DMA mode." value="0x00000000" startoffset="0x0064">
				<Member name="base_addr_d" description="Base address of the DDR data area that stores the data to be read or written." range="31:0" property="RW"/>
				<Register offset="0x0064"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_BADDR_OOB" description="NFC_BADDR_OOB is a base address register of the OOB area in DMA mode." value="0x00000000" startoffset="0x0068">
				<Member name="base_addr_oob" description="Base address of OOB area that stores the data to be read." range="31:0" property="RW"/>
				<Register offset="0x0068"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_DMA_LEN" description="NFC_DMA_LEN is a transfer length register in DMA mode." value="0x00000000" startoffset="0x006C">
				<Member name="reserved" description="Reserved." range="31:29" property="RW"/>
				<Member name="len_oob" description="Length of the OOB area when the NAND flash is written in DMA mode. The long words must be 4-byte aligned. This field is valid only in ECC0 mode. In other modes, the OOB length is fixed." range="28:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:12" property="RW"/>
				<Member name="len_data" description="Length of the data to be read or written in DMA mode.&lt;br&gt;This field is valid only when rw_nf_disable is 1." range="11:0" property="RW"/>
				<Register offset="0x006C"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_OP_PARA" description="NF_OP_PARA is an operation parameter register." value="0x0000007F" startoffset="0x0070">
				<Member name="reserved" description="Reserved." range="31:6" property="-"/>
				<Member name="oob_ecc_en" description="ECC correction enable in OOB area.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;This field is valid only when data is read." range="5" property="RW"/>
				<Member name="data_ecc_en" description="ECC correction enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;This field is valid only when data is read." range="4" property="RW"/>
				<Member name="oob_edc_en" description="OOB area check enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;In programming mode, the function of generating the ECC code of the OOB area is enabled.&lt;br&gt;In data read mode, the check on the OOB area is enabled." range="3" property="RW"/>
				<Member name="data_edc_en" description="Check enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;In programming mode, the function of generating the ECC code is enabled.&lt;br&gt;In data read mode, the check is enabled." range="2" property="RW"/>
				<Member name="oob_rw_en" description="Read and write enable for the OOB area in the NAND flash.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="1" property="RW"/>
				<Member name="data_rw_en" description="Read/write enable for the data area in the NAND flash.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x0070"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_VERSION" description="NFC_VERSION is a version register of the NANDC." value="0x00000505" startoffset="0x0074">
				<Member name="reserved" description="Reserved" range="31:12" property="-"/>
				<Member name="version" description="Version number" range="11:0" property="RO"/>
				<Register offset="0x0074"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_BUF_BADDR" description="NFC_BUF_BADDR is a NANDC buffer base address register." value="0x00000000" startoffset="0x0078">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="buf_baddr_rd" description="Base address for reading the buffer in DMA mode when rw_nf_disable is 1." range="27:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:12" property="RW"/>
				<Member name="buf_baddr_wr" description="Base address for writing to the buffer in DMA mode when rw_nf_disable is 1." range="11:0" property="RW"/>
				<Register offset="0x0078"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_RD_LOGIC_ADDR" description="NFC_RD_LOGIC_ADDR is a logic address register for reading the NAND flash in DMAmode" value="0x00000000" startoffset="0x007C">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="rd_logic_addr" description="Start address (excluding the ECC code) for reading data. For example, if you want to read data from the bad block flag, you can set the field value to 2048 for the 2 KB page size, 4096 for the 4 KB page size, or 8192 for 8 KB page size. After data is read in DMA mode, the field value is automatically accumulated based on the value of the len_data field of NFC_DMA_LEN.&lt;br&gt;The rd_logic_addr field is valid only when data is read in DMA mode and the rw_nf_disable field of NFC_DMA_CTRL is 0." range="15:0" property="RW"/>
				<Register offset="0x007C"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_RD_LOGIC_LEN" description="NFC_RD_LOGIC_LEN is a logic length register for reading the NAND flash in DMA mode." value="0x00000000" startoffset="0x0080">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="rd_logic_len" description="Length (excluding the length of the ECC code) of the data read from the NAND flash in DMA mode. After data is read in DMA mode, the field value is returned to 0 automatically.&lt;br&gt;This register must be reconfigured when a DMA operation is started next time.&lt;br&gt;The rd_logic_len field is valid only when data is read in DMA mode and the rw_nf_disable field of NFC_DMA_CTRL is 0." range="15:0" property="RW"/>
				<Register offset="0x0080"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_SEGMENT_ID" description="NFC_SEGMENT_ID is the data segment ID register for reading and writing to the NANDflash in DMA mode." value="0x00000000" startoffset="0x0084">
				<Member name="reserved" description="Reserved." range="31:4" property="-"/>
				<Member name="seg_id" description="[segment_id,last_flag] indicates the number of times that the DMA writes to the NAND flash." range="3:1" property="RO"/>
				<Member name="last_flag" description="As the internal buffer stores only 2 KB data at a time, this bit indicates whether the last 2 KB data segment is transferred for the device whose page size is greater than 2 KB.&lt;br&gt;0: The current 2 KB data segment being read and written is not the last 2 KB data segment.&lt;br&gt;1: The last 2 KB data segment is being read and written." range="0" property="RW"/>
				<Register offset="0x0084"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_FIFO_EMPTY" description="NFC_FIFO_EMPTY is an internal FIFO status register." value="0x0000FFFF" startoffset="0x0090">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="empty_dbg" description="Empty status of the internal FIFO, for debugging only." range="15:0" property="RO"/>
				<Register offset="0x0090"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_BOOT_SET" description="NFC_BOOT_SET is a boot parameter configuration register." value="0x00000000" startoffset="0x0094">
				<Member name="rsv" description="Reserved." range="31:2" property="-"/>
				<Member name="addr_num" description="Number of addresses sent to the NAND flash by the NANDC during booting.&lt;br&gt;0: four address cycles&lt;br&gt;1: five address cycles&lt;br&gt;The reset value depends on the nfc_addr_num pin." range="2" property="RW"/>
				<Member name="block_size" description="Block size of the NAND flash during booting.&lt;br&gt;00: 64 pages&lt;br&gt;01: 128 pages&lt;br&gt;10:256 page&lt;br&gt;11:512 page&lt;br&gt;The reset value depends on the nfc_block_size pin." range="1:0" property="RW"/>
				<Register offset="0x0094"/>
			</RegisterGroup>
			<RegisterGroup name="NF_STATUS" description="NF_STATUS is a NAND flash status register." value="0x00000000" startoffset="0x0098">
				<Member name="reserved" description="Reserved." range="31:8" property="-"/>
				<Member name="status" description="Status data read from the NAND flash.&lt;br&gt;This field is valid when NFC_OP is written and the read_status_en field of NFC_OP is 1." range="7:0" property="RO"/>
				<Register offset="0x0098"/>
			</RegisterGroup>
			<RegisterGroup name="NF_LP_CTRL" description="NF_LP_CTRL is the NANDC low-power control register." value="0x00000000" startoffset="0x009C">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="clk_gate_en" description="Clock gating select&lt;br&gt;0: All clocks are enabled.&lt;br&gt;1: The unused clocks are disabled based on the values of ecc_type." range="0" property="RW"/>
				<Register offset="0x009C"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_ECC_REG0" description="NFC_ECC_REG0 is NAND flash error bit count register 0." value="0x00000000" startoffset="0x00A0">
				<Member name="reserved" description="Debugging register 0. It stores err_num." range="31:0" property="RW"/>
				<Register offset="0x00A0"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_ECC_REG1" description="NFC_ECC_REG1 is NAND flash error bit count register 1." value="0x00000000" startoffset="0x00A4">
				<Member name="reserved" description="Debugging register 1. It stores err_num." range="31:0" property="RW"/>
				<Register offset="0x00A4"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_ECC_REG2" description="NFC_ECC_REG2 is NAND flash error bit count register 2." value="0x00000000" startoffset="0x00A8">
				<Member name="reserved" description="Debugging register 2. It stores err_num." range="31:0" property="RW"/>
				<Register offset="0x00A8"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_ECC_REG3" description="NFC_ECC_REG3 is NAND flash error bit count register 3." value="0x00000000" startoffset="0x00AC">
				<Member name="reserved" description="Debugging register 3. It stores err_num." range="31:0" property="RW"/>
				<Register offset="0x00AC"/>
			</RegisterGroup>
			<RegisterGroup name="NF_RB_MODE" description="NF_RB_MODE is the ready_busy mode register of the NAND flash." value="0x00000000" startoffset="0x00B0">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="status" description="ready_busy mode register.&lt;br&gt;0: normal ready signal&lt;br&gt;1: enhanced clear NAND signal of Micron" range="0" property="RW"/>
				<Register offset="0x00B0"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_BADDR_D1" description="NFC_BADDR_D1 is base address register 1 of the data transfer area." value="0x00000000" startoffset="0x00B4">
				<Member name="base_addr_d1" description="Base address 1 of the DDR data area being written." range="31:0" property="RW"/>
				<Register offset="0x00B4"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_BADDR_D2" description="NFC_BADDR_D2 is base address register 2 of the data transfer area." value="0x00000000" startoffset="0x00B8">
				<Member name="base_addr_d2" description="Base address 2 of the DDR data area being written." range="31:0" property="RW"/>
				<Register offset="0x00B8"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_BADDR_D3" description="NFC_BADDR_D3 is base address register 3 of the data transfer area." value="0x00000000" startoffset="0x00BC">
				<Member name="base_addr_d3" description="Base address 3 of the DDR data area being written." range="31:0" property="RW"/>
				<Register offset="0x00BC"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_RANDOMIZER" description="NFC_RANDOMIZER is randomization function enable register of the NAND flash." value="0x00000000" startoffset="0x00C0">
				<Member name="reserved" description="Reserved." range="31:2" property="-"/>
				<Member name="randomizer_pad" description="The enable status of the randomizer when the hardware is started.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="1" property="RO"/>
				<Member name="randomizer_en" description="Randomizer function enable bit.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x00C0"/>
			</RegisterGroup>
			<RegisterGroup name="NFC_BOOT_CFG" description="NFC_BOOT_CFG is the boot configuration register of the NAND flash." value="0x00000000" startoffset="0x00C4">
				<Member name="reserved" description="Reserved." range="31:11" property="-"/>
				<Member name="bus_width_pad" description="Data line width of the NAND flash.&lt;br&gt;0: 8 bits&lt;br&gt;1: 16 bits&lt;br&gt;The reset value depends on the pin NFC_BUS_WIDE." range="10" property="RO"/>
				<Member name="addr_num_pad" description="Number of addresses.&lt;br&gt;0: 5 addresses&lt;br&gt;1: 4 addresses" range="9" property="RO"/>
				<Member name="block_size_pad" description="Bus width of the NAND flash during booting.&lt;br&gt;00: 64 pages&lt;br&gt;01: 128pages&lt;br&gt;10: 256 pages&lt;br&gt;11: 512 pages&lt;br&gt;The reset value depends on the NFC_BLOCK_SIZE pin." range="8:7" property="RO"/>
				<Member name="ecc_type_pad" description="ECC mode select.&lt;br&gt;000: non-ECC mode&lt;br&gt;001: 1-bit mode&lt;br&gt;010: 4-bit mode&lt;br&gt;011: reserved&lt;br&gt;100: 24-bit mode for 1 KB&lt;br&gt;101: 40-bit mode&lt;br&gt;110: 8-bit mode&lt;br&gt;111: reserved&lt;br&gt;The reset value depends on the pin NFC_ECC_TYPE." range="6:4" property="RO"/>
				<Member name="page_size_pad" description="Page size of the NAND flash.&lt;br&gt;000: 512 bytes&lt;br&gt;001: 2 KB&lt;br&gt;010: 4 KB&lt;br&gt;011: 8 KB&lt;br&gt;100: 16 KB&lt;br&gt;101–111: reserved&lt;br&gt;The reset value depends on the pin NFC_PAGE_SIZE." range="3:1" property="RO"/>
				<Member name="randomizer_pad" description="The enable status of the randomizer when the hardware is started.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RO"/>
				<Register offset="0x00C4"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="SFC" i2cSupport="false">
			<Module baseAddress="0x60020000"/>
			<RegisterGroup name="GLOBAL_CONFIG" description="GLOBAL_CONFIG is a global configuration register." value="0x00000000" startoffset="0x0100">
				<Member name="reserved" description="Reserved." range="31:5" property="RO"/>
				<Member name="reserved" description="Reserved. This bit must be set to 0." range="4:3" property="RW"/>
				<Member name="flash_addr_mode" description="SPI address mode&lt;br&gt;0: 3-byte address mode (default)&lt;br&gt;1: 4-byte address mode&lt;br&gt;The write operation is invalid when CMD.start is 1." range="2" property="RW"/>
				<Member name="wp_en" description="Enable hardware write protection. The WP pin is forcibly pulled down when the bit is set to 1.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="1" property="RW"/>
				<Member name="mode" description="SPI mode configuration&lt;br&gt;0: mode 0&lt;br&gt;1: mode 3" range="0" property="RW"/>
				<Register offset="0x0100"/>
			</RegisterGroup>
			<RegisterGroup name="TIMING" description="TIMNG is a timing configuration register." value="0x0000660F" startoffset="0x0110">
				<Member name="reserved" description="Reserved." range="31:15" property="RO"/>
				<Member name="tcsh" description="Set the CS hold time&lt;br&gt;000–111: n + 1 clock cycles (n = 0, 1, 2, …, or 7)" range="14:12" property="RW"/>
				<Member name="reserved" description="Reserved." range="11" property="RW"/>
				<Member name="tcss" description="Set the setup time of the CS.&lt;br&gt;000–111: n + 1 clock cycles (n = 0, 1, 2, …, or 7)" range="10:8" property="RW"/>
				<Member name="reserved" description="Reserved" range="7:4" property="RO"/>
				<Member name="tshsl" description="Indicates the deselect time of the CS. It is equal to the interval between two flash operations.&lt;br&gt;0000–1111: n + 2 clock cycles. (n = 0, 1, 2, …, or 15)" range="3:0" property="RW"/>
				<Register offset="0x0110"/>
			</RegisterGroup>
			<RegisterGroup name="INT_RAW_STATUS" description="INT_RAW_STATUS is an interrupt raw status register." value="0x00000000" startoffset="0x0120">
				<Member name="reserved" description="Reserved." range="31:2" property="RO"/>
				<Member name="dma_done_int_raw_status" description="Raw status of DMA operation done interrupt (not masked)&lt;br&gt;0: The operation is not complete.&lt;br&gt;1: The operation is complete." range="1" property="RO"/>
				<Member name="cmd_op_end_raw_status" description="Raw interrupt status of instruction operation end (not masked).&lt;br&gt;0: The operation is not complete.&lt;br&gt;1: The operation is complete." range="0" property="RO"/>
				<Register offset="0x0120"/>
			</RegisterGroup>
			<RegisterGroup name="INT_STATUS" description="INT_STATUS is a masked interrupt status register." value="0x00000000" startoffset="0x0124">
				<Member name="reserved" description="Reserved." range="31:2" property="RO"/>
				<Member name="dma_done_int_status" description="Raw status of DMA operation done interrupt (masked)&lt;br&gt;0: The operation is not complete.&lt;br&gt;1: The operation is complete." range="1" property="RO"/>
				<Member name="cmd_op_end_status" description="Interrupt status of instruction operation end (masked)&lt;br&gt;0: The operation is not complete.&lt;br&gt;1: The operation is complete." range="0" property="RO"/>
				<Register offset="0x0124"/>
			</RegisterGroup>
			<RegisterGroup name="INT_MASK" description="Namereserveddma_done_int_statuscmd_op_end_statusINT_MASKINT_MASK is an interrupt mask register.&lt;br&gt;Register NameINT_MASK14reserved0DescriptionReserved.&lt;br&gt;DMA operation done interrupt mask bit0: masked1: not maskedInstruction operation end interrupt mask bit0: masked1: not maskedINT_CLEARINT_CLEAR is an interrupt clear register.&lt;br&gt;Register NameINT_CLEAR14reserved0DescriptionReserved.&lt;br&gt;Reserved.&lt;br&gt;DMA done interrupt clear bit. Writing 1 to this bit clearsdma_done_status and dma_done_raw_status.&lt;br&gt;0: not cleared1: clearedAfter a clear operation is complete, this bit returns 0 automatically.&lt;br&gt;Instruction operation end interrupt clear bit. Writing 1 to this bitclears cmd_op_end_status and cmd_op_end_raw_status.&lt;br&gt;0: not cleared1: clearedAfter a clear operation is complete, this bit returns 0 automatically.&lt;br&gt;VERSIONVERSION is a version register.&lt;br&gt;Register NameVERSION14VERSION0" value="0x00000000" startoffset="0x0128">
				<Member name="reserved" description="Reserved." range="31:2" property="RO"/>
				<Member name="dma_done_int_mask" description="DMA operation done interrupt mask bit&lt;br&gt;0: masked&lt;br&gt;1: not masked" range="1" property="RW"/>
				<Member name="cmd_op_end_int_mask" description="Instruction operation end interrupt mask bit&lt;br&gt;0: masked&lt;br&gt;1: not masked" range="0" property="RW"/>
				<Register offset="0x0128"/>
			</RegisterGroup>
			<RegisterGroup name="INT_CLEAR" description="INT_CLEAR is an interrupt clear register." value="0x00000000" startoffset="0x012C">
				<Member name="reserved" description="Reserved." range="31:2" property="RO"/>
				<Member name="dma_done_int_clr" description="DMA done interrupt clear bit. Writing 1 to this bit clears dma_done_status and dma_done_raw_status.&lt;br&gt;0: not cleared&lt;br&gt;1: cleared&lt;br&gt;After a clear operation is complete, this bit returns 0 automatically." range="1" property="WO"/>
				<Member name="cmd_op_end_int_clr" description="Instruction operation end interrupt clear bit. Writing 1 to this bit clears cmd_op_end_status and cmd_op_end_raw_status.&lt;br&gt;0: not cleared&lt;br&gt;1: cleared&lt;br&gt;After a clear operation is complete, this bit returns 0 automatically." range="0" property="WO"/>
				<Register offset="0x012C"/>
			</RegisterGroup>
			<RegisterGroup name="VERSION" description="VERSION is a version register." value="0x00000350" startoffset="0x01F8">
				<Member name="version" description="SFC version number" range="31:0" property="RO"/>
				<Register offset="0x01F8"/>
			</RegisterGroup>
			<RegisterGroup name="VERSION_SEL" description="VERSION_SEL is a version selection register." value="0x00000001" startoffset="0x01FC">
				<Member name="reserved" description="Reserved." range="31:1" property="RO"/>
				<Member name="version_sel" description="New and earlier version register group indication signal&lt;br&gt;0: earlier version register group&lt;br&gt;1: new version register group" range="0" property="RO"/>
				<Register offset="0x01FC"/>
			</RegisterGroup>
			<RegisterGroup name="BUS_CONFIG1" description="BUS_CONFIG1 is the bus operation configuration register 1." value="0x80800300" startoffset="0x0200">
				<Member name="rd_enable" description="Bus read control. The value 0 is returned when the bus reads data.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="31" property="RW"/>
				<Member name="wr_enable" description="Bus write control. Ignore the bus write operation.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="30" property="RW"/>
				<Member name="wr_ins" description="Write instruction" range="29:22" property="RW"/>
				<Member name="wr_dummy_bytes" description="Dummy byte of the bus write operation &lt;br&gt;0: no dummy byte&lt;br&gt;1: 1 byte&lt;br&gt;2: 2 bytes&lt;br&gt;...&lt;br&gt;7: 7 bytes" range="21:19" property="RW"/>
				<Member name="wr_mem_if_type" description="Bus write operation specifies the type of the connected SPI flash interface.&lt;br&gt;000: standard SPI interface type&lt;br&gt;001: dual-Input/dual-Output SPI&lt;br&gt;010: dual-I/O SPI&lt;br&gt;011: full DIO SPI&lt;br&gt;100: reserved&lt;br&gt;101: quad-Input/Dual-Output SPI&lt;br&gt;110: quad-I/O SPI&lt;br&gt;111: full QIO SPI" range="18:16" property="RW"/>
				<Member name="rd_ins" description="Read instruction" range="15:8" property="RW"/>
				<Member name="rd_prefetch_cnt" description="Clock cycle for prefetching data when the flash memory is accessed at a variable data length through the bus.&lt;br&gt;00: not prefetched (default)&lt;br&gt;01: prefetch the data in one clock cycle&lt;br&gt;01: prefetch the data in two clock cycles&lt;br&gt;11: prefetch the data in three clock cycles" range="7:6" property="RW"/>
				<Member name="rd_dummy_bytes" description="Dummy byte of the bus read operation &lt;br&gt;0: no dummy byte&lt;br&gt;1: 1 byte&lt;br&gt;2: 2 bytes&lt;br&gt;...&lt;br&gt;7: 7 bytes" range="5:3" property="RW"/>
				<Member name="rd_mem_if_type" description="Bus read operation specifies the type of the connected SPI flash interface.&lt;br&gt;000: standard SPI interface type&lt;br&gt;001: dual-Input/Dual-Output SPI&lt;br&gt;010: dual-I/O SPI&lt;br&gt;011: full DIO SPI&lt;br&gt;100: reserved&lt;br&gt;101: quad-Input/Dual-Output SPI&lt;br&gt;110: quad-I/O SPI&lt;br&gt;111: full QIO SPI" range="2:0" property="RW"/>
				<Register offset="0x0200"/>
			</RegisterGroup>
			<RegisterGroup name="BUS_CONFIG2" description="BUS_CONFIG2 is the bus configuration register 2." value="0x00000000" startoffset="0x0204">
				<Member name="reserved" description="Reserved." range="31:3" property="RO"/>
				<Member name="reserved" description="Reserved. The value 0 must be written to this bit." range="2:0" property="RW"/>
				<Register offset="0x0204"/>
			</RegisterGroup>
			<RegisterGroup name="BUS_FLASH_SIZE" description="BUS_FLASH_SIZE is a bus mapping size register." value="0x00000909" startoffset="0x0210">
				<Member name="reserved" description="Reserved." range="31:12" property="RO"/>
				<Member name="flash_size_cs1" description="Capacity of the SPI flash connected to CS 1.&lt;br&gt;0000: 0000: No SPI flash is connected. &lt;br&gt;0001: 512 Kbits&lt;br&gt;0010: 1 Mbit&lt;br&gt;0011: 2 Mbits&lt;br&gt;0100: 4 Mbits&lt;br&gt;0101: 8 Mbits&lt;br&gt;0110: 16 Mbits&lt;br&gt;0111: 32 Mbits&lt;br&gt;1000: 64 Mbits&lt;br&gt;1001: 128 Mbits (default)&lt;br&gt;1010: 256 Mbits&lt;br&gt;1011: 512 Mbits&lt;br&gt;1100: 1 Gbit&lt;br&gt;1101: 2 Gbits&lt;br&gt;1110: 4 Gbits&lt;br&gt;1111: 8 Gbits" range="11:8" property="RW"/>
				<Member name="reserved" description="Reserved" range="7:0" property="RW"/>
				<Register offset="0x0210"/>
			</RegisterGroup>
			<RegisterGroup name="BUS_BASE_ADDR" description="Bus mapping base address register is a bus mapping base address register." value="0x26000000" startoffset="0x0218">
				<Member name="bus_base_addr_high" description="The flash memory is mapped to the system space address." range="31:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:0" property="RO"/>
				<Register offset="0x0218"/>
			</RegisterGroup>
			<RegisterGroup name="BUS_ALIAS_ADDR" description="BUS_ALIAS_ADDR is a bus alias base address register." value="0x00000000" startoffset="0x021C">
				<Member name="flash_alias_addr" description="The flash memory is mapped to the second base address of the system space." range="31:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:0" property="RO"/>
				<Register offset="0x021C"/>
			</RegisterGroup>
			<RegisterGroup name="BUS_DMA_CTRL" description="BUS_DMA_CTRL is a DMA control register." value="0x00000000" startoffset="0x0240">
				<Member name="reserved" description="Reserved." range="31:5" property="RO"/>
				<Member name="reserved" description="Reserved. The value 1 is always written to this bit." range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3:2" property="RO"/>
				<Member name="rw" description="DMA read and write indication.&lt;br&gt;0: write operation (write data to the flash memory)&lt;br&gt;1: read operation (read data from the flash memory)" range="1" property="RW"/>
				<Member name="start" description="DMA transfer enable control&lt;br&gt;0: no operation or the operation is complete.&lt;br&gt;1: Writing 1 to this bit to enable the DMA operation. Read 1 from this bit indicates the DMA is operating.&lt;br&gt;The value 0 is automatically returned after the DMA operation is complete." range="0" property="RW"/>
				<Register offset="0x0240"/>
			</RegisterGroup>
			<RegisterGroup name="BUS_DMA_MEM_SADDR" description="BUS_DMA_MEM_SADDR is DMA DDR start address register." value="0x00000000" startoffset="0x0244">
				<Member name="dma_mem_saddr" description="DMA DDR start address.&lt;br&gt;The start address must be 4-byte aligned." range="31:0" property="RW"/>
				<Register offset="0x0244"/>
			</RegisterGroup>
			<RegisterGroup name="BUS_DMA_FLASH_SADDR" description="BUS_DMA_MEM_SADDR is a DMA flash start address register." value="0x00000000" startoffset="0x0248">
				<Member name="dma_flash_saddr" description="DMA flash start address." range="31:0" property="RW"/>
				<Register offset="0x0248"/>
			</RegisterGroup>
			<RegisterGroup name="BUS_DMA_LEN" description="BUS_DMA_LEN is a DMA transfer data length register." value="0x00000000" startoffset="0x024C">
				<Member name="reserved" description="Reserved." range="31:30" property="RW"/>
				<Member name="dma_len" description="DMA data transfer length." range="29:0" property="RW"/>
				<Register offset="0x024C"/>
			</RegisterGroup>
			<RegisterGroup name="BUS_DMA_AHB_CTRL" description="BUS_DMA_AHB_CTRL is a DMA AHB burst control register." value="0x00000007" startoffset="0x0250">
				<Member name="reserved" description="Reserved." range="31:3" property="RW"/>
				<Member name="incr16_en" description="INC16 burst type enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="2" property="RW"/>
				<Member name="incr8_en" description="INC8 burst type enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled" range="1" property="RW"/>
				<Member name="incr4_en" description="INC4 burst type enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x0250"/>
			</RegisterGroup>
			<RegisterGroup name="CMD_CONFIG" description="CMD_CONFIG is a command configuration register." value="0x00007E00" startoffset="0x0300">
				<Member name="reserved" description="Reserved." range="31:20" property="RO"/>
				<Member name="mem_if_type" description="Specifies the type of the SPI flash interface in register command operation mode.&lt;br&gt;000: standard SPI interface type&lt;br&gt;001: dual-Input/Dual-Output SPI&lt;br&gt;010: dual-I/O SPI&lt;br&gt;011: full DIO SPI&lt;br&gt;100: reserved&lt;br&gt;101: quad-Input/Dual-Output SPI&lt;br&gt;110: quad-I/O SPI&lt;br&gt;111: full QIO SPI" range="19:17" property="RW"/>
				<Member name="reserved" description="Reserved. The value 0 must be written to this bit." range="16:15" property="RW"/>
				<Member name="data_cnt" description="The length of the read and written data is N+1 bytes." range="14:9" property="RW"/>
				<Member name="rw" description="Indicates that the data is read or written when that data_en is 1.&lt;br&gt;0: write. Data is written to the flash memory.&lt;br&gt;1: read. Data is read from the flash memory." range="8" property="RW"/>
				<Member name="data_en" description="Indicates whether there is data in this operation.&lt;br&gt;0: no data&lt;br&gt;1: there is data." range="7" property="RW"/>
				<Member name="dummy_byte_cnt" description="Dummy byte in register command operation mode.&lt;br&gt;0: no dummy byte&lt;br&gt;1: 1 byte&lt;br&gt;2: 2 bytes&lt;br&gt;...&lt;br&gt;7: 7 bytes" range="6:4" property="RW"/>
				<Member name="addr_en" description="Indicates whether there is an address for the current operation.&lt;br&gt;0: 0: There is no address&lt;br&gt;1: There is an address." range="3" property="RW"/>
				<Member name="reserved" description="Reserved." range="2" property="RO"/>
				<Member name="reserved" description="The value 1 is always written to this bit." range="1" property="RW"/>
				<Member name="start" description="Instruction operation start.&lt;br&gt;0: The operation is complete.&lt;br&gt;1: The operation starts.&lt;br&gt;After the operation is complete, the bit returns 0 automatically." range="0" property="RW"/>
				<Register offset="0x0300"/>
			</RegisterGroup>
			<RegisterGroup name="CMD_INS" description="CMD_INS is a command instruction register." value="0x00000000" startoffset="0x0308">
				<Member name="reserved" description="Reserved." range="31:8" property="RO"/>
				<Member name="reg_ins" description="Instruction code in the mode that the register accesses the flash memory." range="7:0" property="RW"/>
				<Register offset="0x0308"/>
			</RegisterGroup>
			<RegisterGroup name="CMD_ADDR" description="CMD_ADDR is a command address register." value="0x00000000" startoffset="0x030C">
				<Member name="reserved" description="Reserved." range="31:30" property="RO"/>
				<Member name="cmd_addr" description="Operation address in the mode that the register accesses the flash memory." range="29:0" property="RW"/>
				<Register offset="0x030C"/>
			</RegisterGroup>
			<RegisterGroup name="CMD_DATABUF_N" description="CMD_DATABUF_N is a command data buffer register." value="0x00000000" startoffset="0x0400">
				<Member name="cmd_databuf_n" description="Data buffer N in the mode that the register accesses the flash memory.&lt;br&gt;Register offset address 0x400+4Xn.&lt;br&gt;The variable N can be set to 0 to 15." range="31:0" property="RW"/>
				<Register offset="0x0400"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="QAM" i2cSupport="true" deviceId="0xa0" i2cPort="0x4">
			<Module baseAddress="0x00000000"/>
			<RegisterGroup name="EQU_CTRL_3" description="equ_ctrl_3 is equalization control register 3." value="0x21" startoffset="0x02">
				<Member name="step_lms" description="Equalizer step in least mean square (LMS) mode. It is set to 0x0–0x7 in normal mode." range="7:4" property="RW"/>
				<Member name="step_blind" description="Equalizer step in blind mode. It is set to 0x0–0x7 in normal mode." range="3:0" property="RW"/>
				<Register offset="0x02"/>
			</RegisterGroup>
			<RegisterGroup name="EQU_STAT_2" description="equ_stat_2 is equalization status register 2." value="0x00" startoffset="0x0A">
				<Member name="noise_cal" description="Upper eight bits of the internal noise estimation accumulator.&lt;br&gt;The value of the accumulator is related to the dispersion degree of the constellation diagram. The value reflects the average distance between the calculated constellation point and the mapped constellation point. In addition, a lookup table is used to calculate equivalent noise level (equivalent C/N estimation).&lt;br&gt;For details on how to use the lookup table, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x0A"/>
			</RegisterGroup>
			<RegisterGroup name="EQU_STAT_3" description="equ_stat_3 is equalization status register 3." value="0x00" startoffset="0x0B">
				<Member name="noise_cal" description="Lower eight bits of the internal noise estimation accumulator.&lt;br&gt;The value of the accumulator is related to the dispersion degree of the constellation diagram. The value reflects the average distance between the calculated constellation point and the mapped constellation point. In addition, a lookup table is used to calculate equivalent noise level (equivalent C/N estimation).&lt;br&gt;For details, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x0B"/>
			</RegisterGroup>
			<RegisterGroup name="TR_CTRL_2" description="tr_ctrl_2 is clock recovery control register 2." value="0xA0" startoffset="0x10">
				<Member name="t_gain_int" description="Lower eight bits of the gain integration tributary in timing recovery capture mode.&lt;br&gt;The greater the value, the higher the loop bandwidth and the smaller the damping coefficient." range="7:0" property="RW"/>
				<Register offset="0x10"/>
			</RegisterGroup>
			<RegisterGroup name="TR_CTRL_4" description="tr_ctrl_4 is clock recovery control register 4." value="0x7C" startoffset="0x11">
				<Member name="t_gain_dir" description="Lower eight bits of the gain direct tributary in timing recovery capture mode.&lt;br&gt;The greater the value, the greater the damping coefficient of the loop." range="7:0" property="RW"/>
				<Register offset="0x11"/>
			</RegisterGroup>
			<RegisterGroup name="TR_CTRL_5" description="tr_ctrl_5 is clock recovery control register 5." value="0x00" startoffset="0x12">
				<Member name="reserved" description="Reserved." range="7:5" property="-"/>
				<Member name="t_gain_int" description="Upper bits of the gain integration tributary in timing recovery capture mode." range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3:1" property="-"/>
				<Member name="t_gain_dir" description="Upper bits of the gain direct tributary in timing recovery capture mode." range="0" property="RW"/>
				<Register offset="0x12"/>
			</RegisterGroup>
			<RegisterGroup name="TR_CTRL_6" description="tr_ctrl_6 is clock recovery control register 6." value="0x76" startoffset="0x13">
				<Member name="reserved" description="Reserved." range="7" property="-"/>
				<Member name="t_gain_int2" description="Gain attenuation coefficient of the integration tributary in timing recovery trace mode." range="6:4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="-"/>
				<Member name="t_gain_dir2" description="Gain attenuation coefficient of the direct tributary in timing recovery trace mode." range="2:0" property="RW"/>
				<Register offset="0x13"/>
			</RegisterGroup>
			<RegisterGroup name="TR_CTRL_8" description="tr_ctrl_8 is clock recovery control register 8." value="0x00" startoffset="0x14">
				<Member name="reserved" description="Reserved." range="7:3" property="-"/>
				<Member name="itpl_ratio" description="Upper three bits of the ratio of the sampling clock to the symbol rate.&lt;br&gt;The ratio is calculated as follows:&lt;br&gt;&lt;br&gt;Where,  is the sampling frequency of the ADC." range="2:0" property="RW"/>
				<Register offset="0x14"/>
			</RegisterGroup>
			<RegisterGroup name="TR_CTRL_9" description="tr_ctrl_9 is clock recovery control register 9." value="0x86" startoffset="0x15">
				<Member name="itpl_ratio" description="Medium eight bits of the ratio of the sampling clock to the symbol rate.&lt;br&gt;The ratio is calculated as follows:&lt;br&gt;&lt;br&gt;Where,  is the sampling frequency of the ADC." range="7:0" property="RW"/>
				<Register offset="0x15"/>
			</RegisterGroup>
			<RegisterGroup name="TR_CTRL_10" description="tr_ctrl_10 is clock recovery control register 10." value="0x0D" startoffset="0x16">
				<Member name="itpl_ratio" description="Lower eight bits of the ratio of the sampling clock to the symbol rate.&lt;br&gt;The ratio is calculated as follows:&lt;br&gt;&lt;br&gt;Where,  is the sampling frequency of the ADC." range="7:0" property="RW"/>
				<Register offset="0x16"/>
			</RegisterGroup>
			<RegisterGroup name="TR_STAT_1" description="tr_stat_1 is clock recovery status register 1." value="0x00" startoffset="0x1A">
				<Member name="t_offset_est" description="Upper eight bits of the frequency offset of the symbol clock.&lt;br&gt;For details, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x1A"/>
			</RegisterGroup>
			<RegisterGroup name="TR_STAT_2" description="tr_stat_2 is clock recovery status register 2." value="0x00" startoffset="0x1B">
				<Member name="t_offset_est" description="Lower eight bits of the frequency offset of the symbol clock.&lt;br&gt;For details, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x1B"/>
			</RegisterGroup>
			<RegisterGroup name="CR_CTRL_21" description="cr_ctrl_21 is carrier recovery control register 21." value="0x00" startoffset="0x25">
				<Member name="crl_snapshot" description="Before reading an RO register with more than eight bits (such as t_offset_est), you need to write any value to cr_ctrl_21. Otherwise, the value read from a register is uncertain." range="7:0" property="RW"/>
				<Register offset="0x25"/>
			</RegisterGroup>
			<RegisterGroup name="CR_CTRL_22" description="cr_ctrl_22 is carrier recovery control register 22." value="0x17" startoffset="0x26">
				<Member name="reserved" description="Reserved." range="7:5" property="-"/>
				<Member name="f_gain_dir" description="Upper five bits of the gain direct tributary in carrier recovery reduced capture mode." range="4:0" property="RW"/>
				<Register offset="0x26"/>
			</RegisterGroup>
			<RegisterGroup name="CR_CTRL_23" description="cr_ctrl_23 is carrier recovery control register 23." value="0x7D" startoffset="0x27">
				<Member name="f_gain_dir" description="Lower eight bits of the gain direct tributary in carrier recovery reduced capture mode." range="7:0" property="RW"/>
				<Register offset="0x27"/>
			</RegisterGroup>
			<RegisterGroup name="CR_CTRL_24" description="cr_ctrl_24 is carrier recovery control register 24." value="0x0F" startoffset="0x28">
				<Member name="reserved" description="Reserved." range="7:5" property="-"/>
				<Member name="f_gain_int" description="Upper five bits of the gain integration tributary in carrier recovery reduced capture mode." range="4:0" property="RW"/>
				<Register offset="0x28"/>
			</RegisterGroup>
			<RegisterGroup name="CR_CTRL_25" description="cr_ctrl_25 is carrier recovery control register 25." value="0x65" startoffset="0x29">
				<Member name="f_gain_int" description="Lower eight bits of the gain integration tributary in carrier recovery reduced capture mode." range="7:0" property="RW"/>
				<Register offset="0x29"/>
			</RegisterGroup>
			<RegisterGroup name="CR_STAT_4" description="cr_stat_4 is carrier recovery status register 4." value="0x00" startoffset="0x32">
				<Member name="reserved" description="Reserved." range="7:4" property="-"/>
				<Member name="f_offset_est" description="Most significant four bits of the demodulated offset value.&lt;br&gt;For details, see the description of cr_ctrl_21." range="3:0" property="RO"/>
				<Register offset="0x32"/>
			</RegisterGroup>
			<RegisterGroup name="CR_STAT_5" description="cr_stat_5 is carrier recovery status register 5." value="0x00" startoffset="0x33">
				<Member name="f_offset_est" description="Upper eight bits of the demodulated frequency offset value.&lt;br&gt;For details, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x33"/>
			</RegisterGroup>
			<RegisterGroup name="CR_STAT_6" description="cr_stat_6 is carrier recovery status register 6." value="0x00" startoffset="0x34">
				<Member name="f_offset_est" description="Lower eight bits of the demodulated frequency offset value.&lt;br&gt;For details, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x34"/>
			</RegisterGroup>
			<RegisterGroup name="CR_STAT_7" description="cr_stat_7 is carrier recovery status register 7." value="0x00" startoffset="0x35">
				<Member name="f_offset_est" description="Least significant eight bits of the demodulated frequency offset value.&lt;br&gt;For details, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x35"/>
			</RegisterGroup>
			<RegisterGroup name="MCTRL_1" description="mctrl_1 is main control register 1." value="0x20" startoffset="0x40">
				<Member name="version" description="QAM version of 001." range="7:5" property="RO"/>
				<Member name="rst_agc" description="Soft reset.&lt;br&gt;0: The QAM module works normally.&lt;br&gt;1: The AGC and ADC are reset.&lt;br&gt;This bit cannot be cleared automatically. During reset, software needs to write 1 and then 0 to the bit." range="4" property="RW"/>
				<Member name="rst_eq" description="Equalizer reset.&lt;br&gt;0: The QAM module works normally.&lt;br&gt;1: The equalizer is reset.&lt;br&gt;This bit cannot be cleared automatically. During reset, software needs to write 1 and then 0 to the bit." range="3" property="RW"/>
				<Member name="rst_rs" description="RS module reset.&lt;br&gt;0: The QAM module works normally.&lt;br&gt;1: The RS module is reset.&lt;br&gt;This bit cannot be cleared automatically. During reset, software needs to write 1 and then 0 to the bit." range="2" property="RW"/>
				<Member name="rst_dec" description="Channel decoding reset.&lt;br&gt;0: The QAM module works normally.&lt;br&gt;1: The deinterleaver, frame sync module, and descrambler are reset.&lt;br&gt;This bit cannot be cleared automatically. During reset, software needs to write 1 and then 0 to the bit." range="1" property="RW"/>
				<Member name="rst_qam" description="Channel demodulation reset.&lt;br&gt;0: The QAM module works normally.&lt;br&gt;1: The channel demodulation is reset.&lt;br&gt;This bit cannot be cleared automatically. During reset, software needs to write 1 and then 0 to the bit." range="0" property="RW"/>
				<Register offset="0x40"/>
			</RegisterGroup>
			<RegisterGroup name="MCTRL_5" description="mctrl_5 is main control register 5." value="0xA8" startoffset="0x44">
				<Member name="agc_output_sel" description="AGC output select.&lt;br&gt;0: The pins agc1 and agc2 are common complementary metal-oxide semiconductor (CMOS) outputs.&lt;br&gt;1: The pins agc1 and agc2 are open drain (OD) outputs." range="7" property="RW"/>
				<Member name="reg2j83b_itu_sel" description="ITU standard select.&lt;br&gt;1: J83B&lt;br&gt;0: J83AC" range="6" property="RW"/>
				<Member name="mf_roll_sel" description="Mode of using the matched filter." range="5" property="RW"/>
				<Member name="swap" description="AD data format conversion.&lt;br&gt;0: normal format&lt;br&gt;1: exchange between upper and lower bits" range="4" property="RW"/>
				<Member name="data_formate" description="AD data format conversion.&lt;br&gt;0: normal format.&lt;br&gt;1: The MSB is inverted." range="3" property="RW"/>
				<Member name="itu_sel" description="ITU-J83 mode select.&lt;br&gt;0: DVB-C and ITU-J83A modes&lt;br&gt;1: ITU-J83C mode" range="2" property="RW"/>
				<Member name="qam_input_ctrl" description="Input control.&lt;br&gt;00: The QAM starts to work only after the AGC is locked.&lt;br&gt;01 and 10: The QAM starts to work even the AGC is not locked.&lt;br&gt;11: The QAM starts to work only after the AGC is locked once and the subsequent unlock operation is ignored." range="1:0" property="RW"/>
				<Register offset="0x44"/>
			</RegisterGroup>
			<RegisterGroup name="MCTRL_6" description="mctrl_6 is main control register 6." value="0xC0" startoffset="0x45">
				<Member name="mctrl_6" description="Test register. It is set to the reset value in normal mode." range="7:0" property="RW"/>
				<Register offset="0x45"/>
			</RegisterGroup>
			<RegisterGroup name="MCTRL_7" description="mctrl_7 is main control register 7." value="0x60" startoffset="0x46">
				<Member name="i2ct_en" description="External two-wire operation enable.&lt;br&gt;When this bit is set to 1, an external two-wire operation is performed. When the operation is complete, this bit is cleared automatically." range="7" property="WC"/>
				<Member name="scl_output_sel" description="scl output select.&lt;br&gt;0: The pins psc1 is CMOS output.&lt;br&gt;1: The pin psc1 is OD output and is 5.5 V pulled up." range="6" property="RW"/>
				<Member name="extad_clken" description="Reserved." range="5" property="RW"/>
				<Member name="itlock_sel" description="Interrupt source select.&lt;br&gt;1: interrupt signal&lt;br&gt;0: locking signal" range="4" property="RW"/>
				<Member name="itpwm_sel" description="int_pwm pin multiplexing select.&lt;br&gt;1: interrupt&lt;br&gt;0: PWM signal" range="3" property="RW"/>
				<Member name="lock_sel" description="Interrupt source select.&lt;br&gt;0: sync lock&lt;br&gt;1: reserved&lt;br&gt;2: balance lock&lt;br&gt;3: AGC lock" range="2:1" property="RW"/>
				<Member name="fir_en" description="Adjacent-channel filter enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x46"/>
			</RegisterGroup>
			<RegisterGroup name="MCTRL_9" description="mctrl_9 is main control register 9." value="0x08" startoffset="0x48">
				<Member name="mctrl_9" description="Test register. It is set to the reset value in normal mode." range="7:0" property="RW"/>
				<Register offset="0x48"/>
			</RegisterGroup>
			<RegisterGroup name="MCTRL_11" description="mctrl_11 is main control register 11." value="0x00" startoffset="0x4A">
				<Member name="agc_lock" description="AGC lock.&lt;br&gt;0: unlocked&lt;br&gt;1: locked" range="7" property="RO"/>
				<Member name="st_lock" description="Timing recovery lock.&lt;br&gt;0: unlocked&lt;br&gt;1: locked" range="6" property="RO"/>
				<Member name="ca_lock" description="Carrier recovery lock.&lt;br&gt;0: unlocked&lt;br&gt;1: locked" range="5" property="RO"/>
				<Member name="equ_lock" description="Equalization lock.&lt;br&gt;0: unlocked&lt;br&gt;1: locked" range="4" property="RO"/>
				<Member name="sync_lock" description="Frame sync lock.&lt;br&gt;0: unlocked&lt;br&gt;1: locked" range="3" property="RO"/>
				<Member name="tcm2reg_sync_lock" description="TCM lock in J83B mode.&lt;br&gt;0: unlocked&lt;br&gt;0: locked" range="2" property="RO"/>
				<Member name="j83b2reg_fec_sync_event" description="FEC frame sync lock in J83B mode.&lt;br&gt;0: unlocked&lt;br&gt;1: locked" range="1" property="RO"/>
				<Member name="j83b2reg_mpeg_sync_event" description="MPEG frame sync lock in J83B mode.&lt;br&gt;0: unlocked&lt;br&gt;1: locked" range="0" property="RO"/>
				<Register offset="0x4A"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_CTRL_3" description="bagc_ctrl_3 is BAGC control register 3." value="0x00" startoffset="0x62">
				<Member name="agc2_ini" description="Lower eight bits of the initial gain of AGC2.&lt;br&gt;After the AGC is reset by using software, AGC2 is adjusted from this value." range="7:0" property="RW"/>
				<Register offset="0x62"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_CTRL_6" description="bagc_ctrl_6 is BAGC control register 6." value="0x10" startoffset="0x65">
				<Member name="i_thres_unlock" description="Bandwidth consumed at average power for checking whether the AGC is unlocked when the AGC is locked." range="7:0" property="RW"/>
				<Register offset="0x65"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_CTRL_9" description="bagc_ctrl_9 is BAGC control register 9." value="0x04" startoffset="0x68">
				<Member name="rate_update" description="Upper eight bits of the gain adjustment cycle of the AGC." range="7:0" property="RW"/>
				<Register offset="0x68"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_CTRL_10" description="bagc_ctrl_10 is BAGC control register 10." value="0xB0" startoffset="0x69">
				<Member name="rate_update" description="Lower eight bits of the gain adjustment cycle of the AGC." range="7:0" property="RW"/>
				<Register offset="0x69"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_CTRL_12" description="bagc_ctrl_12 is BAGC control register 12." value="0x00" startoffset="0x6B">
				<Member name="pulse_width" description="Refresh cycle when the AGC outputs PWM waves." range="7:0" property="RW"/>
				<Register offset="0x6B"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_CTRL_13" description="bagc_ctrl_13 is BAGC control register 13." value="0x00" startoffset="0x6E">
				<Member name="pwm_seed" description="Upper eight bits of the general-purpose PWM control register.&lt;br&gt;This field is used to generate PWM signals and output them from int_pwm." range="7:0" property="RW"/>
				<Register offset="0x6E"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_CTRL_14" description="bagc_ctrl_14 is BAGC control register 14." value="0x00" startoffset="0x6F">
				<Member name="pwm_seed" description="Lower eight bits of the general-purpose PWM control register.&lt;br&gt;This field is used to generate PWM signals and output them from int_pwm." range="7:0" property="RW"/>
				<Register offset="0x6F"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_STAT_1" description="bagc_stat_1 is BAGC status register 1." value="0x00" startoffset="0x70">
				<Member name="agc1_gain" description="Upper eight bits of the AGC1 gain.&lt;br&gt;For details, see cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x70"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_STAT_2" description="bagc_stat_2 is BAGC status register 2." value="0x00" startoffset="0x71">
				<Member name="agc1_gain" description="Lower four bits of the AGC1 gain.&lt;br&gt;For details, see cr_ctrl_21." range="7:4" property="RO"/>
				<Member name="reserved" description="Reserved." range="3:0" property="RO"/>
				<Register offset="0x71"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_STAT_3" description="bagc_stat_3 is BAGC status register 3." value="0x00" startoffset="0x72">
				<Member name="agc2_gain1" description="Upper eight bits of gain 1 of AGC2.&lt;br&gt;For details, see cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x72"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_STAT_4" description="bagc_stat_4 is BAGC status register 4." value="0x00" startoffset="0x73">
				<Member name="agc2_gain1" description="Lower four bits of gain 1 of AGC2.&lt;br&gt;For details, see cr_ctrl_21." range="7:4" property="RO"/>
				<Member name="reserved" description="Reserved." range="3:0" property="RO"/>
				<Register offset="0x73"/>
			</RegisterGroup>
			<RegisterGroup name="BAGC_STAT_7" description="bagc_stat_7 is BAGC status register 7." value="0x00" startoffset="0x79">
				<Member name="agc_average_power" description="Average power of the AGC." range="7:0" property="RO"/>
				<Register offset="0x79"/>
			</RegisterGroup>
			<RegisterGroup name="SFREQ_AGC1_INIT" description="sfreq_agc1_init is AGC control register." value="0x80" startoffset="0x87">
				<Member name="agc1_init" description="Initial value of AGC1" range="7:0" property="RW"/>
				<Register offset="0x87"/>
			</RegisterGroup>
			<RegisterGroup name="BER_1" description="ber_1 is BER control register 1." value="0x00" startoffset="0x93">
				<Member name="bert_en" description="BER enable.&lt;br&gt;BER statistic enable before RS correction, active high.&lt;br&gt;When ber_ctrl is 0 and an overflow occurs in the internal byte counter (above the BER statistic threshold), ber_en is automatically cleared." range="7" property="WC"/>
				<Member name="err_source" description="BER statistic error source.&lt;br&gt;0: Error bits are counted.&lt;br&gt;1: Error bytes are counted." range="6" property="RW"/>
				<Member name="err_mode" description="BER statistical mode.&lt;br&gt;0: auto-stop statistical mode. When the internal counter reaches the threshold or an overflow occurs in the BER counter, counting stops automatically and ber_en is automatically cleared.&lt;br&gt;1: auto-repeat statistical mode. When the internal counter reaches the threshold, it is reset automatically and restarts to count until ber_en is 0." range="5" property="RW"/>
				<Member name="nbyte" description="BER statistic threshold.&lt;br&gt;The threshold for the overflow of the internal byte counter is 2^(2 ). This threshold is valid only when ber_ctrl is 0. The value of the internal byte counter ranges from 4,096 to ." range="4:2" property="RW"/>
				<Member name="reserved" description="Reserved." range="1:0" property="-"/>
				<Register offset="0x93"/>
			</RegisterGroup>
			<RegisterGroup name="BER_2" description="ber_ctrl_2 is BER control register 2." value="0x00" startoffset="0x94">
				<Member name="error_cnt" description="Upper eight bits of the internal error bit/byte counter.&lt;br&gt;This result is the count of raw bit/byte errors, including all errors in the RS check bytes.&lt;br&gt;For details, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x94"/>
			</RegisterGroup>
			<RegisterGroup name="BER_3" description="ber_ctrl_3 is BER control register 3." value="0x00" startoffset="0x95">
				<Member name="error_cnt" description="Medium eight bits of the internal error bit/byte counter.&lt;br&gt;This result is the count of raw bit/byte errors, including all errors in the RS check bytes.&lt;br&gt;For details, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x95"/>
			</RegisterGroup>
			<RegisterGroup name="BER_4" description="ber_ctrl_4 is BER control register 4." value="0x00" startoffset="0x96">
				<Member name="error_cnt" description="Lower eight bits of the internal error bit/byte counter.&lt;br&gt;This result is the count of raw bit/byte errors, including all errors in the RS check bytes.&lt;br&gt;For details, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x96"/>
			</RegisterGroup>
			<RegisterGroup name="TS_CTRL_1" description="ts_ctrl_1 is output control register 1." value="0x8E" startoffset="0x98">
				<Member name="sync_byte_inv" description="Sync byte invert.&lt;br&gt;0: The inverse sync byte is not inverted.&lt;br&gt;1: The inverse sync byte is reverted and the value 0xB8 is restored to 0x47.&lt;br&gt;This bit is set to 1 in normal mode." range="7" property="RW"/>
				<Member name="bend_bypass" description="Decoding module bypass.&lt;br&gt;0: The decoding module is not bypassed.&lt;br&gt;1: All modules related to decoding such as deinterleaver, RS decoding module, and descrambler are bypassed." range="6" property="RW"/>
				<Member name="test2" description="Test register. It is set to the reset value in normal mode." range="5" property="RW"/>
				<Member name="parity_en" description="Output enable of the RS check bit.&lt;br&gt;0: The RS check bit is not output (discarded).&lt;br&gt;1: All MPEG-TS streams are output." range="4" property="RW"/>
				<Member name="sp_sel" description="Mode select of the parallel port.&lt;br&gt;1: serial mode&lt;br&gt;0: parallel mode 2&lt;br&gt;This bit is valid only when ts_ctrl_2[comm_if_en] is 0." range="3" property="RW"/>
				<Member name="tei_enable" description="Transport error indicator (TEI) bit enable.&lt;br&gt;0: The MPEG-2 TEI bit is not enabled even when an uncorrectable frame error is found.&lt;br&gt;1: The MPEG-2 TEI bit is enabled when an uncorrectable frame error is found." range="2" property="RW"/>
				<Member name="ds_enable" description="Descrambling enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;This bit is set to 1 in normal mode." range="1" property="RW"/>
				<Member name="reserved" description="Reserved." range="0" property="-"/>
				<Register offset="0x98"/>
			</RegisterGroup>
			<RegisterGroup name="TS_CTRL_2" description="ts_ctrl_2 is output control register 2." value="0x60" startoffset="0x99">
				<Member name="sync_drop" description="Sync byte discard.&lt;br&gt;0: The sync bytes in the MPEG-TS frame header are output.&lt;br&gt;1: The sync bytes in the MPEG-TS frame header are not output (the corresponding ts_val is invalid)." range="7" property="RW"/>
				<Member name="comm_if_en" description="Mode enable of the parallel port.&lt;br&gt;1: mode 1 of the parallel port&lt;br&gt;0: mode 2 of the parallel port or serial port mode. The mode is controlled by ts_ctrl_1[sp_sel]." range="6" property="RW"/>
				<Member name="comm_if_clk_ctrl" description="Output polarity of ts_clk.&lt;br&gt;0: ts_clk is output directly.&lt;br&gt;1: ts_clk is output reversely." range="5" property="RW"/>
				<Member name="comm_if_clk_base" description="Output polarity of ts_clk.&lt;br&gt;0: ts_clk is output directly.&lt;br&gt;1: ts_clk is output reversely." range="4" property="RW"/>
				<Member name="test" description="Test register. It is set to the reset value in normal mode." range="3:0" property="RW"/>
				<Register offset="0x99"/>
			</RegisterGroup>
			<RegisterGroup name="RS_CTRL_1" description="rs_ctrl_1 is RS decoding status register 1." value="0x00" startoffset="0x9B">
				<Member name="pkt_cnt" description="Upper eight bits of the TS frame counter.&lt;br&gt;For details about the count of output TS frames, see the description of rs_ctrl_8 bits[5:4].&lt;br&gt;For details about how to use this register, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x9B"/>
			</RegisterGroup>
			<RegisterGroup name="RS_CTRL_2" description="rs_ctrl_2 is RS decoding status register 2." value="0x00" startoffset="0x9C">
				<Member name="pkt_cnt" description="Lower eight bits of the TS frame counter.&lt;br&gt;For details about the count of output TS frames, see the description of rs_ctrl_8 bits[5:4].&lt;br&gt;For details about how to use this register, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x9C"/>
			</RegisterGroup>
			<RegisterGroup name="RS_CTRL_3" description="rs_ctrl_3 is RS decoding status register 3." value="0x00" startoffset="0x9D">
				<Member name="pkt_corr" description="Upper eight bits of the corrected TS frame counter.&lt;br&gt;After being enabled, this register is used to count the TS frames corrected by the RS module. For details, see the description of rs_ctrl_8 bits[5:4].&lt;br&gt;For details about how to use this register, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x9D"/>
			</RegisterGroup>
			<RegisterGroup name="RS_CTRL_4" description="rs_ctrl_4 is RS decoding status register 4." value="0x00" startoffset="0x9E">
				<Member name="pkt_corr" description="Lower eight bits of the corrected TS frame counter.&lt;br&gt;After being enabled, this register is used to count the TS frames corrected by the RS module. For details, see the description of rs_ctrl_8 bits[5:4].&lt;br&gt;For details about how to use this register, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x9E"/>
			</RegisterGroup>
			<RegisterGroup name="RS_CTRL_5" description="rs_ctrl_5 is RS decoding status register 5." value="0x00" startoffset="0x9F">
				<Member name="pkt_uncorr" description="Upper eight bits of the uncorrected TS frame counter.&lt;br&gt;After being enabled, this register is used to count the TS frames that cannot be corrected by the RS module. For details, see the description of rs_ctrl_8 bits[5:4].&lt;br&gt;For details about how to use this register, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0x9F"/>
			</RegisterGroup>
			<RegisterGroup name="RS_CTRL_6" description="rs_ctrl_6 is RS decoding status register 6." value="0x00" startoffset="0xA0">
				<Member name="pkt_uncorr" description="Lower eight bits of the uncorrected TS frame counter.&lt;br&gt;After being enabled, this register is used to count the TS frames that cannot be corrected by the RS module. For details, see the description of rs_ctrl_8 bits[5:4].&lt;br&gt;For details about how to use this register, see the description of cr_ctrl_21." range="7:0" property="RO"/>
				<Register offset="0xA0"/>
			</RegisterGroup>
			<RegisterGroup name="RS_CTRL_8" description="rs_ctrl_8 is RS decoding status register 8." value="0x40" startoffset="0xA1">
				<Member name="reserved" description="Reserved." range="7" property="-"/>
				<Member name="rs_corr_dis" description="RS correction mask.&lt;br&gt;0: The RS module works normally (default).&lt;br&gt;1: The correction function of the RS module is masked, but other functions are not affected." range="6" property="RW"/>
				<Member name="static_hold" description="Counter hold.&lt;br&gt;0: The preceding counters work normally.&lt;br&gt;1: The TS frame counter (pkt_cnt), corrected TS frame counter (pkt_corr), and uncorrected TS frame counter (pkt_uncorr) retain the corresponding count values." range="5" property="RW"/>
				<Member name="static_clear" description="Counter clear.&lt;br&gt;0: The preceding counters work normally.&lt;br&gt;1: The TS frame counter (pkt_cnt), corrected TS frame counter (pkt_corr), and uncorrected TS frame counter (pkt_uncorr) are cleared." range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3:0" property="-"/>
				<Register offset="0xA1"/>
			</RegisterGroup>
			<RegisterGroup name="BS_CTRL_1" description="bs_ctrl_1 is blind scanning control register 1." value="0x04" startoffset="0xA6">
				<Member name="reserved" description="Reserved." range="7:4" property="-"/>
				<Member name="spec_inv_en" description="Spectrum invert.&lt;br&gt;0: The demodulator is not allowed to process any spectrum inversion caused by the transfer channel.&lt;br&gt;1: The demodulator is allowed to process any spectrum inversion caused by the transfer channel." range="3" property="RW"/>
				<Member name="spec_search_en" description="Spectrum auto-inversion control.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;For details about the actual spectrum mode, see the description of bs_stat_1." range="2" property="RW"/>
				<Member name="rate_search_en" description="Symbol rate blind scanning control.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;For details about the found QAM mode and symbol rate, see the description of bs_stat_1." range="1" property="RW"/>
				<Member name="qam_search_en" description="Modulation mode blind scanning control.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;For details about the found modulation mode, see the description of bs_stat_1." range="0" property="RW"/>
				<Register offset="0xA6"/>
			</RegisterGroup>
			<RegisterGroup name="BS_STAT_2" description="bs_stat_2 is blind scanning status register 2." value="0x00" startoffset="0xAD">
				<Member name="reserved" description="Reserved." range="7:4" property="-"/>
				<Member name="qam_search_status" description="Result of modulation mode blind scanning. This field is valid only when the modulation mode blink scanning function is enabled.&lt;br&gt;00: Blind scanning is not complete.&lt;br&gt;01: Invalid.&lt;br&gt;10: Blind scanning is complete but failed.&lt;br&gt;11: Blind scanning is complete and successful." range="3:2" property="RO"/>
				<Member name="rate_search_status" description="Result of symbol rate blind scanning.&lt;br&gt;00: Blind scanning is not complete.&lt;br&gt;01: Invalid.&lt;br&gt;10: Blind scanning is complete but failed.&lt;br&gt;11: Blind scanning is complete and successful." range="1:0" property="RO"/>
				<Register offset="0xAD"/>
			</RegisterGroup>
			<RegisterGroup name="BS_STAT_3" description="bs_stat_3 is blind scanning status register 3." value="0x00" startoffset="0xAE">
				<Member name="reserved" description="Reserved." range="7:1" property="-"/>
				<Member name="rate_ratio" description="After symbol rate blind scanning is complete, the symbol rate can be calculated as follows:&lt;br&gt;&lt;br&gt;When rate_range is 0, Fad is 28.8 MHz.&lt;br&gt;When rate_range is 1, Fad is 14.4 MHz.&lt;br&gt;When rate_range is 2, Fad is 7.2 MHz.&lt;br&gt;This bit is the MSB of rate_ratio." range="0" property="RO"/>
				<Register offset="0xAE"/>
			</RegisterGroup>
			<RegisterGroup name="BS_STAT_4" description="bs_stat_4 is blind scanning status register 4." value="0x86" startoffset="0xAF">
				<Member name="rate_ratio" description="After symbol rate blind scanning is complete, the symbol rate can be calculated as follows:&lt;br&gt;&lt;br&gt;When rate_range is 0, Fad is 28.8 MHz.&lt;br&gt;When rate_range is 1, Fad is 14.4 MHz.&lt;br&gt;When rate_range is 2, Fad is 7.2 MHz.&lt;br&gt;These bits are the upper eight bits of rate_ratio." range="7:0" property="RO"/>
				<Register offset="0xAF"/>
			</RegisterGroup>
			<RegisterGroup name="BS_STAT_5" description="bs_stat_5 is blind scanning status register 5." value="0x0D" startoffset="0xB0">
				<Member name="rate_ratio" description="After symbol rate blind scanning is complete, the symbol rate can be calculated as follows:&lt;br&gt;&lt;br&gt;When rate_range is 0, Fad is 28.8 MHz.&lt;br&gt;When rate_range is 1, Fad is 14.4 MHz.&lt;br&gt;When rate_range is 2, Fad is 7.2 MHz.&lt;br&gt;These bits are the lower eight bits of rate_ratio." range="7:0" property="RO"/>
				<Register offset="0xB0"/>
			</RegisterGroup>
			<RegisterGroup name="FS_CTRL_1" description="fs_ctrl_1 is scanning control register 1." value="0x00" startoffset="0xB1">
				<Member name="test" description="Test register. It is set to the reset value in normal mode." range="7:6" property="RW"/>
				<Member name="fre_init" description="Upper six bits of the initial demodulation frequency.&lt;br&gt;The demodulation frequency is calculated as follows:&lt;br&gt;&lt;br&gt;The frequency scanning circuit works under the sampling clock. Where,  is the resolution precision. For example, when fclk is 28.8 MHz, the resolution precision is 2,238 Hz." range="5:0" property="RW"/>
				<Register offset="0xB1"/>
			</RegisterGroup>
			<RegisterGroup name="FS_CTRL_2" description="fs_ctrl_2 is scanning control register 2." value="0x00" startoffset="0xB2">
				<Member name="fre_init" description="Lower eight bits of the initial demodulation frequency.&lt;br&gt;The demodulation frequency is calculated as follows:&lt;br&gt;&lt;br&gt;The frequency scanning circuit works under the sampling clock.&lt;br&gt;Where,  is the resolution precision. For example, when fclk is 28.8 MHz, the resolution precision is 2,238 Hz." range="7:0" property="RW"/>
				<Register offset="0xB2"/>
			</RegisterGroup>
			<RegisterGroup name="FS_CTRL_4" description="fs_ctrl_4 is scanning control register 4." value="0x00" startoffset="0xB4">
				<Member name="test" description="Test register. It is set to the reset value in normal mode." range="7:5" property="RW"/>
				<Member name="scan_interval" description="Upper five bits of the scanning interval step.&lt;br&gt;The step between two continuous frequencies that are to be demodulated is calculated as follows:" range="4:0" property="RW"/>
				<Register offset="0xB4"/>
			</RegisterGroup>
			<RegisterGroup name="FS_CTRL_5" description="fs_ctrl_5 is scanning control register 5." value="0x70" startoffset="0xB5">
				<Member name="scan_interval" description="Lower eight bits of the scanning interval step.&lt;br&gt;The step between two continuous frequencies that are to be demodulated is calculated as follows:" range="7:0" property="RW"/>
				<Register offset="0xB5"/>
			</RegisterGroup>
			<RegisterGroup name="FS_CTRL_6" description="fs_ctrl_6 is scanning control register 6." value="0x00" startoffset="0xB6">
				<Member name="reserved" description="Reserved." range="7:5" property="-"/>
				<Member name="scan_start" description="Frequency scanning enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled." range="4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3:2" property="-"/>
				<Member name="scan_end_flag" description="Frequency scanning end signal.&lt;br&gt;0: not ended&lt;br&gt;1: ended" range="1" property="RO"/>
				<Member name="scan_lock_flag" description="Whether the frequency scanning is successful.&lt;br&gt;0: failure&lt;br&gt;1: success" range="0" property="RO"/>
				<Register offset="0xB6"/>
			</RegisterGroup>
			<RegisterGroup name="FS_STAT_2" description="fs_stat_2 is canning status register 2." value="0x00" startoffset="0xB9">
				<Member name="freq_shift" description="Lower eight bits of the final frequency offset obtained after frequency scanning." range="7:0" property="RO"/>
				<Register offset="0xB9"/>
			</RegisterGroup>
			<RegisterGroup name="SFREQ_MASK" description="sfreq_mask is a tap coefficient mask control register." value="0x00" startoffset="0xFB">
				<Member name="reserved" description="Reserved." range="7:6" property="-"/>
				<Member name="sfreq_mask" description="Tap coefficient mask signal. There are six taps and each tap corresponds to one bit. High level indicates mask enable." range="5:0" property="RW"/>
				<Register offset="0xFB"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="SF" i2cSupport="false">
			<Module baseAddress="0x600D0000"/>
			<Module baseAddress="0x600D1000"/>
			<Module baseAddress="0x600D2000"/>
			<RegisterGroup name="MDIO_RWCTRL" description="MDIO_RWCTRL is an MDIO command word register.&lt;br&gt;The register does not support soft reset." value="0x00008000" startoffset="0x1100">
				<Member name="cpu_data_in" description="Data that is written to the PHY by the MDIO module.&lt;br&gt;On write, the CPU first writes the 16-bit data to be written by the MDIO module to this register." range="31:16" property="RW"/>
				<Member name="finish" description="PHY read/write operation complete.&lt;br&gt;0: not complete&lt;br&gt;1: complete&lt;br&gt;When another read/write operation is required, the CPU must clear this bit first." range="15" property="RW"/>
				<Member name="reserved" description="Reserved." range="14" property="-"/>
				<Member name="rw" description="PHY read or write access control.&lt;br&gt;0: read&lt;br&gt;1: write" range="13" property="RW"/>
				<Member name="phy_exaddr" description="Physical address of the external PHY.&lt;br&gt;One MDIO interface can be used to read or write multiple external PHYs. Each PHY maps to one address." range="12:8" property="RW"/>
				<Member name="frq_dv" description="Clock divider of the MDC (MDIO interface clock) when the external PHY is read or written.&lt;br&gt;The following describes the mapping between frq_dv and MDC frequency by taking the frequency 100 MHz of the main clock as an example:&lt;br&gt;000: The frequency of the working main clock is divided by 50 and the obtained frequency is 2 MHz.&lt;br&gt;001: The working main clock is divided by 100 and the obtained frequency is 1 MHz.&lt;br&gt;010: The working main clock is divided by 200 and the obtained frequency is 512 kHz.&lt;br&gt;011: The working main clock is divided by 400 and the obtained frequency is 256 kHz.&lt;br&gt;100: The working main clock is divided by 800 and the obtained frequency is 128 kHz.&lt;br&gt;101: The working main clock is divided by 1,600 and the obtained frequency is 64 kHz.&lt;br&gt;110: The working main clock is divided by 3,200 and the obtained frequency is 32 kHz.&lt;br&gt;111: The working main clock is divided by 6,400 and the obtained frequency is 16 kHz." range="7:5" property="RW"/>
				<Member name="phy_inaddr" description="Internal register address of the external PHY. This address is presented by a 5-bit binary number." range="4:0" property="RW"/>
				<Register offset="0x1100"/>
			</RegisterGroup>
			<RegisterGroup name="MDIO_RO_DATA" description="MDIO_RO_DATAMDIO is a read data register. The register does not support soft reset." value="0x00000000" startoffset="0x1104">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="cpu_data_out" description="Data register used by the MDIO module to perform read operation on the PHY. The MDIO module first writes the 16-bit data read from the PHY to this register." range="15:0" property="RO"/>
				<Register offset="0x1104"/>
			</RegisterGroup>
			<RegisterGroup name="GLB_HOSTMAC_L32" description="GLB_HOSTMAC_L32 is a lower 32-bit register for the local MAC address. The register doesnot support soft reset." value="0x00000000" startoffset="0x1300">
				<Member name="local_mac" description="Lower 32 bits of the local MAC address." range="31:0" property="RW"/>
				<Register offset="0x1300"/>
			</RegisterGroup>
			<RegisterGroup name="GLB_HOSTMAC_H16" description="GLB_HOSTMAC_H16 is an upper 16-bit register for the local MAC address. The registerdoes not support soft reset." value="0x00000000" startoffset="0x1304">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="local_mac_47_32_" description="Upper 16 bits of the local MAC address." range="15:0" property="RW"/>
				<Register offset="0x1304"/>
			</RegisterGroup>
			<RegisterGroup name="GLB_IRQ_STAT" description="GLB_IRQ_STAT is an interrupt status register. The register does not support soft reset." value="0x00000000" startoffset="0x1330">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="int_rxd_down" description="Interrupt status (multi-packet interrupt) for a frame (frames) on the downstream port to be received by the CPU.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. There are frames to be received by the CPU in the receive queue.&lt;br&gt;After this interrupt is generated, software checks whether there are frames to be received by querying the GLB_IRQ_RAW[iraw_rxd_down]." range="27" property="RO"/>
				<Member name="int_freeeq_down" description="Interrupt status for the transmit queue of the downstream port to change from non-empty to empty, indicating that the transmit queue buffer changes from non-empty to empty and the CPU can write a group of new frames to be transmitted.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The transmit queue changes from non-empty to empty.&lt;br&gt;After this interrupt is generated, software checks whether the current transmit queue is empty by querying. If the current transmit queue is not empty, the interrupt is invalid." range="26" property="RO"/>
				<Member name="int_stat_down" description="Interrupt status for downstream port status changes, indicating that an interrupt is generated when the MDIO obtains the speed change, duplex mode change, and link status change of the PHY in adaptive mode.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The port status changes.&lt;br&gt;After this interrupt is generated, software determines the status to be changed according to the configuration." range="25" property="RO"/>
				<Member name="int_duplex_down" description="Interrupt status for downstream port duplex mode changes.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The duplex mode changes.&lt;br&gt;After this interrupt is generated, software checks whether the duplex mode changes by querying." range="24" property="RO"/>
				<Member name="int_speed_down" description="Interrupt status for downstream port speed mode changes.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The speed mode changes.&lt;br&gt;After this interrupt is generated, software checks whether the speed mode changes by querying." range="23" property="RO"/>
				<Member name="int_link_down" description="Interrupt status for downstream port link status changes.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The link status changes.&lt;br&gt;After this interrupt is generated, software checks whether the link status changes by querying." range="22" property="RO"/>
				<Member name="int_tx_down" description="Interrupt status for the downstream port to transmit a frame from the CPU.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The frame transmission is complete.&lt;br&gt;After this interrupt is generated, software determines whether to release the buffer of the transmitted frames by querying." range="21" property="RO"/>
				<Member name="int_rx_down" description="Interrupt status for frames on the downstream port to be received by the CPU.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. There are frames to be received by the CPU in the receive queue.&lt;br&gt;After this interrupt is generated, software checks whether there are frames to be received by querying GLB_IRQ_RAW[iraw_rxd_down]." range="20" property="RO"/>
				<Member name="reserved" description="Reserved." range="19:15" property="-"/>
				<Member name="int_unknow_vlanm" description="Interrupt status for the port to receive unknown VLAN members.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. Unknown VLAN members are received." range="14" property="RO"/>
				<Member name="int_unknow_vlan" description="Interrupt status for the port to receive unknown VLAN.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. Unknown VLAN is received." range="13" property="RO"/>
				<Member name="int_mdio_finish" description="Interrupt status for the MDIO to complete the operation required by the CPU.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The MDIO has completed the operation required by the CPU.&lt;br&gt;After this interrupt is generated, software checks whether the MDIO completes the operation by querying MDIO_RWCTRL[finish]." range="12" property="RO"/>
				<Member name="reserved" description="Reserved." range="11:8" property="-"/>
				<Member name="int_rxd_up" description="Interrupt status (multi-packet interrupt) for a frame (frames) on the upstream port to be received by the CPU.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. There are frames to be received by the CPU in the receive queue.&lt;br&gt;After this interrupt is generated, software checks whether there are frames to be received by querying GLB_IRQ_RAW[iraw_rxd_up]." range="7" property="RO"/>
				<Member name="int_freeeq_up" description="Interrupt status for the transmit queue of the upstream port to change from non-empty to empty, indicating that the transmit queue buffer changes from non-empty to empty and the CPU can write a group of new frames to be transmitted.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The transmit queue changes from non-empty to empty.&lt;br&gt;After this interrupt is generated, software checks whether the current transmit queue is empty by querying. If the current transmit queue is not empty, the interrupt is invalid." range="6" property="RO"/>
				<Member name="int_stat_up" description="Interrupt status for upstream port status changes, indicating that an interrupt is generated when the MDIO obtains the speed change, duplex mode change, and link status change of the PHY in auto-negotiation mode.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The port status changes.&lt;br&gt;After this interrupt is generated, software determines the status to be changed according to the configuration." range="5" property="RO"/>
				<Member name="int_duplex_up" description="Interrupt status for upstream port duplex mode changes.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The duplex mode changes.&lt;br&gt;After this interrupt is generated, software checks whether the duplex mode changes by querying." range="4" property="RO"/>
				<Member name="int_speed_up" description="Interrupt status for upstream port speed mode changes.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The speed mode changes.&lt;br&gt;After this interrupt is generated, software checks whether the speed mode changes by querying." range="3" property="RO"/>
				<Member name="int_link_up" description="Interrupt status for upstream port link status changes.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The link status changes.&lt;br&gt;After this interrupt is generated, software checks whether the link status changes by querying." range="2" property="RO"/>
				<Member name="int_tx_up" description="Interrupt status for the upstream port to transmit a frame from the CPU.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The frame transmission is complete.&lt;br&gt;After this interrupt is generated, software determines whether to release the buffer of the transmitted frames by querying the current transmit queue address eq_out_index." range="1" property="RO"/>
				<Member name="int_rx_up" description="Interrupt status for frames on the upstream port to be received by the CPU.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. There are frames to be received by the CPU in the receive queue.&lt;br&gt;After this interrupt is generated, software checks whether there are frames to be received by querying GLB_IRQ_RAW[iraw_rxd_up]." range="0" property="RO"/>
				<Register offset="0x1330"/>
			</RegisterGroup>
			<RegisterGroup name="GLB_IRQ_ENA" description="GLB_IRQ_ENA is an interrupt enable register. The register does not support soft reset." value="0x00000000" startoffset="0x1334">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="ien_rxd_down" description="Interrupt enable (multi-packet interrupt) for a frame (frames) on the downstream port to be received by the CPU.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="27" property="RW"/>
				<Member name="ien_freeeq_down" description="Interrupt enable for the transmit queue of the downstream port to change from non-empty to empty.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="26" property="RW"/>
				<Member name="ien_stat_down" description="Interrupt enable for downstream port status changes.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="25" property="RW"/>
				<Member name="ien_duplex_down" description="Interrupt enable for downstream port duplex mode changes.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="24" property="RW"/>
				<Member name="ien_speed_down" description="Interrupt enable for downstream port speed mode changes.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="23" property="RW"/>
				<Member name="ien_link_down" description="Interrupt enable for downstream port link status changes.&lt;br&gt;0: Disabled.&lt;br&gt;1: Enabled." range="22" property="RW"/>
				<Member name="ien_tx_down" description="Interrupt enable for the completion of transmitting a frame from the CPU by the downstream port.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="21" property="RW"/>
				<Member name="ien_rx_down" description="Interrupt enable for frames on the downstream port to be received by the CPU.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="20" property="RW"/>
				<Member name="ien_all" description="All interrupts enable.&lt;br&gt;0: disabled (none of the interrupt can be reported)&lt;br&gt;1: enabled (all interrupts are reported according to the configuration)" range="19" property="RW"/>
				<Member name="ien_up" description="All upstream port interrupts enable.&lt;br&gt;0: disabled (none of the upstream port interrupts can be reported)&lt;br&gt;1: enabled (all upstream port interrupts are reported according to the configuration)" range="18" property="RW"/>
				<Member name="ien_down" description="All downstream port interrupts enable.&lt;br&gt;0: disabled (none of the downstream port interrupts can be reported)&lt;br&gt;1: enabled (all downstream port interrupts are reported according to the configuration)" range="17" property="RW"/>
				<Member name="reserved" description="Reserved." range="16:15" property="-"/>
				<Member name="ien_unknow_vlanm" description="Unknown VLAN member interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="14" property="RW"/>
				<Member name="ien_unknow_vlan" description="Unknown VLAN interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="13" property="RW"/>
				<Member name="ien_mdio_finish" description="Indicator enable for the MDIO to complete the operation required by the CPU.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="12" property="RW"/>
				<Member name="reserved" description="Reserved." range="11:8" property="-"/>
				<Member name="ien_rxd_up" description="Interrupt enable (multi-packet interrupt) for a frame (frames) on the upstream port to be received by the CPU.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="7" property="RW"/>
				<Member name="ien_freeeq_up" description="Interrupt signal enable for the transmit queue of the upstream port to change from non-empty to empty.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="6" property="RW"/>
				<Member name="ien_stat_up" description="Interrupt signal enable for upstream port status changes.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="5" property="RW"/>
				<Member name="ien_duplex_up" description="Interrupt enable for upstream port duplex mode changes.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="4" property="RW"/>
				<Member name="ien_speed_up" description="Interrupt enable for upstream port speed mode changes.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="3" property="RW"/>
				<Member name="ien_link_up" description="Interrupt enable for upstream port link status changes.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="2" property="RW"/>
				<Member name="ien_tx_up" description="Indicator enable for the completion of transmitting a frame from the CPU by the upstream port.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="1" property="RW"/>
				<Member name="ien_rx_up" description="Interrupt enable for frames on the upstream port to be received by the CPU.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x1334"/>
			</RegisterGroup>
			<RegisterGroup name="GLB_IRQ_RAW" description="GLB_IRQ_RAW is a raw interrupt register. The register does not support soft reset. Writing 1clears this register." value="0x00000000" startoffset="0x1338">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="iraw_rxd_down" description="Raw interrupt status (multi-packet interrupt) for a frame (frames) on the downstream port to be received by the CPU.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="27" property="WC"/>
				<Member name="iraw_freeeq_down" description="Raw interrupt status for the transmit queue of the downstream port to change from non-empty to empty, indicating that the transmit queue buffer changes from non-empty to empty and the CPU can write a group of new frames to be transmitted.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="26" property="WC"/>
				<Member name="iraw_stat_down" description="Raw interrupt status for downstream port status changes, indicating that an interrupt is generated when the MDIO obtains the speed change, duplex mode change, and link status change of the PHY in auto-negotiation mode.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="25" property="WC"/>
				<Member name="iraw_duplex_down" description="Raw interrupt status for downstream port duplex mode changes.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="24" property="WC"/>
				<Member name="iraw_speed_down" description="Raw interrupt status for downstream port speed mode changes.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="23" property="WC"/>
				<Member name="iraw_link_down" description="Raw interrupt status for downstream port link status changes.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="22" property="WC"/>
				<Member name="iraw_tx_down" description="Raw interrupt status for the completion of transmitting a frame from the CPU by the downstream port.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated.&lt;br&gt;Writing 1 clears this register." range="21" property="WC"/>
				<Member name="iraw_rx_down" description="Raw interrupt status for frames on the downstream port to be received by the CPU.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="20" property="WC"/>
				<Member name="reserved" description="Reserved." range="19:15" property="-"/>
				<Member name="iraw_unknow_vlanm" description="Unknown VLAN member raw interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="14" property="WC"/>
				<Member name="iraw_unknow_vlan" description="Unknown VLAN raw interrupt status.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="13" property="WC"/>
				<Member name="iraw_mdio_finish" description="Raw interrupt status for the MDIO to complete the operation required by the CPU.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="12" property="WC"/>
				<Member name="reserved" description="Reserved." range="11:8" property="-"/>
				<Member name="iraw_rxd_up" description="Raw interrupt status (multi-packet interrupt) for a frame (frames) on the upstream port to be received by the CPU.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="7" property="WC"/>
				<Member name="iraw_freeeq_up" description="Raw interrupt status for the transmit queue of the upstream port to change from non-empty to empty, indicating that the transmit queue buffer changes from non-empty to empty and the CPU can write a group of new frames to be transmitted.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="6" property="WC"/>
				<Member name="iraw_stat_up" description="Raw interrupt status for upstream port status changes, indicating that an interrupt is generated when the MDIO obtains the speed change, duplex mode change, and link status change of the PHY in auto-negotiation mode.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="5" property="WC"/>
				<Member name="iraw_duplex_up" description="Raw interrupt status for upstream port duplex mode changes.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="4" property="WC"/>
				<Member name="iraw_speed_up" description="Raw interrupt status for upstream port speed mode changes.&lt;br&gt;0: The interrupt is invalid.&lt;br&gt;1: The interrupt is valid. The speed mode changes.&lt;br&gt;Writing 1 clears this register." range="3" property="WC"/>
				<Member name="iraw_link_up" description="Raw interrupt status for upstream port link status changes.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="2" property="WC"/>
				<Member name="iraw_tx_up" description="Raw interrupt status for the completion of transmitting a frame from the CPU by the upstream port.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="1" property="WC"/>
				<Member name="iraw_rx_up" description="Raw interrupt status for frames on the upstream port to be received by the CPU.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="0" property="WC"/>
				<Register offset="0x1338"/>
			</RegisterGroup>
			<RegisterGroup name="GLB_DN_HOSTMAC_L32" description="The register does not support soft reset." value="0x00000000" startoffset="0x1340">
				<Member name="dn_local_mac" description="Lower 32-bit of the upstream port of the local MAC." range="31:0" property="RW"/>
				<Register offset="0x1340"/>
			</RegisterGroup>
			<RegisterGroup name="GLB_DN_HOSTMAC_H16" description="The register does not support soft reset." value="0x00000000" startoffset="0x1344">
				<Member name="reserved" description="reserved" range="31:16" property="RO"/>
				<Member name="dn_local_mac_47_32_" description="Upper 16 bits of the upstream port of the local MAC." range="15:0" property="RW"/>
				<Register offset="0x1344"/>
			</RegisterGroup>
			<RegisterGroup name="GLB_DN_HOSTMAC_ENA" description="The register does not support soft reset." value="0x00000000" startoffset="0x1348">
				<Member name="reserved" description="reserved" range="31:1" property="RW"/>
				<Member name="dn_host_ena" description="Local MAC enable for the upstream port. &lt;br&gt;0: disabled. The single local MAC mode is retained.&lt;br&gt;1: enabled. Two local MACs are supported." range="0" property="RW"/>
				<Register offset="0x1348"/>
			</RegisterGroup>
			<RegisterGroup name="UD_RX_DVCNT" description="UD_RX_DVCNT is an RXDV rising edge count register. The register does not support soft reset." value="0x00000000">
				<Member name="rxdvrise" description="Count of all RXDV rising edges." range="31:0" property="RO"/>
				<Register offset="0x0600"/>
				<Register offset="0x2600"/>
			</RegisterGroup>
			<RegisterGroup name="UD_RX_OCTS" description="UD_RX_OCTS is the register for the total number of bytes received. The register does notsupport soft reset." value="0x00000000">
				<Member name="ifinoctets" description="Count of all received bytes, including the bytes in correct frames, error frames, and preambles. The frames without valid start of frame delimiters (SFDs) are not counted." range="31:0" property="RO"/>
				<Register offset="0x0604"/>
				<Register offset="0x2604"/>
			</RegisterGroup>
			<RegisterGroup name="UD_RX_RIGHTOCTS" description="UD_RX_RIGHTOCTS is a register for the total number of bytes of received correct packets.The register does not support soft reset." value="0x00000000">
				<Member name="octets_rx" description="Count of the received bytes, including the bytes in correct frames and error frames but excluding the bytes in preambles. The frames without valid SFDs are not counted." range="31:0" property="RO"/>
				<Register offset="0x0608"/>
				<Register offset="0x2608"/>
			</RegisterGroup>
			<RegisterGroup name="UD_RX_RIGHTPKTS" description="UD_RX_RIGHTPKTS is a register for the total number of packets received by the port. Theregister does not support soft reset." value="0x00000000">
				<Member name="pkts" description="Count of all frames." range="31:0" property="RO"/>
				<Register offset="0x0610"/>
				<Register offset="0x2610"/>
			</RegisterGroup>
			<RegisterGroup name="UD_RX_BROADPKTS" description="UD_RX_BROADPKTS is a register for the count of correct broadcast packets. The registerdoes not support soft reset." value="0x00000000">
				<Member name="broadcastpkts" description="Count of broadcast frames with valid length and without CRC errors, excluding pause frames and transfer error frames." range="31:0" property="RO"/>
				<Register offset="0x0614"/>
				<Register offset="0x2614"/>
			</RegisterGroup>
			<RegisterGroup name="UD_RX_MULTPKTS" description="UD_RX_MULTPKTS is a register for the count of correct multicast packets. The registerdoes not support soft reset." value="0x00000000">
				<Member name="multicastpkts" description="Count of multicast frames with valid length and without CRC errors, excluding pause frames and transfer error frames." range="31:0" property="RO"/>
				<Register offset="0x0618"/>
				<Register offset="0x2618"/>
			</RegisterGroup>
			<RegisterGroup name="UD_RX_UNIPKTS" description="UD_RX_UNIPKTS is a register for the count of correct unicast packets. The register does notsupport soft reset." value="0x00000000">
				<Member name="ifinucastpkts" description="Count of unicast frames with valid length and without CRC errors, excluding pause frames and transfer error frames." range="31:0" property="RO"/>
				<Register offset="0x061C"/>
				<Register offset="0x261C"/>
			</RegisterGroup>
			<RegisterGroup name="UD_RX_ERRPKTS" description="UD_RX_ERRPKTS is a register for the total number of incorrect packets. The register doesnot support soft reset." value="0x00000000">
				<Member name="ifinerrors" description="Count of all error frames, including frames with CRC errors, runt frames, jumbo frames, and transfer error frames." range="31:0" property="RO"/>
				<Register offset="0x0620"/>
				<Register offset="0x2620"/>
			</RegisterGroup>
			<RegisterGroup name="UD_RX_CRCERR_PKTS" description="UD_RX_CRCERR_PKTS is a register for the count of CRC errors. The register does notsupport soft reset." value="0x00000000">
				<Member name="crcerr" description="Count of received frames with valid length (not runt and jumbo frames) but with CRC or alignment errors." range="31:0" property="RO"/>
				<Register offset="0x0624"/>
				<Register offset="0x2624"/>
			</RegisterGroup>
			<RegisterGroup name="UD_TX_PKTS" description="UD_TX_PKTS is a register for the total number of packets transmitted successfully. Theregister does not support soft reset." value="0x00000000">
				<Member name="pkts_tx" description="Count of all configured transmitted frames, excluding the frames dropped due to timeout and the transmitted frames whose length is not within valid range." range="31:0" property="RO"/>
				<Register offset="0x0780"/>
				<Register offset="0x2780"/>
			</RegisterGroup>
			<RegisterGroup name="UD_TX_BROADPKTS" description="UD_TX_BROADPKTS is a register for the count of broadcast packets transmittedsuccessfully. The register does not support soft reset." value="0x00000000">
				<Member name="broadcastpkts_tx" description="Count of broadcast frames transmitted successfully (excluding retransmission)." range="31:0" property="RO"/>
				<Register offset="0x0784"/>
				<Register offset="0x2784"/>
			</RegisterGroup>
			<RegisterGroup name="UD_TX_MULTPKTS" description="UD_TX_MULTPKTS is a register for the count of multicast packets transmitted successfully.The register does not support soft reset." value="0x00000000">
				<Member name="multicastpkts_tx" description="Count of multicast frames transmitted successfully (excluding retransmission)." range="31:0" property="RO"/>
				<Register offset="0x0788"/>
				<Register offset="0x2788"/>
			</RegisterGroup>
			<RegisterGroup name="UD_TX_UNIPKTS" description="UD_TX_UNIPKTS is a register for the count of unicast packets transmitted successfully. Theregister does not support soft reset." value="0x00000000">
				<Member name="ifoutucastpkts_tx" description="Count of unicast frames transmitted successfully (excluding retransmission)." range="31:0" property="RO"/>
				<Register offset="0x078C"/>
				<Register offset="0x278C"/>
			</RegisterGroup>
			<RegisterGroup name="UD_TX_OCTS" description="UD_TX_OCTS is a register for the total number of transmitted bytes. The register does notsupport soft reset." value="0x00000000">
				<Member name="octets_tx" description="Total number of transmitted bytes, including the bytes of retransmitted frames, correct frames, and error frames, but excluding the preamble bytes." range="31:0" property="RO"/>
				<Register offset="0x0790"/>
				<Register offset="0x2790"/>
			</RegisterGroup>
			<RegisterGroup name="UD_TX_RETRYCNT" description="UD_TX_RETRYCNT is a register for the total number of retransmission. The register doesnot support soft reset." value="0x00000000">
				<Member name="retry_times_tx" description="Count of retransmissions of transmitted frames." range="31:0" property="RO"/>
				<Register offset="0x0798"/>
				<Register offset="0x2798"/>
			</RegisterGroup>
			<RegisterGroup name="UD_TX_COLCNT" description="UD_TX_COLCNT is a register for the total number of collisions. The register does notsupport soft reset." value="0x00000000">
				<Member name="collisions" description="Count of collisions." range="31:0" property="RO"/>
				<Register offset="0x079C"/>
				<Register offset="0x279C"/>
			</RegisterGroup>
			<RegisterGroup name="UD_TX_LC_PKTS" description="UD_TX_LC_PKTS is a register for the count of packets with late collision. The register doesnot support soft reset." value="0x00000000">
				<Member name="dot3latecol" description="Count of packets with late collision." range="31:0" property="RO"/>
				<Register offset="0x07A0"/>
				<Register offset="0x27A0"/>
			</RegisterGroup>
			<RegisterGroup name="UD_TX_COLOK_PKTS" description="UD_TX_COLOK_PKTS is a register for the count of packets transmitted successfully withcollisions. The register does not support soft reset." value="0x00000000">
				<Member name="dot3col_ok" description="Count of packets transmitted successfully with collisions." range="31:0" property="RO"/>
				<Register offset="0x07A4"/>
				<Register offset="0x27A4"/>
			</RegisterGroup>
			<RegisterGroup name="UD_TX_RETRY15_PKTS" description="UD_TX_RETRY15_PKTS is a register for the count of packets dropped due to more than 15times of retransmission. The register does not support soft reset." value="0x00000000">
				<Member name="dot3excessivecol" description="Count of the packets dropped due to more than 15 times of retransmission." range="31:0" property="RO"/>
				<Register offset="0x07A8"/>
				<Register offset="0x27A8"/>
			</RegisterGroup>
			<RegisterGroup name="UD_TX_RETRYN_PKTS" description="UD_TX_RETRYN_PKTS is a register for the count of packets with the collision count beingequal to the threshold. The register does not support soft reset." value="0x00000000">
				<Member name="dot3colcnt" description="Count of packets with the collision count being equal to the threshold." range="31:0" property="RO"/>
				<Register offset="0x07AC"/>
				<Register offset="0x27AC"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="TSI" i2cSupport="false">
			<Module baseAddress="0x600C0000"/>
			<RegisterGroup name="TS_INTERFACE" description="TS_INTERFACE is an interface register." value="0x00100015" startoffset="0x1100+0x100*i">
				<Member name="port_sel" description="Port enable control.&lt;br&gt;0: disabled&lt;br&gt;1:enabled&lt;br&gt;The parameters of a port can be configured only when the port is disabled." range="31" property="RW"/>
				<Member name="bit_sel" description="Input bit select.&lt;br&gt;0: cdata[7] is the parallel most significant bit (MSB) or a serial data line.&lt;br&gt;1: cdata[0] is the parallel MSB or a serial data line." range="30" property="RW"/>
				<Member name="serial_sel" description="Input mode select.&lt;br&gt;0: parallel input&lt;br&gt;1: serial input" range="29" property="RW"/>
				<Member name="reserved" description="Reserved." range="28:26" property="RO"/>
				<Member name="err_pol" description="Port err signal polarity select.&lt;br&gt;0: A data error occurs when the err signal is high.&lt;br&gt;1: A data error occurs when the err signal is low." range="25" property="RW"/>
				<Member name="vld_pol" description="Port vld signal polarity select.&lt;br&gt;0: active high&lt;br&gt;1: active low" range="24" property="RW"/>
				<Member name="sync_pol" description="sync signal polarity select of the S port.&lt;br&gt;0: active high&lt;br&gt;1: active low" range="23" property="RW"/>
				<Member name="err_bypass" description="Port err signal mask select. After mask, the input err values are not sampled and considered as invalid values.&lt;br&gt;0: not mask&lt;br&gt;1: mask" range="22" property="RW"/>
				<Member name="sync_mode" description="Parallel input mode select.&lt;br&gt;00: sync/burst mode&lt;br&gt;01: sync/valid mode&lt;br&gt;10: nosync_fixed mode. The length of each detected packet is specified by nosync_fixed_204.&lt;br&gt;11: nosync_188_204 mode. The hardware needs to check whether the packet length is 204 bytes or 188 bytes." range="21:20" property="RW"/>
				<Member name="reserved" description="Reserved." range="19:17" property="RO"/>
				<Member name="nosync_fixed_204" description="Valid in nosync_fixed mode only.&lt;br&gt;0: detect 188-byte packets&lt;br&gt;1: detect 204-byte packets" range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:6" property="RO"/>
				<Member name="syncoff_th" description="Synchronization loss judgment threshold. This field is valid in nosync mode." range="5:4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="RO"/>
				<Member name="syncon_th" description="Synchronization lock judgment threshold. This field is valid in nosync mode." range="2:0" property="RW"/>
				<Register offset="0x1100"/>
				<Register offset="0x1200"/>
				<Register offset="0x1300"/>
			</RegisterGroup>
			<RegisterGroup name="SWITCH_CFG" description="SWITCH_CFG is an input stream switch register." value="0x80000000" startoffset="0x3A00">
				<Member name="switch_fake_en" description="Reserved. Indicates fake packet add enable. This field is for internal debugging and determines whether to transmit fake packets after the DMX is disabled." range="31" property="RO"/>
				<Member name="reserved" description="Reserved." range="30:19" property="RO"/>
				<Member name="switch_cfg5" description="Switch configuration information.&lt;br&gt;TS source select of DMX5." range="18:16" property="RW"/>
				<Member name="reserved" description="Reserved (read as 0)." range="15" property="RO"/>
				<Member name="switch_cfg4" description="Switch configuration information.&lt;br&gt;TS source select of DMX4." range="14:12" property="RW"/>
				<Member name="reserved" description="Reserved (read as 0)." range="11" property="RO"/>
				<Member name="switch_cfg3" description="Switch configuration information.&lt;br&gt;TS source select of DMX3." range="10:8" property="RW"/>
				<Member name="reserved" description="Reserved (read as 0)." range="7" property="RO"/>
				<Member name="switch_cfg2" description="Switch configuration information.&lt;br&gt;TS source select of DMX2." range="6:4" property="RW"/>
				<Member name="reserved" description="Reserved (read as 0)." range="3" property="RO"/>
				<Member name="switch_cfg1" description="Switch configuration information.&lt;br&gt;TS source select of DMX1.&lt;br&gt;000: disable the TS source&lt;br&gt;001–011: select the streams from TS0–TS2 ports separately in DVB mode&lt;br&gt;100–111: select the streams from IP0–IP3 internal ports separately in IP mode" range="2:0" property="RW"/>
				<Register offset="0x3A00"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="TDE" i2cSupport="false">
			<Module baseAddress="0x10120000"/>
			<RegisterGroup name="TDE_CTRL" description="TDE_CTRL is a global control register. It is used to control the internal operations of the TDE.The CPU can read or write to any of four global control signals, but the operation does notalways take effect." value="0x00000000" startoffset="0x808">
				<Member name="reserved" description="Reserved." range="31:4" property="-"/>
				<Member name="susp1" description="Suspend operation 1.&lt;br&gt;0: Suspend operation 1 does not take effect.&lt;br&gt;1: A suspend operation is performed after the current node command is executed.&lt;br&gt;When the TDE is suspended, the TDE continues to perform internal operations after this bit is cleared by the software." range="3" property="RW"/>
				<Member name="susp2" description="Suspend operation 2.&lt;br&gt;0: Suspend operation 2 does not take effect.&lt;br&gt;1: Other tasks (excluding vertical scaling and anti-flicker) are suspended after the operation on the current line is performed.&lt;br&gt;When the TDE is suspended, the TDE continues to perform internal operations after this bit is cleared by the software." range="2" property="RW"/>
				<Member name="susp3" description="Suspend operation 3.&lt;br&gt;0: Suspend operation 3 does not take effect.&lt;br&gt;1: A suspended operation is performed after the latest node command is read.&lt;br&gt;When the TDE is suspended, the TDE continues to perform internal operations after this bit is cleared by the software." range="1" property="RW"/>
				<Member name="aqstart" description="TDE start enable in AQ mode.&lt;br&gt;0: The TDE does not start.&lt;br&gt;1: After 1 is written to this bit, the TDE starts to work. Then, the hardware automatically sets this bit to 0.&lt;br&gt;When the TDE is idle and the AQ mode is enabled, an AQ operation is performed after this bit is set to 1." range="0" property="RW"/>
				<Register offset="0x808"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_AQ_ADDR" description="TDE_AQ_ADDR is a current node instruction pointer register of the AQ linked list. It showsthe current AQ node. When the AQ is working, this register stores the instruction pointer ofthe AQ node that is being executed. When the AQ does not work, this register stores theinstruction pointer of the last AQ node that is processed by the previous AQ linked list." value="0x00000000" startoffset="0x810">
				<Member name="cur_aq_node_addr" description="Start address of the current node of the AQ linked list." range="31:0" property="RO"/>
				<Register offset="0x810"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_STA" description="TDE_STA is a working status register. It shows the internal working status of the TDE." value="0x00000000" startoffset="0x814">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="line_num" description="Number of the completed lines on the current node.&lt;br&gt;Note: This field is valid only when the TDE is suspended." range="27:16" property="RO"/>
				<Member name="reserved" description="Reserved." range="15:4" property="-"/>
				<Member name="link_empty" description="No linked list indicator." range="3" property="RO"/>
				<Member name="aqsq_exec" description="Internal working mode of the TDE.&lt;br&gt;0: AQ mode&lt;br&gt;1: SQ mode" range="2" property="RO"/>
				<Member name="dq_busy" description="DMA queue busy indicator." range="1" property="RO"/>
				<Member name="busy" description="TDE busy indicator&lt;br&gt;0: idle&lt;br&gt;1: busy. That is, the TDE is working." range="0" property="RO"/>
				<Register offset="0x814"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_SQ_CTRL" description="TDE_SQ_CTRL is an SQ linked list control register. It used to control the working status ofthe SQ linked lists. The registers for controlling SQ linked lists must be configured in thefollowing sequence: TDE_SQ_OFFSET, TDE_SQ_NADDR, TDE_SQ_UPDATE, andTDE_SQ_CTRL." value="0x00000000" startoffset="0x81C">
				<Member name="sq_update_flag" description="SQ linked list header update flag.&lt;br&gt;0: The SQ linked list header can be updated.&lt;br&gt;1: The SQ linked list header cannot be updated." range="31" property="RO"/>
				<Member name="reserved" description="Reserved." range="30:26" property="-"/>
				<Member name="sq_en" description="SQ linked list enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;This bit is automatically cleared." range="25" property="RW"/>
				<Member name="sq_oper_mode" description="SQ linked list exception processing.&lt;br&gt;0x0: After the operation on the current SQ linked list is complete, the next SQ linked list is enabled.&lt;br&gt;0x4: After the operation on the current line of the current node in the current linked list is complete, the next SQ linked list is enabled.&lt;br&gt;Other values: reserved" range="24:21" property="RW"/>
				<Member name="reserved" description="Reserved." range="20:2" property="-"/>
				<Member name="trig_cond" description="Trigger condition.&lt;br&gt;0: The top field is triggered in frame sync mode.&lt;br&gt;1: The bottom field is triggered in frame sync mode." range="1" property="RW"/>
				<Member name="trig_mode" description="Trigger mode.&lt;br&gt;0: frame sync&lt;br&gt;1: field sync" range="0" property="RW"/>
				<Register offset="0x81C"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_SQ_OFFSET" description="TDE_SQ_OFFSET is an SQ trigger delay register." value="0x00000000" startoffset="0x828">
				<Member name="syn_offset" description="Timing offset of the SQ linked list. The maximum value is 0x83D600." range="31:0" property="RW"/>
				<Register offset="0x828"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_AQ_CTRL" description="TDE_AQ_CTRL is an AQ linked list control register." value="0x00000000" startoffset="0x82C">
				<Member name="reserved" description="Reserved." range="31:25" property="-"/>
				<Member name="aq_en" description="AQ linked list enabled.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="24" property="RW"/>
				<Member name="aq_oper_mode" description="AQ linked list retrigger mode.&lt;br&gt;0x0: After the operation on the current AQ linked list is complete, the next AQ linked list is enabled.&lt;br&gt;0x4: After the operation on the current line of the current node in the current linked list is complete, the next AQ linked list is enabled.&lt;br&gt;Other values: reserved" range="23:20" property="RW"/>
				<Member name="reserved" description="Reserved." range="19:0" property="-"/>
				<Register offset="0x82C"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_NADDR" description="TDE_NADDR is a next instruction pointer register for the current operation." value="0x00000000" startoffset="0x838">
				<Member name="next_node_addr" description="Start address of the next node of the linked list." range="31:0" property="RO"/>
				<Register offset="0x838"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_UPDATE" description="TDE_UPDATE is a next instruction update parameter flag register for the current operation." value="0x00000000" startoffset="0x83C">
				<Member name="next_update_ind" description="Indicator of updating registers on the next node of the linked list.&lt;br&gt;For example, if this register is set to 0010_0000_1011_0001_0000_0000_0100_1110, the registers corresponding to bits 1, 2, 3, 6, 16, 20, 21, 23, and 29 will be updated on the next node. For details about the mapping between bits and registers, see Table 8-1." range="31:0" property="RO"/>
				<Register offset="0x83C"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_INS" description="TDE_INS is an instruction control register. The macroblock processing mode depends on thevalue of mb_mode. The details are as follows:&lt;br&gt;&lt;ul&gt;&lt;li&gt;When mb_mode is 3'b000, macroblock processing mode 0 is used. This mode is a high-quality luminance scaling mode. The luminance data is from source 1 channel.&lt;br&gt;&lt;/li&gt;&lt;li&gt;When mb_mode is 3'b010, macroblock processing mode 1 is used. This mode is a high-quality chrominance scaling mode. The luminance data is from source 2 channel. Alphaprocessing is supported for the chrominance data and the data from source 1 channel.&lt;br&gt;&lt;/li&gt;&lt;li&gt;When mb_mode is 3'b100, macroblock processing mode 2 is used. The luminance data isfrom source 1 channel. After being scaled, the chrominance data is combined with theluminance data.&lt;br&gt;&lt;/li&gt;&lt;li&gt;When mb_mode is 3'b110, macroblock processing mode 3 is used. The luminance data isfrom source 1 channel, and the chrominance data is from source 2 channel. After beingcombined, the luminance data and chrominance data are scaled.&lt;br&gt;&lt;/li&gt;&lt;li&gt;When mb_mode is 3'b001, macroblock processing mode 4 is used. The luminance data isfrom source 2 channel, and the background data is from source 1 channel. Alphaprocessing is supported for the luminance data and chrominance data.&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x880">
				<Member name="last_block_flag" description="Last block flag.&lt;br&gt;1: The block is the last one.&lt;br&gt;0: The block is not the last one." range="31" property="RO"/>
				<Member name="first_block_flag" description="First block flag.&lt;br&gt;1: The block is the first one.&lt;br&gt;0: The block is not the first one." range="30" property="RO"/>
				<Member name="block_flag" description="Block flag.&lt;br&gt;0: No blocks exist.&lt;br&gt;1: Blocks exist." range="29" property="RO"/>
				<Member name="ocsc_conv" description="Output CSC enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="28" property="RO"/>
				<Member name="sq_irq_mask" description="0x00: Interrupts are masked.&lt;br&gt;0x01: The SQ linked list line suspend interrupt or line break interrupt is enabled.&lt;br&gt;0x02: A suspend interrupt is enabled. It indicates that when the latest node command information is read by the SQ linked list but no operation is performed on images.&lt;br&gt;0x04: The current node completion interrupt of the SQ linked list is enabled.&lt;br&gt;0x08: The SQ linked list completion interrupt is enabled.&lt;br&gt;0x10: The SQ linked list header update completion interrupt is enabled.&lt;br&gt;Other values: reserved" range="27:23" property="RO"/>
				<Member name="aq_irq_mask" description="0x0: Interrupts are masked.&lt;br&gt;0x1: The AQ linked list line suspend interrupt or line break interrupt is enabled.&lt;br&gt;0x2: A suspend interrupt is enabled. It indicates that when the latest node command information is read by the AQ linked list but no operation is performed on images.&lt;br&gt;0x4: The current node completion interrupt of the AQ linked list is enabled.&lt;br&gt;0x8: The AQ linked list completion interrupt is enabled.&lt;br&gt;Other values: reserved" range="22:19" property="RO"/>
				<Member name="mb_en" description="Macroblock operation enable." range="18" property="RO"/>
				<Member name="mb_mode" description="Macroblock processing mode.&lt;br&gt;000: high-quality luminance 2D filtering and scaling, VF/FF/HF&lt;br&gt;010: high-quality chrominance 2D filtering, scaling or up sampling, VF/HF&lt;br&gt;100: Y/C combination after high-quality chrominance vertical/horizontal 2D up sampling&lt;br&gt;110: Y/C 2D filtering and scaling after Y/C combination (chrominance line copy, chrominance horizontal up sampling, or no chrominance processing)&lt;br&gt;001: luminance blending&lt;br&gt;Other values: reserved" range="17:15" property="RO"/>
				<Member name="clip" description="Clip enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="14" property="RO"/>
				<Member name="icsc_sel" description="Input CSC select.&lt;br&gt;0: Source 2 uses input CSC.&lt;br&gt;1: Source 1 uses input CSC." range="13" property="RO"/>
				<Member name="color_key" description="Colorkey enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="12" property="RO"/>
				<Member name="clut" description="CLUT enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="11" property="RO"/>
				<Member name="reserved" description="Reserved." range="10" property="-"/>
				<Member name="y2_en" description="Y2 channel enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="9" property="RO"/>
				<Member name="y1_en" description="Y1 channel enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="8" property="RO"/>
				<Member name="dfe_en" description="Anti-flicker filter enable for source 2 channel.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="7" property="RO"/>
				<Member name="_d_rsz" description="2D scaling enable for source 2 channel.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="6" property="RO"/>
				<Member name="ics_conv" description="Input CSC enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="5" property="RO"/>
				<Member name="src2_mod" description="Operating mode of source 2.&lt;br&gt;00: Source 2 is disabled.&lt;br&gt;01: The data of source 2 is from the image data in the memory.&lt;br&gt;10: The data of source 2 is from the pattern data in the memory.&lt;br&gt;11: The data of source 2 is from the color filling register." range="4:3" property="RO"/>
				<Member name="src1_mod" description="Operating mode of source 1.&lt;br&gt;000: Source 1 is disabled.&lt;br&gt;001: The data of source 1 is from the image data in the memory (excluding DMA).&lt;br&gt;011: The data of source 1 is from the color filling register (excluding fast filling).&lt;br&gt;101: Source 1 performs the DMA operation.&lt;br&gt;111: Source 1 performs the direct filling operation.&lt;br&gt;Other values: reserved" range="2:0" property="RO"/>
				<Register offset="0x880"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_S1_ADDR" description="TDE_S1_ADDR is the source 1 bitmap base address register." value="0x00000000" startoffset="0x884">
				<Member name="s1_base_addr" description="Base address of source 1 bitmap, that is, address when the bitmap coordinates are (0, 0).&lt;br&gt;For the date type of byte or sub byte, the base address must be on the byte boundary, and the pitch can be any multiple of the number of bytes.&lt;br&gt;For the data type of half-word, the base address must on the half-word boundary, and the pitch must be a multiple of (2 x number of bytes).&lt;br&gt;For the data type of 24-bit, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of word, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of YCbCr422, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes)." range="31:0" property="RO"/>
				<Register offset="0x884"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_S1_TYPE" description="TDE_S1_TYPE is the source 1 bitmap type register." value="0x00000000" startoffset="0x888">
				<Member name="reserved" description="Reserved." range="31:30" property="-"/>
				<Member name="rgb_exp" description="RGB extension mode.&lt;br&gt;0: Lower bits are stuffed with 0s.&lt;br&gt;1: Data on upper bits are copied to lower bits." range="29" property="RO"/>
				<Member name="reserved" description="Reserved." range="28:26" property="-"/>
				<Member name="v_scan_ord" description="Vertical scanning direction.&lt;br&gt;0: from top downwards&lt;br&gt;1: from bottom upwards" range="25" property="RO"/>
				<Member name="h_scan_ord" description="Horizontal scanning direction.&lt;br&gt;0: from left rightwards&lt;br&gt;1: from right leftwards" range="24" property="RO"/>
				<Member name="reserved" description="Reserved." range="23:22" property="-"/>
				<Member name="alpha_range" description="8-bit alpha range.&lt;br&gt;0: 0–128&lt;br&gt;1: 0–255" range="21" property="RO"/>
				<Member name="s1_color_fmt" description="Pixel format of source 1.&lt;br&gt;0x00: RGB444&lt;br&gt;0x01: RGB555&lt;br&gt;0x02: RGB565&lt;br&gt;0x03: RGB888&lt;br&gt;0x04: ARGB4444&lt;br&gt;0x05: ARGB1555&lt;br&gt;0x06: ARGB8565&lt;br&gt;0x07: ARGB8888&lt;br&gt;0x08: CLUT1. The most significant bit (MSB) maps to the rightmost pixel, which is similar to the little endian mode.&lt;br&gt;0x09: CLUT2. The MSB maps to the rightmost pixel, which is similar to the little endian mode.&lt;br&gt;0x0A: CLUT4. The MSB maps to the rightmost pixel, which is similar to the little endian mode.&lt;br&gt;0x0B: CLUT8&lt;br&gt;0x0C: ACLUT44&lt;br&gt;0x0D: ACLUT88&lt;br&gt;0x10: A1. The MSB maps to the rightmost pixel, which is similar to the little endian mode.&lt;br&gt;0x11: A8&lt;br&gt;0x12: YCbCr888&lt;br&gt;0x13: AYCbCr8888&lt;br&gt;0x14: YCbCr422. The X coordinate of the start pixel and the pixel width are even numbers.&lt;br&gt;0x16: byte&lt;br&gt;0x17: half-word&lt;br&gt;0x18: YCbCr400MB&lt;br&gt;0x19: YCbCr422MBH (1x2). The X coordinate of the start pixel and the pixel width are even numbers.&lt;br&gt;0x1A: YCbCr422MBV (2x1)&lt;br&gt;0x1B: YCbCr420MB. The X coordinate of the start pixel and the pixel width are even numbers.&lt;br&gt;0x1C: YCbCr444MB&lt;br&gt;Other values: reserved" range="20:16" property="RO"/>
				<Member name="pitch" description="Line pitch of source 1 (only for lower 14 bits).&lt;br&gt;For the date type of byte or sub byte, the base address must be on the byte boundary, and the pitch can be any multiple of the number of bytes.&lt;br&gt;For the data type of half-word, the base address must on the half-word boundary, and the pitch must be a multiple of (2 x number of bytes).&lt;br&gt;For the data type of 24-bit, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of word, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of YCbCr422, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes)." range="15:0" property="RO"/>
				<Register offset="0x888"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_S1_XY" description="TDE_S1_XY is the source 1 bitmap start position register." value="0x00000000" startoffset="0x88C">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="y_coord" description="Start Y coordinate of the source 1 image to be processed. The coordinate is related to the vertical scanning direction." range="27:16" property="RO"/>
				<Member name="reserved" description="Reserved." range="15:12" property="-"/>
				<Member name="x_coord" description="Start X coordinate of the source 1 image to be processed. The coordinate is related to the horizontal scanning direction." range="11:0" property="RO"/>
				<Register offset="0x88C"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_S1_FILL" description="TDE_S1_FILL is the source 1 bitmap filling color register." value="0x00000000" startoffset="0x890">
				<Member name="s1_color_fill" description="Filling color of source 1.&lt;br&gt;Direct filling mode: A pixel is filled based on the image formats supported by source 1. The filled bits must be lower-bit aligned. For example, s1_color_fill bit[0] must be filled with 1 bpp pixel.&lt;br&gt;Color filling mode: The ARGB or AYCbCr 32-bit true color that is configured by using the software is used." range="31:0" property="RO"/>
				<Register offset="0x890"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_S2_ADDR" description="TDE_S2_ADDR is the source 2 bitmap base address register." value="0x00000000" startoffset="0x894">
				<Member name="s2_base_addr" description="Base address of source 2 bitmap, that is, address when the bitmap coordinates are (0, 0).&lt;br&gt;For the date type of byte or sub byte, the base address must be on the byte boundary, and the pitch can be any multiple of the number of bytes.&lt;br&gt;For the data type of half-word, the base address must on the half-word boundary, and the pitch must be a multiple of (2 x number of bytes).&lt;br&gt;For the data type of 24-bit, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of word, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of YCbCr422, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes)." range="31:0" property="RO"/>
				<Register offset="0x894"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_S2_TYPE" description="TDE_S2_TYPE is the source 2 bitmap type register." value="0x00000000" startoffset="0x898">
				<Member name="reserved" description="Reserved." range="31:30" property="RO"/>
				<Member name="rgb_exp" description="RGB extension mode.&lt;br&gt;0: Lower bits are stuffed with 0s.&lt;br&gt;1: Data on upper bits are copied to lower bits." range="29" property="RO"/>
				<Member name="reserved" description="Reserved." range="28:26" property="RO"/>
				<Member name="v_scan_ord" description="Vertical scanning direction.&lt;br&gt;0: from top downwards&lt;br&gt;1: from bottom upwards" range="25" property="RO"/>
				<Member name="h_scan_ord" description="Horizontal scanning direction.&lt;br&gt;0: from left rightwards&lt;br&gt;1: from right leftwards" range="24" property="RO"/>
				<Member name="reserved" description="Reserved." range="23" property="RO"/>
				<Member name="colorize_en" description="Colorize enable.&lt;br&gt;0: disabled.&lt;br&gt;1: enabled" range="22" property="RO"/>
				<Member name="alpha_range" description="8-bit alpha range.&lt;br&gt;0: 0–128&lt;br&gt;1: 0–255" range="21" property="RO"/>
				<Member name="s2_color_fmt" description="Pixel format of source 2.&lt;br&gt;0x00: RGB444&lt;br&gt;0x01: RGB555&lt;br&gt;0x02: RGB565&lt;br&gt;0x03: RGB888&lt;br&gt;0x04: ARGB4444&lt;br&gt;0x05: ARGB1555&lt;br&gt;0x06: ARGB8565&lt;br&gt;0x07: ARGB8888&lt;br&gt;0x08: CLUT1. The MSB maps to the rightmost pixel.&lt;br&gt;0x09: CLUT2. The MSB maps to the rightmost pixel.&lt;br&gt;0x0A: CLUT4. The MSB maps to the rightmost pixel.&lt;br&gt;0x0B: CLUT8&lt;br&gt;0x0C: ACLUT44&lt;br&gt;0x0D: ACLUT88&lt;br&gt;0x10: A1. The MSB maps to the rightmost pixel.&lt;br&gt;0x11: A8&lt;br&gt;0x12: YCbCr888&lt;br&gt;0x13: AYCbCr8888&lt;br&gt;0x14: YCbCr422. The X coordinate of the start pixel and the pixel width are even numbers.&lt;br&gt;0x18: YCbCr400MB&lt;br&gt;0x19: YCbCr422MBH (1x2). The X coordinate of the start pixel and the pixel width are even numbers.&lt;br&gt;0x1A: YCbCr422MBV (2x1)&lt;br&gt;0x1B: YCbCr420MB. The X coordinate of the start pixel and the pixel width are even numbers.&lt;br&gt;0x1C: YCbCr444MB&lt;br&gt;Other values: reserved" range="20:16" property="RO"/>
				<Member name="pitch" description="Line pitch of source 2 (only for lower 14 bits).&lt;br&gt;For the date type of byte or sub byte, the base address must be on the byte boundary, and the pitch can be any multiple of the number of bytes.&lt;br&gt;For the data type of half-word, the base address must on the half-word boundary, and the pitch must be a multiple of (2 x number of bytes).&lt;br&gt;For the data type of 24-bit, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of word, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of YCbCr422, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes)." range="15:0" property="RO"/>
				<Register offset="0x898"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_S2_XY" description="TDE_S2_XY is the source 2 bitmap start position register." value="0x00000000" startoffset="0x89C">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="y_coord" description="Start Y coordinate of the source 2 image to be processed. The coordinate is related to the vertical scanning direction." range="27:16" property="RO"/>
				<Member name="reserved" description="Reserved." range="15:12" property="-"/>
				<Member name="x_coord" description="Start X coordinate of the source 2 image to be processed. The coordinate is related to the horizontal scanning direction." range="11:0" property="RO"/>
				<Register offset="0x89C"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_S2_SIZE" description="TDE_S2_SIZE is the source 2 bitmap size register." value="0x00000000" startoffset="0x8A0">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="s2_height" description="Image height of source 2." range="27:16" property="RO"/>
				<Member name="reserved" description="Reserved." range="15:12" property="-"/>
				<Member name="s2_width" description="Image width of source 2." range="11:0" property="RO"/>
				<Register offset="0x8A0"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_S2_FILL" description="TDE_S2_FILL is the source 2 bitmap filling color register." value="0x00000000" startoffset="0x8A4">
				<Member name="s2_color_fill" description="Filling color of source 2.&lt;br&gt;Color filling mode: The ARGB or AYCbCr 32-bit true color that is configured by using the software is used." range="31:0" property="RO"/>
				<Register offset="0x8A4"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_TAR_ADDR" description="TDE_TAR_ADDR is a target bitmap base address register." value="0x00000000" startoffset="0x8A8">
				<Member name="target_base_addr" description="Base address of the target bitmap, that is, address when the bitmap coordinates are (0, 0).&lt;br&gt;For the date type of byte or sub byte, the base address must be on the byte boundary, and the pitch can be any multiple of the number of bytes.&lt;br&gt;For the data type of half-word, the base address must on the half-word boundary, and the pitch must be a multiple of (2 x number of bytes).&lt;br&gt;For the data type of 24-bit, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of word, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of YCbCr422, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes)." range="31:0" property="RO"/>
				<Register offset="0x8A8"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_TAR_TYPE" description="TDE_TAR_TYPE is a target bitmap type register." value="0x00000000" startoffset="0x8AC">
				<Member name="reserved" description="Reserved." range="31:29" property="-"/>
				<Member name="dfe_firstline_oe" description="First line output enable during anti-flicker.&lt;br&gt;0: output&lt;br&gt;1: no output" range="28" property="RO"/>
				<Member name="dfe_lastline_oe" description="Last line output enable during anti-flicker.&lt;br&gt;0: output&lt;br&gt;1: no output" range="27" property="RO"/>
				<Member name="rgb_round" description="RGB truncation mode.&lt;br&gt;0: round off&lt;br&gt;1: 2x2 dither" range="26" property="RO"/>
				<Member name="v_scan_ord" description="Vertical scanning direction.&lt;br&gt;0: from top downwards&lt;br&gt;1: from bottom upwards" range="25" property="RO"/>
				<Member name="h_scan_ord" description="Horizontal scanning direction.&lt;br&gt;0: from left rightwards&lt;br&gt;1: from right leftwards" range="24" property="RO"/>
				<Member name="alpha_from" description="Alpha source of the output data.&lt;br&gt;00: The alpha value included in the output data format is obtained from the alpha_blending scaling result or anti-flicker result.&lt;br&gt;01: The alpha value included in the output data format is obtained from source 1 bitmap.&lt;br&gt;10: The alpha value included in the output data format is obtained from source 2 bitmap.&lt;br&gt;11: The alpha value of the bitmap is obtained from the internal global alpha value of the chip.&lt;br&gt;Note: This field is valid when TDE_ALU[alu_mod] is not 0x4, 0x5, or 0x8." range="23:22" property="RO"/>
				<Member name="alpha_range" description="8-bit alpha range.&lt;br&gt;0: 0–128&lt;br&gt;1: 0–255" range="21" property="RO"/>
				<Member name="target_color_fmt" description="Pixel format of the target bitmap.&lt;br&gt;0x00: RGB444&lt;br&gt;0x01: RGB555&lt;br&gt;0x02: RGB565&lt;br&gt;0x03: RGB888&lt;br&gt;0x04: ARGB4444&lt;br&gt;0x05: ARGB1555&lt;br&gt;0x06: ARGB8565&lt;br&gt;0x07: ARGB8888&lt;br&gt;0x08: CLUT1. The MSB maps to the rightmost pixel.&lt;br&gt;0x09: CLUT2. The MSB maps to the rightmost pixel.&lt;br&gt;0x0A: CLUT4. The MSB maps to the rightmost pixel.&lt;br&gt;0x0B: CLUT8&lt;br&gt;0x0C: ACLUT44&lt;br&gt;0x0D: ACLUT88&lt;br&gt;0x10: A1. The MSB maps to the rightmost pixel.&lt;br&gt;0x11: A8&lt;br&gt;0x12: YCbCr888&lt;br&gt;0x13: AYCbCr8888&lt;br&gt;0x14: YCbCr422. The X coordinate of the start pixel and the pixel width are even numbers.&lt;br&gt;0x16: byte&lt;br&gt;0x17: half-word&lt;br&gt;0x18: YCbCr400MB&lt;br&gt;0x19: YCbCr422MBH (1x2). The X coordinate of the start pixel and the pixel width are even numbers.&lt;br&gt;0x1A: YCbCr422MBV (2x1)&lt;br&gt;0x1B: YCbCr420MB. The X coordinate of the start pixel and the pixel width are even numbers.&lt;br&gt;0x1C: YCbCr444MB&lt;br&gt;Other values: reserved&lt;br&gt;Note: The output data in sub byte format must be byte-aligned." range="20:16" property="RO"/>
				<Member name="pitch" description="Line pitch of the target bitmap (only for the lower 14 bits).&lt;br&gt;For the date type of byte or sub byte, the base address must be on the byte boundary, and the pitch can be any multiple of the number of bytes.&lt;br&gt;For the data type of half-word, the base address must on the half-word boundary, and the pitch must be a multiple of (2 x number of bytes).&lt;br&gt;For the data type of 24-bit, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of word, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes).&lt;br&gt;For the data type of YCbCr422, the base address must on the word boundary, and the pitch must be a multiple of (4 x number of bytes)." range="15:0" property="RO"/>
				<Register offset="0x8AC"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_TAR_XY" description="TDE_TAR_XY is a target bitmap start position register." value="0x00000000" startoffset="0x8B0">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="y_coord" description="Start Y coordinate of the target bitmap. The coordinate is related to the vertical scanning direction." range="27:16" property="RO"/>
				<Member name="reserved" description="Reserved." range="15:12" property="-"/>
				<Member name="x_coord" description="Start X coordinate of the target bitmap. The coordinate is related to the horizontal scanning direction." range="11:0" property="RO"/>
				<Register offset="0x8B0"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_TS_SIZE" description="TDE_TS_SIZE is target bitmap size register. If source 1 is used in non-macroblock mode, the size of source 1 bitmap is the same as that of the target bitmap. In macroblock mode, the size of source 1 bitmap is related to the TDE_S2_SIZE register. For details, see the description of TDE_S2_SIZE." value="0x00000000" startoffset="0x8B4">
				<Member name="alpha_threshold_hi" description="If the output format is ARGB1555, alpha_threshold is the judgment threshold. alpha_threshold_hi indicates the upper four bits, and alpha_threshold_lo indicates the lower four bits. When the output alpha value is greater than or equal to alpha_threshold, the output 1-bit alpha value is 1; when the output alpha value is less than alpha_threshold, the output 1-bit alpha value is 0." range="31:28" property="RO"/>
				<Member name="s1_height" description="Height of the output target bitmap or source 1 bitmap. The sizes of source 1 bitmap and the target bitmap are always the same." range="27:16" property="RO"/>
				<Member name="alpha_threshold_lo" description="If the output format is ARGB1555, alpha_threshold is the judgment threshold. alpha_threshold_hi indicates the upper four bits, and alpha_threshold_lo indicates the lower four bits. When the output alpha value is greater than or equal to alpha_threshold, the output 1-bit alpha value is 1; when the output alpha value is less than alpha_threshold, the output 1-bit alpha value is 0." range="15:12" property="RO"/>
				<Member name="s1_width" description="Width of the output target bitmap or source 1 bitmap. The sizes of source 1 bitmap and the target bitmap are always the same." range="11:0" property="RO"/>
				<Register offset="0x8B4"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_COLOR_CONV" description="TDE_COLOR_CONV is a CLUT and CSC control register." value="0x00000000" startoffset="0x8B8">
				<Member name="alpha1" description="In ARGB1555 mode, if the RGB extension mode rgb_exp is 1 and the alpha value is 1, alpha1 is used to extend the alpha bit to eight bits. The alpha value ranges from 0x00 to 0x80. The value 0x00 indicates fully transparent, and the value 0x80 indicates opaque." range="31:24" property="RO"/>
				<Member name="alpha0" description="In ARGB1555 mode, if the RGB extension mode rgb_exp is 1 and the alpha value is 0, alpha0 is used to extend the alpha bit to eight bits. The alpha value ranges from 0x00 to 0x80. The value 0x00 indicates fully transparent, and the value 0x80 indicates opaque." range="23:16" property="RO"/>
				<Member name="icsc_custom_en" description="User-defined input CSC enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled (user-defined CSC parameters are used.)" range="15" property="RO"/>
				<Member name="icsc_reload" description="User-defined input CSC parameter update enable.&lt;br&gt;0: not updated&lt;br&gt;1: updated" range="14" property="RO"/>
				<Member name="ocsc_custom_en" description="User-defined output CSC enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled (user-defined CSC parameters are used.)" range="13" property="RO"/>
				<Member name="ocsc_reload" description="User-defined output CSC parameter update enable.&lt;br&gt;0: not updated&lt;br&gt;1: updated" range="12" property="RO"/>
				<Member name="reserved" description="Reserved." range="11" property="-"/>
				<Member name="clut_reload" description="CLUT update enable.&lt;br&gt;0: The CLUT is not updated.&lt;br&gt;1: The memory is read to update the CLUT." range="10" property="RO"/>
				<Member name="clut_mod" description="CLUT usage mode.&lt;br&gt;0: conversion from the CLUT to true color&lt;br&gt;1: color correction" range="9" property="RO"/>
				<Member name="rgb_premul_en_out" description="Output RGB premultiply enable.&lt;br&gt;0: The output RGB bitmap is not a multiplied bitmap.&lt;br&gt;1: The output RGB bitmap is a multiplied bitmap." range="8" property="RO/LLU"/>
				<Member name="rgb_premul_en_in" description="Input RGB premultiply enable.&lt;br&gt;0: The input RGB bitmap is not a multiplied bitmap.&lt;br&gt;1: The input RGB bitmap is a multiplied bitmap." range="7" property="RO/LLU"/>
				<Member name="out_chroma_fmt" description="Output color format.&lt;br&gt;0: unsigned number (0 to 255)&lt;br&gt;1: 2's complement (–128 to +127)" range="6" property="RO/LLU"/>
				<Member name="out_color_space" description="Matrix for output CSC.&lt;br&gt;0: image matrix&lt;br&gt;1: video matrix" range="5" property="RO/LLU"/>
				<Member name="out_colorimetry" description="Output CSC standard.&lt;br&gt;0: ITU-R BT.601&lt;br&gt;1: ITU-R BT.709" range="4" property="RO/LLU"/>
				<Member name="in_chroma_fmt" description="Input color format.&lt;br&gt;0: unsigned number (0 to 255)&lt;br&gt;1: 2's complement (–128 to +127)" range="3" property="RO/LLU"/>
				<Member name="in_color_space" description="Matrix for input CSC.&lt;br&gt;1: image matrix&lt;br&gt;0: video matrix" range="2" property="RO/LLU"/>
				<Member name="in_rgb2yc" description="Input CSC direction.&lt;br&gt;0: from YC to RGB&lt;br&gt;1: from RGB to YC" range="1" property="RO"/>
				<Member name="in_colorimetry" description="Input CSC standard.&lt;br&gt;0: ITU-R BT.601&lt;br&gt;1: ITU-R BT.709" range="0" property="RO/LLU"/>
				<Register offset="0x8B8"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_CLUT_ADDR" description="TDE_CLUT_ADDR is a CLUT memory address register." value="0x00000000" startoffset="0x8BC">
				<Member name="clut_addr" description="Palette header address, word- aligned." range="31:0" property="RO"/>
				<Register offset="0x8BC"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_2D_RSZ" description="TDE_2D_RSZ is a filtering and scaling control register." value="0x00000000" startoffset="0x8C0">
				<Member name="reserved" description="Reserved." range="31:27" property="-"/>
				<Member name="dfe_alpha_disable" description="Alpha anti-flicker enable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="26" property="RO"/>
				<Member name="hf_coef_reload" description="Horizontal filtering coefficient update enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="25" property="RO"/>
				<Member name="vf_coef_reload" description="Vertical filtering coefficient update enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="24" property="RO"/>
				<Member name="reserved" description="Reserved." range="23:19" property="RO"/>
				<Member name="coef_sym" description="Filtering coefficient attribute.&lt;br&gt;1: asymmetric&lt;br&gt;0: symmetric" range="18" property="RO"/>
				<Member name="hf_ring_en" description="Median filtering enable when horizontal filtering is enabled.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="17" property="RO"/>
				<Member name="vf_ring_en" description="Median filtering enable when vertical filtering is enabled.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="16" property="RO"/>
				<Member name="reserved" description="Reserved." range="15:14" property="-"/>
				<Member name="alp_border_en" description="Alpha boundary processing enable.&lt;br&gt;00: disabled in both horizontal and vertical directions&lt;br&gt;01: enabled in the horizontal direction&lt;br&gt;10: enabled in the vertical direction&lt;br&gt;11: enabled in both horizontal and vertical directions" range="13:12" property="RO"/>
				<Member name="reserved" description="Reserved." range="11:10" property="-"/>
				<Member name="dfe_mod" description="Anti-flicker mode.&lt;br&gt;00: fixed coefficient 0 mode&lt;br&gt;01: adaptive mode&lt;br&gt;10: test mode&lt;br&gt;11: reserved" range="9:8" property="RO"/>
				<Member name="reserved" description="Reserved." range="7:6" property="-"/>
				<Member name="vf_mod" description="Vertical filtering mode.&lt;br&gt;00: no vertical filtering&lt;br&gt;01: vertical filtering only for the chrominance channel&lt;br&gt;10: vertical filtering only for the alpha channel&lt;br&gt;11: vertical filtering for the alpha channel and chrominance channel" range="5:4" property="RO"/>
				<Member name="reserved" description="Reserved." range="3:2" property="-"/>
				<Member name="hf_mod" description="Horizontal filtering mode.&lt;br&gt;00: no horizontal filtering&lt;br&gt;01: horizontal filtering only for the chrominance channel&lt;br&gt;10: horizontal filtering only for the alpha channel&lt;br&gt;11: horizontal filtering for the alpha channel and chrominance channel" range="1:0" property="RO"/>
				<Register offset="0x8C0"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_HF_COEF_ADDR" description="TDE_HF_COEF_ADDR is a memory address register for horizontal filtering coefficients." value="0x00000000" startoffset="0x8C4">
				<Member name="hf_coef_addr" description="Header address of horizontal filtering coefficients." range="31:0" property="RO"/>
				<Register offset="0x8C4"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_VF_COEF_ADDR" description="TDE_VF_COEF_ADDR is a memory address register for vertical filtering coefficients." value="0x00000000" startoffset="0x8C8">
				<Member name="vf_coef_addr" description="Header address of vertical filtering coefficients." range="31:0" property="RO"/>
				<Register offset="0x8C8"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_RSZ_STEP" description="TDE_RSZ_STEP is a horizontal or vertical scaling step register. The horizontal or verticalscaling step is calculated as follows:&lt;br&gt;(Size of source 2 bitmap – 1)/(Size of the target bitmap – 1)In macroblock mode, the size of source 2 bitmap may be the chrominance macroblock size orluminance macroblock size. For details, see the description of the TDE_S2_SIZE register." value="0x00000000" startoffset="0x8CC">
				<Member name="reserved" description="Reserved." range="31:20" property="-"/>
				<Member name="h_step" description="Horizontal scaling step (8-bit integer, 12-bit decimal)." range="19:0" property="RO"/>
				<Register offset="0x8CC"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_RSZ_Y_OFST" description="TDE_RSZ_Y_OFST is a vertical filtering phase offset register." value="0x00000000" startoffset="0x8D0">
				<Member name="reserved" description="Reserved." range="31:17" property="-"/>
				<Member name="v_ofst" description="&lt;s, 4, 12&gt; offset of the vertical output initial pixel relative to the input initial pixel (1-bit sign bit, 4-bit integer, and 12-bit decimal).&lt;br&gt;Note:&lt;br&gt;v_ofst is 0 in non-macroblock mode.&lt;br&gt;v_ofst is &lt;s, 4, 12&gt; in macroblock mode." range="16:0" property="RO"/>
				<Register offset="0x8D0"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_RSZ_X_OFST" description="TDE_RSZ_X_OFST is a horizontal filtering phase offset register." value="0x00000000" startoffset="0x8D4">
				<Member name="reserved" description="Reserved." range="31:17" property="-"/>
				<Member name="h_ofst" description="&lt;s, 4, 12&gt; offset of the horizontal output initial line relative to the input initial line (1-bit sign bit, 4-bit integer, and 12-bit decimal).&lt;br&gt;Note:&lt;br&gt;h_ofst is an integer within &lt;u, 4, 12&gt; in non-macroblock mode.&lt;br&gt;h_ofst is &lt;s, 4, 12&gt; in macroblock mode." range="16:0" property="RO"/>
				<Register offset="0x8D4"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_DFE_COEF0" description="TDE_DFE_COEF0 is anti-flicker coefficient 0 register." value="0x00000000" startoffset="0x8D8">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="threshold0" description="The coefficients of group 0 are used if the luminance difference among three adjacent lines is less than threshold0." range="27:24" property="RO"/>
				<Member name="reserved" description="Reserved." range="23:16" property="-"/>
				<Member name="coef0_cur_line" description="Anti-flicker coefficient of group 0 for the current line (line K), unsigned number. This coefficient consists of 1-bit integer bit and 6-bit decimal, that is, &lt;u, 1, 6&gt;. The lower seven bits are valid." range="15:8" property="RO"/>
				<Member name="coef0_next_line" description="Anti-flicker coefficient of group 0 for the previous line (line K – 1) or next line (line K + 1), unsigned number. This coefficient consists of 5-bit decimal, that is, &lt;u, 0, 5&gt;. The lower five bits are valid." range="7:0" property="RO"/>
				<Register offset="0x8D8"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_DFE_COEF1" description="TDE_DFE_COEF1 is anti-flicker coefficient 1 register." value="0x00000000" startoffset="0x8DC">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="threshold1" description="The coefficients of group 1 are used if the luminance difference among three adjacent lines is less than threshold1 but greater than or equal to threshold0." range="27:24" property="RO"/>
				<Member name="reserved" description="Reserved." range="23:16" property="-"/>
				<Member name="coef1_cur_line" description="Anti-flicker coefficient of group 1 for the current line (line K), unsigned number. This coefficient consists of 1-bit integer bit and 6-bit decimal, that is, &lt;u, 1, 6&gt;. The lower seven bits are valid." range="15:8" property="RO"/>
				<Member name="coef1_next_line" description="Anti-flicker coefficient of group 1 for the previous line (line K – 1) or next line (line K + 1), unsigned number. This coefficient consists of 5-bit decimal, that is, &lt;u, 0, 5&gt;. The lower five bits are valid." range="7:0" property="RO"/>
				<Register offset="0x8DC"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_DFE_COEF2" description="TDE_DFE_COEF2 is anti-flicker coefficient 2 register." value="0x00000000" startoffset="0x8E0">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="threshold2" description="The coefficients of group 2 are used if the luminance difference among three adjacent lines is less than threshold2 but greater than or equal to threshold1." range="27:24" property="RO"/>
				<Member name="reserved" description="Reserved." range="23:16" property="-"/>
				<Member name="coef2_cur_line" description="Anti-flicker coefficient of group 2 for the current line (line K), unsigned number. This coefficient consists of 1-bit integer bit and 6-bit decimal, that is, &lt;u, 1, 6&gt;. The lower seven bits are valid." range="15:8" property="RO"/>
				<Member name="coef2_next_line" description="Anti-flicker coefficient of group 2 for the previous line (line K – 1) or next line (line K + 1), unsigned number. This coefficient consists of 5-bit decimal, that is, &lt;u, 0, 5&gt;. The lower five bits are valid." range="7:0" property="RO"/>
				<Register offset="0x8E0"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_DFE_COEF3" description="TDE_DFE_COEF3 is anti-flicker coefficient 3 register." value="0x00000000" startoffset="0x8E4">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="coef3_cur_line" description="Anti-flicker coefficient of group 3 for the current line (line K), unsigned number. This coefficient consists of 1-bit integer bit and 6-bit decimal, that is, &lt;u, 1, 6&gt;. The lower seven bits are valid." range="15:8" property="RO"/>
				<Member name="coef3_next_line" description="Anti-flicker coefficient of group 3 for the previous line (line K – 1) or next line (line K + 1), unsigned number. This coefficient consists of 5-bit decimal, that is, &lt;u, 0, 5&gt;. The lower five bits are valid." range="7:0" property="RO"/>
				<Register offset="0x8E4"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_ALU" description="TDE_ALU is an ALU and colorkey control register." value="0x00000000" startoffset="0x8E8">
				<Member name="blend_reverse" description="Reverse enable for overlaying the foreground and background.&lt;br&gt;0: S1 is the background, and S2 is the foreground.&lt;br&gt;1: S2 is the background, and S1 is the foreground." range="31" property="RW-"/>
				<Member name="ck_sel" description="Colorkey input select.&lt;br&gt;00: colorkey operation for source 1&lt;br&gt;01: reserved&lt;br&gt;10: colorkey operation for source 2 before CLUT conversion&lt;br&gt;11: colorkey operation for source 2 after CLUT conversion" range="30:29" property="RO"/>
				<Member name="ck_alpha_mod" description="Operating mode of the alpha component in the colorkey.&lt;br&gt;00: The alpha component must meet the following condition when the colorkey is checked: Alphamin ≤ Alpha ≤ Alphamax.&lt;br&gt;01: The alpha component must meet the following condition when the colorkey is checked: Alpha &lt; Alphamin or Alpha &gt; Alphamax.&lt;br&gt;10: The alpha component is ignored when the colorkey is checked.&lt;br&gt;11: reserved" range="28:27" property="RO"/>
				<Member name="ck_r_mod" description="Operating mode of the R component in the colorkey.&lt;br&gt;00: The R component must meet the following condition when the colorkey is checked: Rmin ≤ R ≤ Rmax.&lt;br&gt;01: The R component must meet the following condition when the colorkey is checked: R &lt; Rmin or R &gt; Rmax.&lt;br&gt;10: The R component is ignored when the colorkey is checked.&lt;br&gt;11: reserved" range="26:25" property="RO"/>
				<Member name="ck_g_mod" description="Operating mode of the G component in the colorkey.&lt;br&gt;00: The G component must meet the following condition when the colorkey is checked: Gmin ≤ G ≤ Gmax.&lt;br&gt;01: The G component must meet the following condition when the colorkey is checked: G &lt; Gmin or G &gt; Gmax.&lt;br&gt;10: The G component is ignored when the colorkey is checked.&lt;br&gt;11: reserved" range="24:23" property="RO"/>
				<Member name="ck_b_mod" description="Operating mode of the B component in the colorkey.&lt;br&gt;00: The B component must meet the following condition when the colorkey is checked: Bmin ≤ B ≤ Bmax.&lt;br&gt;01: The B component must meet the following condition when the colorkey is checked: B &lt; Bmin or B &gt; Bmax.&lt;br&gt;10: The B component is ignored when the colorkey is checked.&lt;br&gt;11: reserved" range="22:21" property="RO"/>
				<Member name="global_alpha" description="Global alpha value. The default value is 0x80.&lt;br&gt;If a bitmap includes the pixel alpha, the global alpha value is multiplied by the pixel alpha to obtain the blended alpha value; if a bitmap does not include the pixel alpha, the global alpha value acts as the blended alpha value. The global alpha value ranges from 0x00 to 0x80. The value 0x00 indicates fully transparent." range="20:13" property="RO"/>
				<Member name="rgb_rop_mod" description="ROP operating modes of RGB components." range="12:9" property="RO"/>
				<Member name="alpha_rop_mod" description="ROP operating mode of the alpha component." range="8:5" property="RO"/>
				<Member name="alpha_threshold_en" description="Alpha threshold enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="4" property="RO"/>
				<Member name="alu_mod" description="ALU operating mode.&lt;br&gt;0x0: source 1 bypass&lt;br&gt;0x1: logical mode&lt;br&gt;0x2: blending mode&lt;br&gt;0x3: reserved&lt;br&gt;0x4: clip mask in logical mode, first pass&lt;br&gt;0x5: clip mask in blending mode&lt;br&gt;0x6: MB concatenation&lt;br&gt;0x7: source 2 bypass&lt;br&gt;0x8: clip mask in logical mode, second pass&lt;br&gt;Other values: reserved" range="3:0" property="RO"/>
				<Register offset="0x8E8"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_CK_MIN" description="TDE_CK_MIN is colorkey 1 register." value="0x00000000" startoffset="0x8EC">
				<Member name="alpha_min" description="Minimum value of the alpha component for the colorkey comparison. The value ranges from 0x00 to 0x80. The value 0x00 indicates fully transparent, and the value 0x80 indicates opaque." range="31:24" property="RO"/>
				<Member name="red_min" description="Minimum value of the R component for the colorkey comparison." range="23:16" property="RO"/>
				<Member name="green_min" description="Minimum value of the G component for the colorkey comparison." range="15:8" property="RO"/>
				<Member name="blue_min" description="Minimum value of the B component for the colorkey comparison. These bits are filled with the index values to be compared." range="7:0" property="RO"/>
				<Register offset="0x8EC"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_CK_MAX" description="TDE_CK_MAX is colorkey 2 register." value="0x00000000" startoffset="0x8F0">
				<Member name="alpha_max" description="Maximum value of the alpha component for colorkey comparison. The value ranges from 0x00 to 0x80. The value 0x00 indicates fully transparent, and the value 0x80 indicates opaque." range="31:24" property="RO"/>
				<Member name="red_max" description="Maximum value of the R component for the colorkey comparison." range="23:16" property="RO"/>
				<Member name="green_max" description="Maximum value of the G component for the colorkey comparison." range="15:8" property="RO"/>
				<Member name="blue_max" description="Maximum value of the B component for the colorkey comparison. These bits are filled with the index values to be compared" range="7:0" property="RO"/>
				<Register offset="0x8F0"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_CLIP_START" description="TDE_CLIP_START is a clipping start position register." value="0x00000000" startoffset="0x8F4">
				<Member name="clip_mod" description="Clipping mode.&lt;br&gt;0: The area to be updated is within the specified rectangle (including the boundaries).&lt;br&gt;1: The area to be updated is outside the specified rectangle (excluding the boundaries)." range="31" property="RO"/>
				<Member name="reserved" description="Reserved." range="30:28" property="-"/>
				<Member name="y_start" description="Start Y coordinate of the clipping window." range="27:16" property="RO"/>
				<Member name="reserved" description="Reserved." range="15:12" property="-"/>
				<Member name="x_start" description="Start X coordinate of the clipping window." range="11:0" property="RO"/>
				<Register offset="0x8F4"/>
			</RegisterGroup>
			<RegisterGroup name="TDE_CLIP_STOP" description="TDE_CLIP_STOP is a clipping end position register." value="0x00000000" startoffset="0x8F8">
				<Member name="reserved" description="Reserved." range="31:28" property="-"/>
				<Member name="y_stop" description="End Y coordinate of the clipping window." range="27:16" property="RO"/>
				<Member name="reserved" description="Reserved." range="15:12" property="-"/>
				<Member name="x_stop" description="End X coordinate of the clipping window." range="11:0" property="RO"/>
				<Register offset="0x8F8"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="AO" i2cSupport="false">
			<Module baseAddress="0x10160000"/>
			<RegisterGroup name="AO_INT" description="AO_INT is an AO interrupt status register (soft reset)." value="0x00000000" startoffset="0x0000">
				<Member name="reserved" description="Reserved." range="31:27" property="-"/>
				<Member name="pcmo_over_st" description="PCMO buffer overflow interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="26" property="W1C"/>
				<Member name="iram_over_st" description="IATPRAM data overflow interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="25" property="W1C"/>
				<Member name="ichnl_over_st" description="IPCM channel overflow interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="24" property="W1C"/>
				<Member name="mfifo_low_st" description="MFIFO no data interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="23" property="W1C"/>
				<Member name="dfifo_low_st" description="DFIFO no data interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="22" property="W1C"/>
				<Member name="cfifo_low_st" description="CFIFO no data interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="21" property="W1C"/>
				<Member name="mchnl_low_st" description="MPCM channel underflow interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="20" property="W1C"/>
				<Member name="dchnl_low_st" description="DPCM channel underflow interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="19" property="W1C"/>
				<Member name="cchnl_low_st" description="CPCM channel underflow interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="18" property="W1C"/>
				<Member name="fade_stc" description="CPCM fade-in and fade-out or mute done interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="17" property="W1C"/>
				<Member name="fade_std" description="DPCM fade-in and fade-out or mute done interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="16" property="W1C"/>
				<Member name="fade_stm" description="MPCM fade-in and fade-out or mute done interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="15" property="W1C"/>
				<Member name="pts_stc" description="Valid PTS interrupt C.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="14" property="W1C"/>
				<Member name="pts_std" description="Valid PTS interrupt D.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="13" property="W1C"/>
				<Member name="pts_stm" description="Valid PTS interrupt M.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="12" property="W1C"/>
				<Member name="i2s_ctrl_ok" description="I2S_CTRL write done answer interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="11" property="W1C"/>
				<Member name="bustest_finish" description="Bus test done answer interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="10" property="W1C"/>
				<Member name="pes_lowflow_st" description="PES buffer no data interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="9" property="W1C"/>
				<Member name="chg_mod_st" description="Interrupt that occurs when the audio channel mode of code streams changes.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="8" property="W1C"/>
				<Member name="chg_smp_st" description="Interrupt that occurs when the sampling rate of code streams changes.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="7" property="W1C"/>
				<Member name="err_pes_len_st" description="PES packet length error interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="6" property="W1C"/>
				<Member name="err_alloc_st" description="Allocation exception interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="5" property="W1C"/>
				<Member name="err_length_st" description="Interrupt that occurs when the previous frame of data decoded by the decoder is incorrect.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="4" property="W1C"/>
				<Member name="err_crc_st" description="Code stream CRC error interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="3" property="W1C"/>
				<Member name="err_short_st" description="Interrupt that occurs when the frame length is shorter than the length indicated by the frame header.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="2" property="W1C"/>
				<Member name="err_hdr_st" description="Interrupt that occurs when the code stream header information is invalid.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="1" property="W1C"/>
				<Member name="dec_done_st" description="Decoding done interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="0" property="W1C"/>
				<Register offset="0x0000"/>
			</RegisterGroup>
			<RegisterGroup name="AO_INT_M" description="AO_INT_M is an AO interrupt mask register (hard reset)." value="0x03FFFC00" startoffset="0x0004">
				<Member name="reserved" description="Reserved." range="31:27" property="-"/>
				<Member name="pcmo_over_m" description="PCMO buffer overflow interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="26" property="W1C"/>
				<Member name="iram_over_st_m" description="IATPRAM data overflow interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="25" property="W1C"/>
				<Member name="ichnl_over_st_m" description="IPCM channel overflow interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="24" property="W1C"/>
				<Member name="mfifo_low_st_m" description="MFIFO no data interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="23" property="W1C"/>
				<Member name="dfifo_low_st_m" description="DFIFO no data interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="22" property="W1C"/>
				<Member name="cfifo_low_st_m" description="CFIFO no data interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="21" property="W1C"/>
				<Member name="mchnl_low_st_m" description="MPCM channel underflow interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="20" property="W1C"/>
				<Member name="dchnl_low_st_m" description="DPCM channel underflow interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="19" property="W1C"/>
				<Member name="cchnl_low_st_m" description="CPCM channel underflow interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="18" property="W1C"/>
				<Member name="fade_stc_m" description="Mask of a CPCM fade-in and fade-out or mute done interrupt.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="17" property="W1C"/>
				<Member name="fade_std_m" description="Mask of a DPCM fade-in and fade-out or mute done interrupt.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="16" property="W1C"/>
				<Member name="fade_stm_m" description="Mask of an MPCM fade-in and fade-out or mute done interrupt.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="15" property="W1C"/>
				<Member name="pts_stc_m" description="Mask of valid PTS interrupt C.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="14" property="W1C"/>
				<Member name="pts_std_m" description="Mask of valid PTS interrupt D.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="13" property="W1C"/>
				<Member name="pts_stm_m" description="Mask of valid PTS interrupt M.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="12" property="W1C"/>
				<Member name="i2s_ctrl_ok_m" description="AO_I2S_CTRL write done answer interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="11" property="W1C"/>
				<Member name="bustest_finish_m" description="Bus test done answer interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="10" property="W1C"/>
				<Member name="pes_lowflow_m" description="PES buffer no data interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="9" property="W1C"/>
				<Member name="chg_mod_m" description="Mask of an interrupt that occurs when the audio channel mode of code streams changes.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="8" property="W1C"/>
				<Member name="chg_smp_m" description="Mask of an interrupt that occurs when the sampling rate of code streams changes.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="7" property="W1C"/>
				<Member name="err_pes_len_m" description="PES packet length error interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="6" property="W1C"/>
				<Member name="err_alloc_m" description="Allocation exception interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="5" property="W1C"/>
				<Member name="err_length_m" description="Mask of an interrupt that occurs when the previous frame of data decoded by the decoder is incorrect.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="4" property="W1C"/>
				<Member name="err_crc_m" description="Code stream CRC error interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="3" property="W1C"/>
				<Member name="err_short_m" description="Mask of an interrupt that occurs when the frame length is shorter than the length indicated by the frame header.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="2" property="W1C"/>
				<Member name="err_hdr_m" description="Mask of an interrupt that occurs when the code stream header information is invalid.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="1" property="W1C"/>
				<Member name="dec_done_m" description="Decoding done interrupt mask.&lt;br&gt;0: An interrupt is reported.&lt;br&gt;1: No interrupt is reported." range="0" property="W1C"/>
				<Register offset="0x0004"/>
			</RegisterGroup>
			<RegisterGroup name="AO_VERSION" description="AO_VERSION is a version register (hard reset)." value="0x20091226" startoffset="0x0008">
				<Member name="ao_verison" description="Version." range="31:0" property="RO"/>
				<Register offset="0x0008"/>
			</RegisterGroup>
			<RegisterGroup name="AO_PCM_FORMAT" description="AO_PCM_FORMAT is a PCM control register (soft reset)." value="0x00000000" startoffset="0x000C">
				<Member name="reserved" description="Reserved." range="31:23" property="-"/>
				<Member name="mute_cpcm_cmd" description="CPCM channel mute command.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="22" property="RW"/>
				<Member name="pause_cpcm_cmd" description="CPCM channel pause command.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="21" property="RW"/>
				<Member name="pause_cpcm_clr" description="CPCM channel pause or mute cancel command.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="20" property="RW"/>
				<Member name="reserved" description="Reserved." range="19" property="-"/>
				<Member name="mute_dpcm_cmd" description="DPCM channel mute command.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="18" property="RW"/>
				<Member name="pause_dpcm_cmd" description="DPCM channel pause command.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="17" property="RW"/>
				<Member name="pause_dpcm_clr" description="DPCM channel pause or mute cancel command.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15" property="-"/>
				<Member name="mute_mpcm_cmd" description="MPCM channel mute command.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="14" property="RW"/>
				<Member name="pause_mpcm_cmd" description="MPCM channel pause command.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="13" property="RW"/>
				<Member name="pause_mpcm_clr" description="MPCM channel pause or mute cancel command.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="12" property="RW"/>
				<Member name="reserved" description="Reserved." range="11" property="-"/>
				<Member name="mpcm_format" description="MPCM channel output video format.&lt;br&gt;000: PCM 24 bit format&lt;br&gt;001: PCM 20 bit format&lt;br&gt;010: PCM 18 bit format&lt;br&gt;011: PCM 16 bit format&lt;br&gt;Other values: reserved" range="10:8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7" property="-"/>
				<Member name="dpcm_format" description="DPCM channel output audio format.&lt;br&gt;000: PCM 24 bit format&lt;br&gt;001: PCM 20 bit format&lt;br&gt;010: PCM 18 bit format&lt;br&gt;011: PCM 16 bit format&lt;br&gt;Other values: reserved" range="6:4" property="RW"/>
				<Member name="reserved" description="Reserved." range="3" property="-"/>
				<Member name="cpcm_format" description="CPCM channel output audio format.&lt;br&gt;000: PCM 24 bit format&lt;br&gt;001: PCM 20 bit format&lt;br&gt;010: PCM 18 bit format&lt;br&gt;011: PCM 16 bit format&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x000C"/>
			</RegisterGroup>
			<RegisterGroup name="AO_I2S_CTRL" description="AO_I2S_CTRL is an I2S control register (hard reset)." value="0x00000000" startoffset="0x0010">
				<Member name="pcm_precision" description="Selection of the width of the recording PCM mode.&lt;br&gt;0: 8-bit mode&lt;br&gt;1: 16-bit mode" range="31" property="RW"/>
				<Member name="pcm_mode" description="Selection of the recording PCM mode.&lt;br&gt;0: standard mode&lt;br&gt;1: self-defined mode" range="30" property="RW"/>
				<Member name="spdif_bypass" description="Selection of S/PDIF transparent transmission.&lt;br&gt;0: not transparent transmission, and the data source comes from a CPCM channel and a DPCM channel.&lt;br&gt;1: transparent transmission, and the data source comes from an MPCM channel." range="29" property="RW"/>
				<Member name="i2s_record_en" description="Recording enable&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="28" property="RW"/>
				<Member name="i2s_ring_sel" description="Selection of an I2S inloop channel.&lt;br&gt;11: I2S0 output loopback&lt;br&gt;10: I2S1 output loopback&lt;br&gt;Others: not loopback" range="27:26" property="RW"/>
				<Member name="i2s_in_format" description="I2S data input format.&lt;br&gt;0: I2S format&lt;br&gt;1: PCM format" range="25" property="RW"/>
				<Member name="i2s_ring_ctrl" description="I2S loopback channel test.&lt;br&gt;0: not loopback&lt;br&gt;1: loopback" range="24" property="RW"/>
				<Member name="multi_i2s1_en" description="MULTI_I2S1 output enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="23" property="RW"/>
				<Member name="multi_i2s2_en" description="MULTI_I2S2 output enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="22" property="RW"/>
				<Member name="multi_i2s3_en" description="MULTI_I2S3 output enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="21" property="RW"/>
				<Member name="multi_i2s4_en" description="MULTI_I2S4 output enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="20" property="RW"/>
				<Member name="spdif_en" description="S/PDIF output enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="19" property="RW"/>
				<Member name="dac2_en" description="I2S 1 output enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="18" property="RW"/>
				<Member name="dac1_en" description="I2S 0 output enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="17" property="RW"/>
				<Member name="multi_bypass" description="Transparent transmission enable of MULTI_I2S output.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15" property="-"/>
				<Member name="ch_sel2" description="I2S 2 output audio-left and audio-right channel control.&lt;br&gt;000: The two audio channels play normally.&lt;br&gt;001: The two audio channels play the audio on the audio-left channel.&lt;br&gt;010: The two audio channels play the audio on the audio-right channel.&lt;br&gt;011: The two audio channels are interchanged.&lt;br&gt;100: The output of the audio-left and audio-right channels is the sum of the output of the audio-left channel and the output of the audio-right channel.&lt;br&gt;101: The audio-left channel is muted, and the audio-right channel plays the audio on the original audio-right channel.&lt;br&gt;110: The audio-right channel is muted, and the audio-left channel plays the audio on the original audio-left channel.&lt;br&gt;111: The audio-left and audio-right channels are muted." range="14:12" property="RW"/>
				<Member name="reserved" description="Reserved." range="11" property="-"/>
				<Member name="spdif_ch_sel" description="S/PDIF output audio-left and audio-right channel control.&lt;br&gt;000: The two audio channels play normally.&lt;br&gt;001: The two audio channels play the audio on the audio-left channel.&lt;br&gt;010: The two audio channels play the audio on the audio-right channel.&lt;br&gt;011: The two audio channels are interchanged.&lt;br&gt;100: The output of the audio-left and audio-right channels is the sum of the output of the audio-left channel and the output of the audio-right channel.&lt;br&gt;101: The audio-left channel is muted, and the audio-right channel plays the audio on the original audio-right channel.&lt;br&gt;110: The audio-right channel is muted, and the audio-left channel plays the audio on the original audio-left channel.&lt;br&gt;111: The audio-left and audio-right channels are muted." range="10:8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7" property="-"/>
				<Member name="ch_sel1" description="I2S 1 audio-left and audio-right channel control.&lt;br&gt;000: The two audio channels play normally.&lt;br&gt;001: The two audio channels play the audio on the audio-left channel.&lt;br&gt;010: The two audio channels play the audio on the audio-right channel.&lt;br&gt;011: The two audio channels are interchanged.&lt;br&gt;100: The output of the audio-left and audio-right channels is the sum of the output of the audio-left channel and the output of the audio-right channel.&lt;br&gt;101: The audio-left channel is muted, and the audio-right channel plays the audio on the original audio-right channel.&lt;br&gt;110: The audio-right channel is muted, and the audio-left channel plays the audio on the original audio-left channel.&lt;br&gt;111: The audio-left and audio-right channels are muted." range="6:4" property="RW"/>
				<Member name="ext1_ch_sel" description="Selection of an MULTI_I2S1 output mode.&lt;br&gt;00: MULTI_I2S1&lt;br&gt;01: I2S1&lt;br&gt;10: I2S2&lt;br&gt;11: MULTI_I2S1" range="3:2" property="RW"/>
				<Member name="precision" description="I2S output data precision.&lt;br&gt;00: 16 bits&lt;br&gt;01: 18 bits&lt;br&gt;10: 20 bits&lt;br&gt;11: 24 bits" range="1:0" property="RW"/>
				<Register offset="0x0010"/>
			</RegisterGroup>
			<RegisterGroup name="AO_FADE_CTRL" description="AO_FADE_CTRL is a fade-in and fade-out control register (soft reset)." value="0x00000000" startoffset="0x0014">
				<Member name="reserved" description="Reserved." range="31:21" property="-"/>
				<Member name="cpcm_fifo_level" description="Level setting of the CPCM FIFO.&lt;br&gt;00: The level of the CPCM FIFO is 56.&lt;br&gt;01: The level of the CPCM FIFO is 48.&lt;br&gt;10: The level of the CPCM FIFO is 40.&lt;br&gt;11: The level of the CPCM FIFO is 32." range="20:19" property="RW"/>
				<Member name="mpcm_fade_clr" description="Clear of the volume_real_mpcm value. The hardware automatically clears the value of this bit.&lt;br&gt;0: invalid&lt;br&gt;1: valid" range="18" property="WO"/>
				<Member name="dpcm_fade_clr" description="Clear of the volume_real_dpcm value. The hardware automatically clears the value of this bit.&lt;br&gt;0: invalid&lt;br&gt;1: valid" range="17" property="WO"/>
				<Member name="cpcm_fade_clr" description="Clear of the volume_real_cpcm value. The hardware automatically clears the value of this bit.&lt;br&gt;0: invalid&lt;br&gt;1: valid" range="16" property="WO"/>
				<Member name="reserved" description="Reserved." range="15" property="-"/>
				<Member name="mpcm_fade_mask" description="Mask of fade-in and fade-out of an MPCM channel.&lt;br&gt;0: invalid&lt;br&gt;1: valid" range="14" property="RW"/>
				<Member name="dpcm_fade_mask" description="Mask of fade-in and fade-out of a DPCM channel.&lt;br&gt;0: invalid&lt;br&gt;1: valid" range="13" property="RW"/>
				<Member name="cpcm_fade_mask" description="Mask of fade-in and fade-out of a CPCM channel.&lt;br&gt;0: invalid&lt;br&gt;1: valid" range="12" property="RW"/>
				<Member name="lim_rate_mpcm" description="Fade-in and fade-out rate control of an MPCM channel.&lt;br&gt;0000: The rate changes once for one sampling point.&lt;br&gt;0001: The rate changes once for two sampling points.&lt;br&gt;0010: The rate changes once for four sampling points.&lt;br&gt;0011: The rate changes once for eight sampling points.&lt;br&gt;0100: The rate changes once for 16 sampling points.&lt;br&gt;0101: The rate changes once for 32 sampling points.&lt;br&gt;0110: The rate changes once for 64 sampling points.&lt;br&gt;0111: The rate changes once for 128 sampling points.&lt;br&gt;1000: The rate changes once for 256 sampling points.&lt;br&gt;1001: The rate changes once for 384 sampling points.&lt;br&gt;1010: The rate changes once for 512 sampling points.&lt;br&gt;1011: The rate changes once for 768 sampling points.&lt;br&gt;1100: The rate changes once for 1024 sampling points.&lt;br&gt;1101: The rate changes once for 1536 sampling points.&lt;br&gt;1110: The rate changes once for 2048 sampling points.&lt;br&gt;1111: The rate changes once for 3584 sampling points." range="11:8" property="RW"/>
				<Member name="lim_rate_dpcm" description="Fade-in and fade-out rate control of a DPCM channel.&lt;br&gt;The values are the same as the values of lim_rate_mpcm." range="7:4" property="RW"/>
				<Member name="lim_rate_cpcm" description="Fade-in and fade-out rate control of a CPCM channel.&lt;br&gt;The values are the same as the values of lim_rate_mpcm." range="3:0" property="RW"/>
				<Register offset="0x0014"/>
			</RegisterGroup>
			<RegisterGroup name="AO_FADE_STATE" description="AO_FADE_STATE is a fade-in and fade-out status register (soft reset)." value="0x00282828" startoffset="0x0018">
				<Member name="reserved" description="Reserved." range="31:23" property="-"/>
				<Member name="volume_real_mpcm" description="Actual volume of an MPCM sound source.&lt;br&gt;0x00–0x28: mute&lt;br&gt;0x29: –80 dB&lt;br&gt;......&lt;br&gt;0x7E: +5 dB&lt;br&gt;0x7F: +6 dB" range="22:16" property="RO"/>
				<Member name="reserved" description="Reserved." range="15" property="-"/>
				<Member name="volume_real_dpcm" description="Actual volume of a DPCM sound source.&lt;br&gt;0x00–0x28: mute&lt;br&gt;0x29: –80 dB&lt;br&gt;...&lt;br&gt;0x7E: +5 dB&lt;br&gt;0x7F: +6 dB" range="14:8" property="RO"/>
				<Member name="reserved" description="Reserved." range="7" property="-"/>
				<Member name="volume_real_cpcm" description="Actual volume of a CPCM sound source.&lt;br&gt;0x00–0x28: mute&lt;br&gt;0x29: –80 dB&lt;br&gt;…&lt;br&gt;0x7E: +5 dB&lt;br&gt;0x7F: +6 dB" range="6:0" property="RO"/>
				<Register offset="0x0018"/>
			</RegisterGroup>
			<RegisterGroup name="AO_PTSM" description="AO_PTSM is an MPCM PTS data register (soft reset)." value="0x00000000" startoffset="0x0020">
				<Member name="ao_pts_datam" description="PTS data on an MPCM channel." range="31:0" property="RO"/>
				<Register offset="0x0020"/>
			</RegisterGroup>
			<RegisterGroup name="AO_PTSD" description="AO_PTSD is a DPCM PTS data register (soft reset)." value="0x00000000" startoffset="0x0024">
				<Member name="ao_pts_datad" description="PTS data on a DPCM channel." range="31:0" property="RO"/>
				<Register offset="0x0024"/>
			</RegisterGroup>
			<RegisterGroup name="AO_PTSC" description="AO_PTSC is a CPCM PTS data register (soft reset)." value="0x00000000" startoffset="0x0028">
				<Member name="ao_pts_datac" description="PTS data on a CPCM channel." range="31:0" property="RO"/>
				<Register offset="0x0028"/>
			</RegisterGroup>
			<RegisterGroup name="AO_MIXING_CTRL1" description="AO_MIXING_CTRL1 is mixing control register 1 (soft reset)." value="0x00000000" startoffset="0x002C">
				<Member name="reserved" description="Reserved." range="31:30" property="-"/>
				<Member name="al_ctrl" description="Input source control of I2S1 output audio-left channel mixing.&lt;br&gt;Bit[29] indicates interchange of mixing coefficients.&lt;br&gt;Bit[28] indicates that the CPCM input is available.&lt;br&gt;Bit[27] indicates that the DPCM input is available.&lt;br&gt;Bit[26] indicates that the MPCM input is available if the left and right of the CPCM input data are C0 and C1 respectively, the left and right of the DPCM input data are D0 and D1 respectively, and the left and right of the MPCM input data are M0 and M1 respectively. The mixing coefficients are A1 and A2. In the case of bit[29] = 0, the corresponding expressions of the output and the value of bit[28:24] are as follows:&lt;br&gt;00101: OUT = 0 * A1 + M1 * A2&lt;br&gt;00110: OUT = M0 * A1 + 0 * A2&lt;br&gt;00111: OUT = M0 * A1 + M1 * A2&lt;br&gt;01001: OUT = 0 * A1 + D1 * A2&lt;br&gt;01010: OUT = D0 * A1 + 0 * A2&lt;br&gt;01011: OUT = D0 * A1 + D1 * A2&lt;br&gt;10001: OUT = 0 * A1 + C1 * A2&lt;br&gt;10010: OUT = C0 * A1 + 0 * A2&lt;br&gt;10011: OUT = C0 * A1 + C1 * A2&lt;br&gt;01100: OUT = D0 * A1 + M0 * A2&lt;br&gt;01101: OUT = D0 * A1 + M1 * A2&lt;br&gt;01110: OUT = D1 * A1 + M0 * A2&lt;br&gt;01111: OUT = D1 * A1 + M1 * A2&lt;br&gt;10100: OUT = C0 * A1 + M0 * A2&lt;br&gt;10101: OUT = C0 * A1 + M1 * A2&lt;br&gt;10110: OUT = C1 * A1 + M0 * A2&lt;br&gt;10111: OUT = C1 * A1 + M1 * A2&lt;br&gt;11000: OUT = C0 * A1 + D0 * A2&lt;br&gt;11001: OUT = C0 * A1 + D1 * A2&lt;br&gt;11010: OUT = C1 * A1 + D0 * A2&lt;br&gt;11011: OUT = C1 * A1 + D1 * A2&lt;br&gt;000xx: OUT = 0&lt;br&gt;Others: invalid configuration, and OUT = 0&lt;br&gt;Note: In the case of bit[29] = 1, A1 and A2 in the preceding expressions are interchanged." range="29:24" property="RW"/>
				<Member name="reserved" description="Reserved." range="23:22" property="RW"/>
				<Member name="ar_ctrl" description="Input source control of I2S1 output audio-right channel mixing.&lt;br&gt;Bit[21] indicates interchange of mixing coefficients.&lt;br&gt;Bit[20] indicates that the CPCM input is available.&lt;br&gt;Bit[19] indicates that the DPCM input is available.&lt;br&gt;Bit[18] indicates that the MPCM input is available if the left and right of the CPCM input data are C0 and C1 respectively, the left and right of the DPCM input data are D0 and D1 respectively, and the left and right of the MPCM input data are M0 and M1 respectively. The mixing coefficients are A1 and A2. In the case of bit[21] = 0, the corresponding expressions of the output and the value of bit[20:16] are as follows:&lt;br&gt;00101: OUT = 0 * A1 + M1 * A2&lt;br&gt;00110: OUT = M0 * A1 + 0 * A2&lt;br&gt;00111: OUT = M0 * A1 + M1 * A2&lt;br&gt;01001: OUT = 0 * A1 + D1 * A2&lt;br&gt;01010: OUT = D0 * A1 + 0 * A2&lt;br&gt;01011: OUT = D0 * A1 + D1 * A2&lt;br&gt;10001: OUT = 0 * A1 + C1 * A2&lt;br&gt;10010: OUT = C0 * A1 + 0 * A2&lt;br&gt;10011: OUT = C0 * A1 + C1 * A2&lt;br&gt;01100: OUT = D0 * A1 + M0 * A2&lt;br&gt;01101: OUT = D0 * A1 + M1 * A2&lt;br&gt;01110: OUT = D1 * A1 + M0 * A2&lt;br&gt;01111: OUT = D1 * A1 + M1 * A2&lt;br&gt;10100: OUT = C0 * A1 + M0 * A2&lt;br&gt;10101: OUT = C0 * A1 + M1 * A2&lt;br&gt;10110: OUT = C1 * A1 + M0 * A2&lt;br&gt;10111: OUT = C1 * A1 + M1 * A2&lt;br&gt;11000: OUT = C0 * A1 + D0 * A2&lt;br&gt;11001: OUT = C0 * A1 + D1 * A2&lt;br&gt;11010: OUT = C1 * A1 + D0 * A2&lt;br&gt;11011: OUT = C1 * A1 + D1 * A2&lt;br&gt;000xx: OUT = 0&lt;br&gt;Others: invalid configuration, and OUT = 0&lt;br&gt;Note: In the case of bit[21] = 1, A1 and A2 in the preceding expressions are interchanged." range="21:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:14" property="RW"/>
				<Member name="dl_ctrl" description="Input source control of S/PDIF output audio-left channel mixing.&lt;br&gt;Bit[13] indicates interchange of mixing coefficients.&lt;br&gt;Bit[12] indicates that the CPCM input is available.&lt;br&gt;Bit[11] indicates that the DPCM input is available.&lt;br&gt;Bit[10] indicates that the MPCM input is available if the left and right of the CPCM input data are C0 and C1 respectively, the left and right of the DPCM input data are D0 and D1 respectively, and the left and right of the MPCM input data are M0 and M1 respectively. The mixing coefficients are A1 and A2. In the case of bit[13] = 0, the corresponding expressions of the output and the value of bit[12:8] are as follows:&lt;br&gt;00101: OUT = 0 * A1 + M1 * A2&lt;br&gt;00110: OUT = M0 * A1 + 0 * A2&lt;br&gt;00111: OUT = M0 * A1 + M1 * A2&lt;br&gt;01001: OUT = 0 * A1 + D1 * A2&lt;br&gt;01010: OUT = D0 * A1 +0 * A2&lt;br&gt;01011: OUT = D0 * A1 + D1 * A2&lt;br&gt;10001: OUT = 0 * A1 + C1 * A2&lt;br&gt;10010: OUT = C0 * A1 + 0 * A2&lt;br&gt;10011: OUT = C0 * A1 + C1 * A2&lt;br&gt;01100: OUT = D0 * A1 + M0 * A2&lt;br&gt;01101: OUT = D0 * A1 + M1 * A2&lt;br&gt;01110: OUT = D1 * A1 + M0 * A2&lt;br&gt;01111: OUT = D1 * A1 + M1 * A2&lt;br&gt;10100: OUT = C0 * A1 + M0 * A2&lt;br&gt;10101: OUT = C0 * A1 + M1 * A2&lt;br&gt;10110: OUT = C1 * A1 + M0 * A2&lt;br&gt;10111: OUT = C1 * A1 + M1 * A2&lt;br&gt;11000: OUT = C0 * A1 + D0 * A2&lt;br&gt;11001: OUT = C0 * A1 + D1 * A2&lt;br&gt;11010: OUT = C1 * A1 + D0 * A2&lt;br&gt;11011: OUT = C1 * A1 + D1 * A2&lt;br&gt;000xx: OUT = 0&lt;br&gt;Others: invalid configuration, and OUT = 0&lt;br&gt;Note: In the case of bit[13] = 1, A1 and A2 in the preceding expressions are interchanged." range="13:8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:6" property="RW"/>
				<Member name="dr_ctrl" description="Input source control of S/PDIF output audio-right channel mixing.&lt;br&gt;Bit[5] indicates interchange of mixing coefficients.&lt;br&gt;Bit[4] indicates that the CPCM input is available.&lt;br&gt;Bit[3] indicates that the DPCM input is available.&lt;br&gt;Bit[2] indicates that the MPCM input is available if the left and right of the CPCM input data are C0 and C1 respectively, the left and right of the DPCM input data are D0 and D1 respectively, and the left and right of the MPCM input data are M0 and M1 respectively. The mixing coefficients are A1 and A2. In the case of bit[5] = 0, the corresponding expressions of the output and the value of bit[4:0] are as follows:&lt;br&gt;00101: OUT = 0 * A1 + M1 * A2&lt;br&gt;00110: OUT = M0 * A1 + 0 * A2&lt;br&gt;00111: OUT = M0 * A1 + M1 * A2&lt;br&gt;01001: OUT = 0 * A1 + D1 * A2&lt;br&gt;01010: OUT = D0 * A1 + 0 * A2&lt;br&gt;01011: OUT = D0 * A1 + D1 * A2&lt;br&gt;10001: OUT= 0 * A1 + C1 * A2&lt;br&gt;10010: OUT = C0 * A1 + 0 * A2&lt;br&gt;10011: OUT = C0 * A1 + C1 * A2&lt;br&gt;01100: OUT = D0 * A1 + M0 * A2&lt;br&gt;01101: OUT = D0 * A1 + M1 * A2&lt;br&gt;01110: OUT = D1 * A1 + M0 * A2&lt;br&gt;01111: OUT = D1 * A1 + M1 * A2&lt;br&gt;10100: OUT = C0 * A1 + M0 * A2&lt;br&gt;10101: OUT = C0 * A1 + M1 * A2&lt;br&gt;10110: OUT = C1 * A1 + M0 * A2&lt;br&gt;10111: OUT = C1 * A1 + M1 * A2&lt;br&gt;11000: OUT = C0 * A1 + D0 * A2&lt;br&gt;11001: OUT = C0 * A1 + D1 * A2&lt;br&gt;11010: OUT = C1 * A1 + D0 * A2&lt;br&gt;11011: OUT = C1 * A1 + D1 * A2&lt;br&gt;000xx: OUT=0&lt;br&gt;Others: invalid configuration, and OUT = 0&lt;br&gt;Note: In the case of bit[5] = 1, A1 and A2 in the preceding expressions are interchanged." range="5:0" property="RW"/>
				<Register offset="0x002C"/>
			</RegisterGroup>
			<RegisterGroup name="AO_MIXING_CTRL2" description="AO_MIXING_CTRL2 is mixing control register 2 (soft reset)." value="0x00000000" startoffset="0x0030">
				<Member name="ext_cpcm_chsel" description="Selection of an MULTI_I2S audio mixing channel.&lt;br&gt;00: MULTI_I2S1 is selected for audio mixing.&lt;br&gt;01: MULTI_I2S2 is selected for audio mixing.&lt;br&gt;10: MULTI_I2S3 is selected for audio mixing.&lt;br&gt;11: MULTI_I2S4 is selected for audio mixing." range="31:30" property="-"/>
				<Member name="ml_ctrl" description="Input source control of MULTI_I2Sx output audio-left channel mixing. Note: In MULTI_I2Sx, x is selected by ext_cpcm_chsel.&lt;br&gt;Bit[29] indicates interchange of mixing coefficients.&lt;br&gt;Bit[28] indicates that the cpcm_ext input is available.&lt;br&gt;Bit[27] indicates that the DPCM input is available.&lt;br&gt;Bit[26] indicates that the MPCM input is available if the left and right of the CPCM input data are C0 and C1 respectively, the left and right of the DPCM input data are D0 and D1 respectively, and the left and right of the MPCM input data are M0 and M1 respectively. The mixing coefficients are A1 and A2. In the case of bit[29] = 0, the corresponding expressions of the output and the value of bit[28:24] are as follows:&lt;br&gt;00101: OUT = 0 * A1 + M1 * A2&lt;br&gt;00110: OUT = M0 * A1 + 0 * A2&lt;br&gt;00111: OUT = M0 * A1 + M1 * A2&lt;br&gt;01001: OUT = 0 * A1 + D1 * A2&lt;br&gt;01010: OUT = D0 * A1 + 0 * A2&lt;br&gt;01011: OUT = D0 * A1 + D1 * A2&lt;br&gt;10001: OUT = 0 * A1 + C1 * A2&lt;br&gt;10010: OUT = C0 * A1 + 0 * A2&lt;br&gt;10011: OUT = C0 * A1 + C1 * A2&lt;br&gt;01100: OUT = D0 * A1 + M0 * A2&lt;br&gt;01101: OUT = D0 * A1 + M1 * A2&lt;br&gt;01110: OUT = D1 * A1 + M0 * A2&lt;br&gt;01111: OUT = D1 * A1 + M1 * A2&lt;br&gt;10100: OUT = C0 * A1 + M0 * A2&lt;br&gt;10101: OUT = C0 * A1 + M1 * A2&lt;br&gt;10110: OUT = C1 * A1 + M0 * A2&lt;br&gt;10111: OUT = C1 * A1 + M1 * A2&lt;br&gt;11000: OUT = C0 * A1 + D0 * A2&lt;br&gt;11001: OUT = C0 * A1 + D1 * A2&lt;br&gt;11010: OUT = C1 * A1 + D0 * A2&lt;br&gt;11011: OUT = C1 * A1 + D1 * A2&lt;br&gt;000xx: OUT = 0&lt;br&gt;Others: invalid configuration, and OUT = 0&lt;br&gt;Note: In the case of bit[29] = 1, A1 and A2 in the preceding expressions are interchanged." range="29:24" property="RW"/>
				<Member name="reserved" description="Reserved." range="23:22" property="RW"/>
				<Member name="mr_ctrl" description="Input source control of MULTI_I2Sx output audio-right channel mixing. Note: In MULTI_I2Sx, x is selected by ext_cpcm_chsel.&lt;br&gt;Bit[21] indicates interchange of mixing coefficients.&lt;br&gt;Bit[20] indicates that the CPCM input is available.&lt;br&gt;Bit[19] indicates that the DPCM input is available.&lt;br&gt;Bit[18] indicates that the MPCM input is available if the left and right of the CPCM input data are C0 and C1 respectively, the left and right of the DPCM input data are D0 and D1 respectively, and the left and right of the MPCM input data are M0 and M1 respectively. The mixing coefficients are A1 and A2. In the case of bit[21] = 0, the corresponding expressions of the output and the value of bit[20:16] are as follows:&lt;br&gt;00101: OUT = 0 * A1 + M1 * A2&lt;br&gt;00110: OUT = M0 * A1 + 0 * A2&lt;br&gt;00111: OUT = M0 * A1 + M1 * A2&lt;br&gt;01001: OUT = 0 * A1 + D1 * A2&lt;br&gt;01010: OUT = D0 * A1 + 0 * A2&lt;br&gt;01011: OUT = D0 * A1 + D1 * A2&lt;br&gt;10001: OUT = 0 * A1 + C1 * A2&lt;br&gt;10010: OUT = C0 * A1 + 0 * A2&lt;br&gt;10011: OUT = C0 * A1 + C1 * A2&lt;br&gt;01100: OUT = D0 * A1 + M0 * A2&lt;br&gt;01101: OUT = D0 * A1 + M1 * A2&lt;br&gt;01110: OUT = D1 * A1 + M0 * A2&lt;br&gt;01111: OUT = D1 * A1 +M1 * A2&lt;br&gt;10100: OUT = C0 * A1 + M0 * A2&lt;br&gt;10101: OUT = C0 * A1 + M1 * A2&lt;br&gt;10110: OUT = C1 * A1 + M0 * A2&lt;br&gt;10111: OUT = C1 * A1 + M1 * A2&lt;br&gt;11000: OUT = C0 * A1 + D0 * A2&lt;br&gt;11001: OUT = C0 * A1 + D1 * A2&lt;br&gt;11010: OUT = C1 * A1 + D0 * A2&lt;br&gt;11011: OUT = C1 * A1 + D1 * A2&lt;br&gt;000xx: OUT = 0&lt;br&gt;Others: invalid configuration, and OUT = 0&lt;br&gt;Note: In the case of bit[21] = 1, A1 and A2 in the preceding expressions are interchanged." range="21:16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15:14" property="RW"/>
				<Member name="al2_ctrl" description="Input source control of I2S2 output audio-left channel mixing.&lt;br&gt;Bit[13] indicates interchange of mixing coefficients.&lt;br&gt;Bit[12] indicates that the CPCM input is available.&lt;br&gt;Bit[11] indicates that the DPCM input is available.&lt;br&gt;Bit[10] indicates that the MPCM input is available if the left and right of the CPCM input data are C0 and C1 respectively, the left and right of the DPCM input data are D0 and D1 respectively, and the left and right of the MPCM input data are M0 and M1 respectively. The mixing coefficients are A1 and A2. In the case of bit[13] = 0, the corresponding expressions of the output and the value of bit[12:8] are as follows:&lt;br&gt;0b00101: OUT = 0 * A1 + M1 * A2&lt;br&gt;0b00110: OUT = M0 * A1 + 0 * A2&lt;br&gt;0b00111: OUT = M0 * A1 + M1 * A2&lt;br&gt;0b01001: OUT = 0 * A1 + D1 * A2&lt;br&gt;0b01010: OUT = D0 * A1 + 0 * A2&lt;br&gt;0b01011: OUT = D0 * A1 + D1 * A2&lt;br&gt;0b10001: OUT = 0 * A1 + C1 * A2&lt;br&gt;0b10010: OUT = C0 * A1 + 0 * A2&lt;br&gt;0b10011: OUT = C0 * A1 + C1 * A2&lt;br&gt;0b01100: OUT = D0 * A1 + M0 * A2&lt;br&gt;0b01101: OUT = D0 * A1 + M1 * A2&lt;br&gt;0b01110: OUT = D1 * A1 + M0 * A2&lt;br&gt;0b01111: OUT = D1 * A1 + M1 * A2&lt;br&gt;0b10100: OUT = C0 * A1 + M0 * A2&lt;br&gt;0b10101: OUT = C0 * A1 + M1 * A2&lt;br&gt;0b10110: OUT = C1 * A1 + M0 * A2&lt;br&gt;0b10111: OUT = C1 * A1 + M1 * A2&lt;br&gt;0b11000: OUT = C0 * A1 + D0 * A2&lt;br&gt;0b11001: OUT = C0 * A1 + D1 * A2&lt;br&gt;0b11010: OUT = C1 * A1 + D0 * A2&lt;br&gt;0b11011: OUT = C1 * A1 + D1 * A2&lt;br&gt;0b000xx: OUT=0&lt;br&gt;Others: invalid configuration, and OUT = 0&lt;br&gt;Note: In the case of bit[13] = 1, A1 and A2 in the preceding expressions are interchanged." range="13:8" property="RW"/>
				<Member name="reserved" description="Reserved." range="7:6" property="RW"/>
				<Member name="ar2_ctrl" description="Input source control of I2S2 output audio-right channel mixing.&lt;br&gt;Bit[5] indicates interchange of mixing coefficients.&lt;br&gt;Bit[4] indicates that the CPCM input is available.&lt;br&gt;Bit[3] indicates that the DPCM input is available.&lt;br&gt;Bit[2] indicates that the MPCM input is available if the left and right of the CPCM input data are C0 and C1 respectively, the left and right of the DPCM input data are D0 and D1 respectively, and the left and right of the MPCM input data are M0 and M1 respectively. The mixing coefficients are A1 and A2. In the case of bit[5] = 0, the corresponding expressions of the output and the value of bit[4:0] are as follows:&lt;br&gt;00101: OUT = 0 * A1 + M1 * A2&lt;br&gt;00110: OUT = M0 * A1 + 0 * A2&lt;br&gt;00111: OUT = M0 * A1 + M1 * A2&lt;br&gt;01001: OUT = 0 * A1 + D1 * A2&lt;br&gt;01010: OUT = D0 * A1 + 0 * A2&lt;br&gt;01011: OUT = D0 * A1 + D1 * A2&lt;br&gt;10001: OUT = 0 * A1 + C1 * A2&lt;br&gt;10010: OUT = C0 * A1 + 0 * A2&lt;br&gt;10011: OUT = C0 * A1 + C1 * A2&lt;br&gt;01100: OUT = D0 * A1 + M0 * A2&lt;br&gt;01101: OUT = D0 * A1 + M1 * A2&lt;br&gt;01110: OUT = D1 * A1 + M0 * A2&lt;br&gt;01111: OUT = D1 * A1 + M1 * A2&lt;br&gt;10100: OUT = C0 * A1 + M0 * A2&lt;br&gt;10101: OUT = C0 * A1 + M1 * A2&lt;br&gt;10110: OUT = C1 * A1 + M0 * A2&lt;br&gt;10111: OUT = C1 * A1 + M1 * A2&lt;br&gt;11000: OUT = C0 * A1 + D0 * A2&lt;br&gt;11001: OUT = C0 * A1 + D1 * A2&lt;br&gt;11010: OUT = C1 * A1 + D0 * A2&lt;br&gt;11011: OUT = C1 * A1 + D1 * A2&lt;br&gt;000xx: OUT = 0&lt;br&gt;Others: invalid configuration, and OUT = 0&lt;br&gt;Note: In the case of bit[5] = 1, A1 and A2 in the preceding expressions are interchanged." range="5:0" property="RW"/>
				<Register offset="0x0030"/>
			</RegisterGroup>
			<RegisterGroup name="AO_VOLD_CTRL" description="AO_VOLD_CTRL is an S/PDIF volume control register (soft reset)." value="0x28280000" startoffset="0x0034">
				<Member name="alpha1_ds" description="Sign of S/PDIF output audio channel mixing coefficient 1.&lt;br&gt;0: positive number&lt;br&gt;1: negative number" range="31" property="RW"/>
				<Member name="alpha1_d_real" description="Index of S/PDIF audio channel mixing coefficient 1." range="30:24" property="RO"/>
				<Member name="alpha2_ds" description="Sign of S/PDIF audio channel mixing coefficient 2.&lt;br&gt;0: positive number&lt;br&gt;1: negative number" range="23" property="RW"/>
				<Member name="alpha2_d_real" description="Index of S/PDIF audio channel mixing coefficient 2." range="22:16" property="RO"/>
				<Member name="alpha1_dch" description="Command for changing S/PDIF volume 1.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="15" property="WO"/>
				<Member name="alpha1_d" description="Target value of changing S/PDIF volume 1.&lt;br&gt;0x00–0x28: mute&lt;br&gt;0x29: –80 dB&lt;br&gt;...&lt;br&gt;0x7E: +5 dB&lt;br&gt;0x7F: +6 dB" range="14:8" property="RW"/>
				<Member name="alpha2_dch" description="Command for changing S/PDIF volume 2.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="7" property="WO"/>
				<Member name="alpha2_d" description="Target value of changing S/PDIF volume 2.&lt;br&gt;0x00–0x28: mute&lt;br&gt;0x29: –80 dB&lt;br&gt;...&lt;br&gt;0x7E: +5 dB&lt;br&gt;0x7F: +6 dB" range="6:0" property="RW"/>
				<Register offset="0x0034"/>
			</RegisterGroup>
			<RegisterGroup name="AO_VOLA_CTRL1" description="AO_VOLA_CTRL1 is an I2S 1 output volume control register." value="0x28280000" startoffset="0x0038">
				<Member name="alpha1_a1s" description="Sign of I2S 1 output audio channel mixing coefficient 1.&lt;br&gt;0: positive number&lt;br&gt;1: negative number" range="31" property="RW"/>
				<Member name="alpha1_a1_real" description="Index of I2S 1 output audio channel mixing coefficient 1." range="30:24" property="RO"/>
				<Member name="alpha1_a2s" description="Sign of I2S 1 output audio channel mixing coefficient 2.&lt;br&gt;0: positive number&lt;br&gt;1: negative number" range="23" property="RW"/>
				<Member name="alpha1_a2_real" description="Index of I2S 1 output audio channel mixing coefficient 2.&lt;br&gt;The audio-left and audio-right channels of the analog output use the preceding mixing parameters and use the same formula. The only difference is that A and B use different input sources." range="22:16" property="RO"/>
				<Member name="alpha1_a1ch" description="Command for changing I2S 1 volume 1.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="15" property="WO"/>
				<Member name="alpha1_a1" description="Target value of changing I2S 1 volume 1.&lt;br&gt;0x00–0x28: mute&lt;br&gt;0x29: –80 dB&lt;br&gt;…&lt;br&gt;0x7E: +5 dB&lt;br&gt;0x7F: +6 dB" range="14:8" property="RW"/>
				<Member name="alpha1_a2ch" description="Command for changing I2S 1 volume 2.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="7" property="WO"/>
				<Member name="alpha1_a2" description="Target value of changing I2S 1 volume 2.&lt;br&gt;0x00–0x28: mute&lt;br&gt;0x29: –80 dB&lt;br&gt;...&lt;br&gt;0x7E: +5 dB&lt;br&gt;0x7F: +6 dB" range="6:0" property="RW"/>
				<Register offset="0x0038"/>
			</RegisterGroup>
			<RegisterGroup name="AO_VOLA_CTRL2" description="AO_VOLA_CTRL2 is an I2S 2 output volume control register." value="0x28280000" startoffset="0x003C">
				<Member name="alpha2_a1s" description="Sign of I2S 2 output audio channel mixing coefficient 1.&lt;br&gt;0: positive number&lt;br&gt;1: negative number" range="31" property="RW"/>
				<Member name="alpha2_a1_real" description="Index of I2S 2 output audio channel mixing coefficient 1." range="30:24" property="RO"/>
				<Member name="alpha2_a2s" description="Sign of I2S 2 output audio channel mixing coefficient 2.&lt;br&gt;0: positive number&lt;br&gt;1: negative number" range="23" property="RW"/>
				<Member name="alpha2_a2_real" description="Index of I2S 2 output audio channel mixing coefficient 2.&lt;br&gt;The audio-left and audio-right channels of the analog output use the preceding mixing parameters and use the same formula. The only difference is that A and B use different input sources." range="22:16" property="RO"/>
				<Member name="alpha2_a1ch" description="Command for changing I2S 2 volume 1.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="15" property="WO"/>
				<Member name="alpha2_a1" description="Target value of changing I2S 2 volume 1.&lt;br&gt;0x00–0x28: mute&lt;br&gt;0x29: –80 dB&lt;br&gt;…&lt;br&gt;0x7E: +5 dB&lt;br&gt;0x7F: +6 dB" range="14:8" property="RW"/>
				<Member name="alpha2_a2ch" description="Command for changing I2S 2 volume 2.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="7" property="WO"/>
				<Member name="alpha2_a2" description="Target value of changing I2S 2 volume 2.&lt;br&gt;0x00–0x28: mute&lt;br&gt;0x29: –80 dB&lt;br&gt;…&lt;br&gt;0x7E: +5 dB&lt;br&gt;0x7F: +6 dB" range="6:0" property="RW"/>
				<Register offset="0x003C"/>
			</RegisterGroup>
			<RegisterGroup name="AO_RD_CTRL" description="AO_RD_CTRL is a PCM operation control register (hard reset)." value="0x00000007" startoffset="0x0040">
				<Member name="reserved" description="Reserved." range="31:20" property="-"/>
				<Member name="es_endian_mod" description="Big and small endian mode of the ES.&lt;br&gt;B0, B1, B2, and B3 are data stored from the lower-bit addresses of the memory to the upper-bit addresses. Based on the value of a bit of endian_mode, the data word read value is as follows:&lt;br&gt;0: B0B1B2B3&lt;br&gt;1: B3B2B1B0" range="19" property="RW"/>
				<Member name="pcmo_endian_mod" description="Big and small endian mode of the PCMO.&lt;br&gt;B0, B1, B2, and B3 are data stored from the lower-bit addresses of the memory to the upper-bit addresses. Based on the value of a bit of endian_mode, the data word read value is as follows:&lt;br&gt;0: B0B1B2B3&lt;br&gt;1: B3B2B1B0" range="18" property="RW"/>
				<Member name="soft_pcmo_flag" description="Multiplexing setting of a CPCM buffer and a PCMO buffer.&lt;br&gt;0: The write pointer of the CPCM buffer uses audio_cpcm_wptr.&lt;br&gt;The read pointer of the PCMO buffer uses audio_pcmo_rptr.&lt;br&gt;1: The write pointer of the CPCM buffer uses audio_pcmo_wptr.&lt;br&gt;The read pointer of the PCMO buffer uses audio_cpcm_rptr." range="17" property="RW"/>
				<Member name="soft_ipcm_flag" description="Multiplexing setting of a CPCM buffer and an IPCM buffer.&lt;br&gt;0: The write pointer of the CPCM buffer uses audio_cpcm_wptr.&lt;br&gt;The read pointer of the IPCM buffer uses audio_ipcm_rptr.&lt;br&gt;1: The write pointer of the CPCM buffer uses audio_ipcm_wptr.&lt;br&gt;The read pointer of the IPCM buffer uses audio_cpcm_rptr." range="16" property="RW"/>
				<Member name="reserved" description="Reserved." range="15" property="-"/>
				<Member name="volume_a1_mask" description="Mask of the command for changing the volume of analog channel 1.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="14" property="RW"/>
				<Member name="volume_a2_mask" description="Mask of the command for changing the volume of analog channel 2.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="13" property="RW"/>
				<Member name="volume_d_mask" description="Mask of the command for changing the volume of a digital channel.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="12" property="RW"/>
				<Member name="volume_m_mask" description="Mask of the command for changing the volume of an extended I2S channel.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="11" property="RW"/>
				<Member name="volume_a1_clr" description="Command for clearing the volume of analog channel 1.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="10" property="RW"/>
				<Member name="volume_a2_clr" description="Command for clearing the volume of analog channel 2.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="9" property="RW"/>
				<Member name="volume_d_clr" description="Command for clearing the volume of a digital channel.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="8" property="RW"/>
				<Member name="volume_m_clr" description="Command for clearing the volume of an extended I2S channel.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="7" property="RW"/>
				<Member name="endian_mode" description="Control of the big and small endian mode of IPCM, MPCM, DPCM, and CPCM from upper bits to lower bits.&lt;br&gt;B0, B1, B2, and B3 are data stored from the lower-bit addresses of the memory to the upper-bit addresses. Based on the value of a bit of endian_mode, the data word read value is as follows:&lt;br&gt;0: B0B1B2B3&lt;br&gt;1: B3B2B1B0" range="6:3" property="RW"/>
				<Member name="cpcm_stall" description="CPCM data control.&lt;br&gt;0: Permit preparation of CPCM data.&lt;br&gt;1: Stop preparation of CPCM data." range="2" property="RW"/>
				<Member name="dpcm_stall" description="DPCM data control.&lt;br&gt;0: Permit preparation of DPCM data.&lt;br&gt;1: Stop preparation of DPCM data." range="1" property="RW"/>
				<Member name="mpcm_stall" description="MPCM data control.&lt;br&gt;0: Permit preparation of MPCM data.&lt;br&gt;1: Stop preparation of MPCM data." range="0" property="RW"/>
				<Register offset="0x0040"/>
			</RegisterGroup>
			<RegisterGroup name="AO_FSM" description="AO_FSM is an AO state machine register (soft reset)." value="0xF0000000" startoffset="0x0044">
				<Member name="rst_busy" description="Status of the soft reset of a module.&lt;br&gt;0: completed&lt;br&gt;1: uncompleted" range="31" property="RO"/>
				<Member name="cpcm_fifo_aempty" description="cpcm_fifo almost empty flag.&lt;br&gt;0: invalid&lt;br&gt;1: valid" range="30" property="RO"/>
				<Member name="dpcm_fifo_aempty" description="dpcm_fifo almost empty flag.&lt;br&gt;0: invalid&lt;br&gt;1: valid" range="29" property="RO"/>
				<Member name="mpcm_fifo_aempty" description="mpcm_fifo almost empty flag.&lt;br&gt;0: invalid&lt;br&gt;1: valid" range="28" property="RO"/>
				<Member name="reserved" description="Reserved." range="27:19" property="-"/>
				<Member name="ext_cpcm_chnum" description="Number of extended CPCM multi-audio channels.&lt;br&gt;000: zero extended channels &lt;br&gt;001: two extended channels &lt;br&gt;010: four extended channels &lt;br&gt;011: six extended channels &lt;br&gt;100: eight extended channels" range="18:16" property="RO"/>
				<Member name="ao_pcm_stateb" description="State machine of the ao_pcmbypass module." range="15:12" property="RO"/>
				<Member name="ao_dma_state" description="State machine of the ao_dma module." range="11:8" property="RO"/>
				<Member name="ao_pcm_state" description="State machine of the ao_pcm module." range="7:0" property="RO"/>
				<Register offset="0x0044"/>
			</RegisterGroup>
			<RegisterGroup name="AO_CPCM_START" description="AO_CPCM_START is a CPCM buffer start address register (hard reset)." value="0x00000000" startoffset="0x0048">
				<Member name="ao_cpcm_start" description="Start address of a CPCM cycle buffer.&lt;br&gt;Note: The address is 8-word aligned. That is, the lower five bits must be set to 0." range="31:0" property="RW"/>
				<Register offset="0x0048"/>
			</RegisterGroup>
			<RegisterGroup name="AO_CPCM_END" description="AO_CPCM_END is a CPCM buffer end address register (hard reset)." value="0x00000000" startoffset="0x004C">
				<Member name="ao_cpcm_end" description="End address of a CPCM cycle buffer.&lt;br&gt;Note: The address is 8-word aligned. That is, the lower five bits must be set to 0." range="31:0" property="RW"/>
				<Register offset="0x004C"/>
			</RegisterGroup>
			<RegisterGroup name="AO_CPCM_WPTR" description="AO_CPCM_WPTR is a CPCM buffer write pointer register (hard reset)." value="0x00000000" startoffset="0x0050">
				<Member name="ao_cpcm_wptr" description="Write pointer of a CPCM cycle buffer.&lt;br&gt;Note: Bit[31] is a reversal bit. Bit[30:0] indicates a physical address. The address must be a word address." range="31:0" property="RW"/>
				<Register offset="0x0050"/>
			</RegisterGroup>
			<RegisterGroup name="AO_CPCM_RPTR" description="AO_CPCM_RPTR is a CPCM buffer read pointer register (hard reset)." value="0x00000000" startoffset="0x0054">
				<Member name="ao_cpcm_rptr" description="Read pointer of a CPCM cycle buffer.&lt;br&gt;Note: Bit[31] is a reversal bit. Bit[30:0] indicates a physical address. The address must be a word address." range="31:0" property="RW"/>
				<Register offset="0x0054"/>
			</RegisterGroup>
			<RegisterGroup name="AO_DPCM_START" description="AO_DPCM_START is a DPCM buffer start address register (hard reset)." value="0x00000000" startoffset="0x0058">
				<Member name="ao_dpcm_start" description="Start address of a DPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x0058"/>
			</RegisterGroup>
			<RegisterGroup name="AO_DPCM_END" description="AO_DPCM_END is a DPCM buffer end address register (hard reset)." value="0x00000000" startoffset="0x005C">
				<Member name="ao_dpcm_end" description="End address of a DPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x005C"/>
			</RegisterGroup>
			<RegisterGroup name="AO_DPCM_WPTR" description="AO_DPCM_WPTR is a DPCM buffer write pointer register (hard reset)." value="0x00000000" startoffset="0x0060">
				<Member name="ao_dpcm_wptr" description="Write pointer of a DPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x0060"/>
			</RegisterGroup>
			<RegisterGroup name="AO_DPCM_RPTR" description="AO_DPCM_RPTR is a DPCM buffer read pointer register (hard reset)." value="0x00000000" startoffset="0x0064">
				<Member name="ao_dpcm_rptr" description="Read pointer of a DPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x0064"/>
			</RegisterGroup>
			<RegisterGroup name="AO_MPCM_START" description="AO_MPCM_START is an MPCM buffer start address register (hard reset)." value="0x00000000" startoffset="0x0068">
				<Member name="ao_mpcm_start" description="Start address of an MPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x0068"/>
			</RegisterGroup>
			<RegisterGroup name="AO_MPCM_END" description="AO_MPCM_END is an MPCM buffer end address register (hard reset)." value="0x00000000" startoffset="0x006C">
				<Member name="ao_mpcm_end" description="End address of an MPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x006C"/>
			</RegisterGroup>
			<RegisterGroup name="AO_MPCM_WPTR" description="AO_MPCM_WPTR is an MPCM buffer write pointer register (hard reset)." value="0x00000000" startoffset="0x0070">
				<Member name="ao_mpcm_wptr" description="Write pointer of an MPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x0070"/>
			</RegisterGroup>
			<RegisterGroup name="AO_MPCM_RPTR" description="AO_MPCM_RPTR is an MPCM buffer read pointer register (hard reset)." value="0x00000000" startoffset="0x0074">
				<Member name="ao_mpcm_rptr" description="Read pointer of an MPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x0074"/>
			</RegisterGroup>
			<RegisterGroup name="AO_IPCM_START" description="AO_IPCM_START is an IPCM buffer start address register (hard reset)." value="0x00000000" startoffset="0x0078">
				<Member name="ao_ipcm_start" description="Reserved." range="31:0" property="RW"/>
				<Register offset="0x0078"/>
			</RegisterGroup>
			<RegisterGroup name="AO_IPCM_END" description="AO_IPCM_END is an IPCM buffer end address register (hard reset)." value="0x00000000" startoffset="0x007C">
				<Member name="ao_ipcm_end" description="Reserved." range="31:0" property="RW"/>
				<Register offset="0x007C"/>
			</RegisterGroup>
			<RegisterGroup name="AO_IPCM_WPTR" description="AO_IPCM_WPTR is an IPCM buffer write pointer register (hard reset)." value="0x00000000" startoffset="0x0080">
				<Member name="ao_ipcm_wptr" description="Reserved." range="31:0" property="RW"/>
				<Register offset="0x0080"/>
			</RegisterGroup>
			<RegisterGroup name="AO_IPCM_RPTR" description="AO_IPCM_RPTR is an IPCM buffer read pointer register (hard reset)." value="0x00000000" startoffset="0x0084">
				<Member name="ao_ipcm_rptr" description="Reserved." range="31:0" property="RW"/>
				<Register offset="0x0084"/>
			</RegisterGroup>
			<RegisterGroup name="AO_CLFLOW_CNT" description="AO_CLFLOW_CNT is a CPCM buffer underflow threshold register (hard reset)." value="0x00000000" startoffset="0x0088">
				<Member name="ao_clflow_cnt" description="Underflow threshold of a CPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x0088"/>
			</RegisterGroup>
			<RegisterGroup name="AO_DLFLOW_CNT" description="AO_DLFLOW_CNT is a DPCM buffer underflow threshold register (hard reset)." value="0x00000000" startoffset="0x008C">
				<Member name="ao_dlflow_cnt" description="Underflow threshold of a DPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x008C"/>
			</RegisterGroup>
			<RegisterGroup name="AO_MLFLOW_CNT" description="AO_MLFLOW_CNT is an MPCM buffer underflow threshold register (hard reset)." value="0x00000000" startoffset="0x0090">
				<Member name="ao_mlflow_cnt" description="Underflow threshold of an MPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x0090"/>
			</RegisterGroup>
			<RegisterGroup name="AO_IUFLOW_CNT" description="AO_IUFLOW_CNT is an IPCM buffer underflow threshold register (hard reset)." value="0x00000000" startoffset="0x0094">
				<Member name="ao_iuflow_cnt" description="Underflow threshold of an IPCM cycle buffer." range="31:0" property="RW"/>
				<Register offset="0x0094"/>
			</RegisterGroup>
			<RegisterGroup name="AO_SW_VERSION" description="AO_SW_VERSION is a software driver version register (hard reset)." value="0x00000000" startoffset="0x0098">
				<Member name="ao_verison" description="Software driver version." range="31:0" property="RW"/>
				<Register offset="0x0098"/>
			</RegisterGroup>
			<RegisterGroup name="AO_VOLM_CTRL" description="AO_VOLM_CTRL is a MULTI_I2S volume control register." value="0x28280000" startoffset="0x009C">
				<Member name="alpha1_ms" description="Sign of MULTI_I2S output audio channel mixing coefficient 1.&lt;br&gt;0: positive number&lt;br&gt;1: negative number" range="31" property="RW"/>
				<Member name="alpha1_m_real" description="Index of MULTI_I2S output audio channel mixing coefficient 1. This coefficient is used to adjust the volumes of the extended audio-left and audio-right channels." range="30:24" property="RO"/>
				<Member name="alpha2_ms" description="Sign of MULTI_I2S output audio channel mixing coefficient 2.&lt;br&gt;0: positive number&lt;br&gt;1: negative number" range="23" property="RW"/>
				<Member name="alpha2_m_real" description="Index of MULTI_I2S output audio channel mixing coefficient 2.&lt;br&gt;The audio-left and audio-right channels of the analog output use the preceding mixing parameters and use the same formula. The only difference is that A and B use different input sources." range="22:16" property="RO"/>
				<Member name="alpha1_mch" description="Command for changing MULTI_I2S volume 1.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="15" property="WO"/>
				<Member name="alpha1_m" description="Target value of changingMULTI_I2S volume 1.&lt;br&gt;0x00–0x28: mute&lt;br&gt;0x29: –80 dB&lt;br&gt;...&lt;br&gt;0x7E: +5 dB&lt;br&gt;0x7F: +6 dB" range="14:8" property="RW"/>
				<Member name="alpha2_mch" description="Command for changing MULTI_I2S volume 2.&lt;br&gt;0: The command is invalid.&lt;br&gt;1: The command is valid." range="7" property="WO"/>
				<Member name="alpha2_m" description="Target value of changingMULTI_I2S volume 2.&lt;br&gt;0x00–0x28: mute&lt;br&gt;0x29: –80 dB&lt;br&gt;...&lt;br&gt;0x7E: +5 dB&lt;br&gt;0x7F: +6 dB" range="6:0" property="RW"/>
				<Register offset="0x009C"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="SIO" i2cSupport="false">
			<Module baseAddress="0x60150000"/>
			<RegisterGroup name="SIO_VERSION" description="SIO_VERSION is an SIO version register and used to record the version number of the SIOand perform the self-test for the SIO." value="0x00000013" startoffset="0x03C">
				<Member name="reserved" description="Reserved." range="31:9" property="reserved"/>
				<Member name="sio_loop" description="Selection of the SIO cycle mode or the normal mode.&lt;br&gt;0: normal mode&lt;br&gt;1: SIO transmit and receive data loopback mode. It is used to perform the self-test for the SIO. In this mode, the receive serial data line of the SIO is directly connected to the transmit serial data line of the SIO at the external interface of the SIO." range="8" property="RW"/>
				<Member name="vesion" description="Version number of the SIO." range="7:0" property="RO"/>
				<Register offset="0x03C"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_MODE" description="It is an SIO mode register and used to select the basic operating mode of the SIO.&lt;br&gt;&lt;ul&gt;&lt;li&gt;In master mode, the CRG transmits clock and synchronization signals to the CODEC andthe SIO.&lt;br&gt;&lt;/li&gt;&lt;li&gt;In slave mode, the external CODEC transmits clock and synchronization signals to theSIO.&lt;br&gt;Selection of the I2S or PCM master/slave mode is specified by the system control registersPERI_CRG19, PERI_CRG21, and PERI_CRG23. For details, see &quot;Description of SystemRegisters.&quot;&lt;/li&gt;&lt;/ul&gt;" value="0x00000000" startoffset="0x040">
				<Member name="reserved" description="Reserved." range="31:7" property="reserved"/>
				<Member name="clk_edge" description="Selection of the edge of the sampling data clock in PCM multi-channel receive mode.&lt;br&gt;0: The falling edge is valid.&lt;br&gt;1: The rising edge is valid." range="6" property="RW"/>
				<Member name="chn_num" description="Selection of the number of multi-channel receive channels.&lt;br&gt;00: 2 chn&lt;br&gt;01: 4 chn&lt;br&gt;10: 8 chn&lt;br&gt;11: 16 chn" range="5:4" property="RW"/>
				<Member name="ext_rec_en" description="In standard mode, the I2S receives data from two audio channels, namely, the audio-left channel and the audio-right channel. The PCM receives data from one audio channel.&lt;br&gt;In multi-channel receive mode, for the I2S or PCM, the number of receive channels can be configured. In this mode, the data width of a channel must be 8 bits or 16 bits.&lt;br&gt;0: standard I2S or PCM receive mode&lt;br&gt;1: extended I2S or PCM multi-channel receive mode." range="3" property="RW"/>
				<Member name="reserved" description="It is reserved and must be set to 0." range="2" property="reserved"/>
				<Member name="pcm_mode" description="PCM timing mode.&lt;br&gt;0: standard mode&lt;br&gt;1: self-defined mode" range="1" property="RW"/>
				<Member name="sio_mode" description="Selection of the PCM or I2S mode.&lt;br&gt;0: I2S mode&lt;br&gt;1: PCM mode" range="0" property="RW"/>
				<Register offset="0x040"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_INTSTATUS" description="SIO_INTSTATUS is an SIO interrupt status indicator register.&lt;br&gt;For a receive interrupt, when the data receive depth of the FIFO is greater than the thresholdof the FIFO, the high level is latched to the interrupt status register until an interrupt isgenerated. (The interrupt status register is reset in the next clock period even when the CPUclears an interrupt.) Therefore, it is recommended that the CPU should perform the followingprocessing steps:&lt;br&gt;(S)Set SIO_CT_CLR[intr_en] to 1 to disable the global interrupt function.&lt;br&gt;(S)Read the SIO interrupt status register SIO_INTSTATUS.&lt;br&gt;(S)Perform the corresponding handling based on the interrupt source.&lt;br&gt;(S)Set the corresponding bit of SIO_INTCLR to 1 to clear the interrupt.&lt;br&gt;(S)Set SIO_CT_SET[intr_en] to 1 to enable the global interrupt function.&lt;br&gt;(SE)&lt;br&gt;The mode of generating a transmit interrupt is the same as the mode of generating a receiveinterrupt. Therefore, it is recommended that you use the same mode for clearing a transmitinterrupt.&lt;br&gt;SIO_INTSTATUS is a raw interrupt status register. When the corresponding interrupt bit ismasked and the interrupt condition is met, the corresponding interrupt status bit is still reset,but no interrupt is triggered." value="0x00000000" startoffset="0x044">
				<Member name="reserved" description="Reserved." range="31:6" property="reserved"/>
				<Member name="tx_left_fifo_under" description="In I2S mode, status of an audio-left channel transmit FIFO underflow interrupt. In PCM mode, invalid.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="5" property="RO"/>
				<Member name="tx_right_fifo_under" description="In I2S mode, status of an audio-right channel transmit FIFO underflow interrupt. In PCM mode, status of a PCM transmit FIFO underflow interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="4" property="RO"/>
				<Member name="rx_left_fifo_over" description="In I2S mode, status of an audio-left channel receive FIFO overflow interrupt. In PCM mode, invalid.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="3" property="RO"/>
				<Member name="rx_right_fifo_over" description="In I2S mode, status of an audio-right channel receive FIFO overflow interrupt. In PCM mode, status of a PCM receive FIFO underflow interrupt.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="2" property="RO"/>
				<Member name="tx_intr" description="Status of an interrupt that occurs when the transmit FIFO is below the threshold.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="1" property="RO"/>
				<Member name="rx_intr" description="Status of an interrupt that occurs when the receive FIFO is above the threshold.&lt;br&gt;0: No interrupt is generated.&lt;br&gt;1: An interrupt is generated." range="0" property="RO"/>
				<Register offset="0x044"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_INTCLR" description="It is an SIO interrupt clear register. Interrupts can be cleared by bit." value="0x00000000" startoffset="0x048">
				<Member name="reserved" description="Reserved." range="31:6" property="reserved"/>
				<Member name="tx_left_fifo_under" description="In I2S mode, clear of an audio-left channel transmit FIFO underflow interrupt. In PCM mode, invalid.&lt;br&gt;0: No interrupt is cleared.&lt;br&gt;1: An interrupt is cleared." range="5" property="WO"/>
				<Member name="tx_right_fifo_under" description="In I2S mode, clear of an audio-right channel transmit FIFO underflow interrupt. In PCM mode, clear of a PCM transmit FIFO underflow interrupt.&lt;br&gt;0: No interrupt is cleared.&lt;br&gt;1: An interrupt is cleared." range="4" property="WO"/>
				<Member name="rx_left_fifo_over" description="In I2S mode, clear of an audio-left channel receive FIFO overflow interrupt. In PCM mode, invalid.&lt;br&gt;0: No interrupt is cleared.&lt;br&gt;1: An interrupt is cleared." range="3" property="WO"/>
				<Member name="rx_right_fifo_over" description="In I2S mode, clear of an audio-right channel receive FIFO overflow interrupt. In PCM mode, clear of a PCM receive FIFO underflow interrupt.&lt;br&gt;0: No interrupt is cleared.&lt;br&gt;1: An interrupt is cleared." range="2" property="WO"/>
				<Member name="tx_intr" description="Clear of an interrupt that occurs when the transmit FIFO is below the threshold.&lt;br&gt;0: No interrupt is cleared.&lt;br&gt;1: An interrupt is cleared." range="1" property="WO"/>
				<Member name="rx_intr" description="Clear of an interrupt that occurs when the receive FIFO is above the threshold.&lt;br&gt;0: No interrupt is cleared.&lt;br&gt;1: An interrupt is cleared." range="0" property="WO"/>
				<Register offset="0x048"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_I2S_LEFT_XD" description="SIO_I2S_LEFT_XD is an I2S audio-left channel data transmit register.&lt;br&gt;When data is written to the register, valid data should be arranged in the low-bit area of theregister. For example, if the data width is 8 bits, bit[7:0] is valid, and bit[31:8] is invalid; if thedata width is 16 bits, bit[15:0] is valid, and bit[31:16] is invalid. The bits that exceed the validdata width are automatically set to 0 by the SIO module." value="0x00000000" startoffset="0x04C">
				<Member name="tx_left_data" description="Audio-left channel transmit data." range="31:0" property="WO"/>
				<Register offset="0x04C"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_I2S_RIGHT_XD" description="SIO_I2S_RIGHT_XD is an I2S audio-right channel data transmit register. The PCM datatransmit register is multiplexed with the I2S audio-right channel data transmit register.&lt;br&gt;When data is written to the register, valid data should be arranged in the low-bit area of theregister. For example, if the data width is 8 bits, bit[7:0] is valid, and bit[31:8] is invalid; if thedata width is 16 bits, bit[15:0] is valid, and bit[31:16] is invalid. The bits that exceed the validdata width are automatically set to 0 by the SIO module." value="0x00000000" startoffset="0x050">
				<Member name="tx_right_data" description="Audio-right channel transmit data." range="31:0" property="WO"/>
				<Register offset="0x050"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_PCM_XD" description="SIO_PCM_XD is a PCM data transmit register. The PCM data transmit register ismultiplexed with the I2S audio-right channel data transmit register.&lt;br&gt;When valid data is written to the register, valid data should be arranged in the low-bit area ofthe register. For example, if the data width is 8 bits, bit[7:0] is valid, and bit[31:8] is invalid; ifthe data width is 16 bits, bit[15:0] is valid, and bit[31:16] is invalid. The bits that exceed thevalid data width are automatically set to 0 by the SIO module." value="0x00000000" startoffset="0x050">
				<Member name="reserved" description="Reserved." range="31:16" property="reserved"/>
				<Member name="tx_data" description="PCM transmit data." range="15:0" property="WO"/>
				<Register offset="0x050"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_I2S_LEFT_RD" description="SIO_I2S_LEFT_RD is an I2S audio-left channel data receive register.&lt;br&gt;The SIP module arranges the received valid data in the low-bit area of the register. Forexample, if the data width is 8 bits, bit[7:0] is valid, and bit[31:8] is invalid; if the data widthis 16 bits, bit[15:0] is valid, and bit[31:16] is invalid. The bits that exceed the valid data widthare automatically set to 0 by the SIO module." value="0x00000000" startoffset="0x054">
				<Member name="rx_left_data" description="Data received on the I2S audio-left channel." range="31:0" property="RO"/>
				<Register offset="0x054"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_I2S_RIGHT_RD" description="SIO_I2S_RIGHT_RD is an I2S audio-right channel data receive register. The PCM datareceive register is multiplexed with the I2S audio-right channel data receive register.&lt;br&gt;The SIP module arranges the received valid data in the low-bit area of the register. Forexample, if the data width is 8 bits, bit[7:0] is valid, and bit[31:8] is invalid; if the data widthis 16 bits, bit[15:0] is valid, and bit[31:16] is invalid. The bits that exceed the valid data widthare automatically set to 0 by the SIO module." value="0x00000000" startoffset="0x058">
				<Member name="rx_right_data" description="Data received on the I2S audio-right channel." range="31:0" property="RO"/>
				<Register offset="0x058"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_PCM_RD" description="SIO_PCM_RD is a PCM data receive register. The PCM data receive register is multiplexedwith the I2S audio-right channel data receive register.&lt;br&gt;The SIP module arranges the received valid data in the low-bit area of the register. Forexample, if the data width is 8 bits, bit[7:0] is valid, and bit[31:8] is invalid; if the data widthis 16 bits, bit[15:0] is valid, and bit[31:16] is invalid. The bits that exceed the valid data widthare automatically set to 0 by the SIO module." value="0x00000000" startoffset="0x058">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="rx_data" description="Data received by the PCM." range="15:0" property="RO"/>
				<Register offset="0x058"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_CT_SET" description="To facilitate the bit operation for the SIO control register, 0x05C is the address of the settingregister in the SIO. If the corresponding bit of the register is set to 1, the corresponding bit isset to 1. It is invalid if the corresponding bit of the register is set to 0. The attribute of theregister is read and write." value="0x00000000" startoffset="0x05C">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="rst_n" description="Reset of an I2S or a PCM channel; valid at the low level.&lt;br&gt;It resets the I2S or PCM receive and transmit module (including the FIFO). Therefore, the transmit and receive FIFO status register becomes 0. The CPU interface register module is not reset." range="15" property="RW"/>
				<Member name="intr_en" description="Global interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="14" property="RW"/>
				<Member name="rx_enable" description="Receive channel enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="13" property="RW"/>
				<Member name="tx_enable" description="Transmit channel enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="12" property="RW"/>
				<Member name="rx_fifo_disable" description="Receive FIFO disable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="11" property="RW"/>
				<Member name="tx_fifo_disable" description="Transmit FIFO disable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="10" property="RW"/>
				<Member name="rx_data_merge_en" description="Data receive combination enable; valid only in the I2S mode when the data width is 16 bits.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;If this bit is set to 1, data on the audio-left channel and data on the audio-right channel combine 32-bit data, and the 32-bit data is stored in the FIFO. The 16-bit data on the audio-left channel occupies the upper 16 bits. The 16-bit data on the audio-right channel occupies the lower 16 bits. Therefore, the FIFO usage can be improved to support long-time buffering.&lt;br&gt;The CPU reads data from the receive FIFO by adhering to the following sequence: The CPU reads 32-bit data (16-bit data on the audio-left channel and 16-bit data on the audio-right channel) from the FIFO on the audio-left channel and reads 32-bit data from the FIFO on the audio-right channel, and so on." range="9" property="RW"/>
				<Member name="tx_data_merge_en" description="Data transmit combination enable; valid only in the I2S mode when the data width is 16 bits.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;If this bit is set to 1, data on the audio-left channel and data on the audio-right channel combine 32-bit data, and the 32-bit data is stored in the FIFO. The 16-bit data on the audio-left channel occupies the upper 16 bits. The 16-bit data on the audio-right channel occupies the lower 16 bits. Therefore, the FIFO usage can be improved to support long-time buffering.&lt;br&gt;In this case, the CPU writes data into the transmit FIFO by adhering to the following sequence: The CPU writes 32-bit data (16-bit data on the audio-left channel and 16-bit data on the audio-right channel) into the FIFO on the audio-left channel and writes 32-bit data into the FIFO on the audio-right channel, and so on." range="8" property="RW"/>
				<Member name="rx_fifo_threshold" description="Receive FIFO threshold.&lt;br&gt;If the condition rx_right_depth ≥ (rx_fifo_threshold + 1) is met, a receive interrupt and a DMA request are reported." range="7:4" property="RW"/>
				<Member name="tx_fifo_threshold" description="Transmit FIFO threshold.&lt;br&gt;If the condition tx_right_depth &lt; (tx_fifo_threshold + 1) is met, a transmit interrupt and a DMA request are reported." range="3:0" property="RW"/>
				<Register offset="0x05C"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_CT_CLR" description="To facilitate the bit operation for the SIO control register, in the SIO, 0x060 is the address ofthe clear register. If the corresponding bit of the register is set to 1, the corresponding bit iscleared. It is invalid if the corresponding bit of the register is set to 0. The attribute of theregister is write only." value="0x00008000" startoffset="0x05C">
				<Member name="reserved" description="Reserved." range="31:16" property="-"/>
				<Member name="rst_n" description="Reset of an I2S or a PCM channel; valid at the low level.&lt;br&gt;It resets the I2S or PCM receive and transmit module (including the FIFO). Therefore, the transmit and receive FIFO status register becomes 0. The CPU interface register module is not reset." range="15" property="RW"/>
				<Member name="intr_en" description="Global interrupt enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="14" property="RW"/>
				<Member name="rx_enable" description="Receive channel enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="13" property="RW"/>
				<Member name="tx_enable" description="Transmit channel enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="12" property="RW"/>
				<Member name="rx_fifo_disable" description="Receive FIFO disable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="11" property="RW"/>
				<Member name="tx_fifo_disable" description="Transmit FIFO disable.&lt;br&gt;0: enabled&lt;br&gt;1: disabled" range="10" property="RW"/>
				<Member name="rx_data_merge_en" description="Data receive combination enable; valid only in the I2S mode when the data width is 16 bits.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;If this bit is set to 1, data on the audio-left channel and data on the audio-right channel combine 32-bit data, and the 32-bit data is stored in the FIFO. The 16-bit data on the audio-left channel occupies the upper 16 bits. The 16-bit data on the audio-right channel occupies the lower 16 bits. Therefore, the FIFO usage can be improved to support long-time buffering.&lt;br&gt;The CPU reads data from the receive FIFO by adhering to the following sequence: The CPU reads 32-bit data (16-bit data on the audio-left channel and 16-bit data on the audio-right channel) from the FIFO on the audio-left channel and reads 32-bit data from the FIFO on the audio-right channel, and so on." range="9" property="RW"/>
				<Member name="tx_data_merge_en" description="Data transmit combination enable; valid only in the I2S mode when the data width is 16 bits.&lt;br&gt;0: disabled&lt;br&gt;1: enabled&lt;br&gt;If this bit is set to 1, data on the audio-left channel and data on the audio-right channel combine 32-bit data, and the 32-bit data is stored in the FIFO. The 16-bit data on the audio-left channel occupies the upper 16 bits. The 16-bit data on the audio-right channel occupies the lower 16 bits. Therefore, the FIFO usage can be improved to support long-time buffering.&lt;br&gt;In this case, the CPU writes data into the transmit FIFO by adhering to the following sequence: The CPU writes 32-bit data (16-bit data on the audio-left channel and 16-bit data on the audio-right channel) into the FIFO on the audio-left channel and writes 32-bit data into the FIFO on the audio-right channel, and so on." range="8" property="RW"/>
				<Member name="rx_fifo_threshold" description="Receive FIFO threshold.&lt;br&gt;If the condition rx_right_depth ≥ (rx_fifo_threshold + 1) is met, a receive interrupt and a DMA request are reported." range="7:4" property="RW"/>
				<Member name="tx_fifo_threshold" description="Transmit FIFO threshold.&lt;br&gt;If the condition tx_right_depth &lt; (tx_fifo_threshold + 1) is met, a transmit interrupt and a DMA request are reported." range="3:0" property="RW"/>
				<Register offset="0x05C"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_RX_STA" description="SIO_RX_STA is an SIO receive status register." value="0x00000000" startoffset="0x068">
				<Member name="reserved" description="Reserved." range="31:10" property="-"/>
				<Member name="rx_left_depth" description="Receive FIFO depth on the audio-left channel.&lt;br&gt;It is valid only in I2S mode." range="9:5" property="RO"/>
				<Member name="rx_right_depth" description="Receive FIFO depth on the audio-right channel in I2S mode.&lt;br&gt;Receive FIFO depth of the PCM in PCM mode." range="4:0" property="RO"/>
				<Register offset="0x068"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_TX_STA" description="SIO_TX_STA is an SIO transmit status register." value="0x00000000" startoffset="0x06C">
				<Member name="reserved" description="Reserved." range="31:10" property="RO"/>
				<Member name="tx_left_depth" description="Transmit FIFO depth on the audio-left channel.&lt;br&gt;It is valid only in I2S mode." range="9:5" property="RO"/>
				<Member name="tx_right_depth" description="Transmit FIFO depth on the audio-right channel in I2S mode.&lt;br&gt;Transmit FIFO depth of the PCM in PCM mode." range="4:0" property="RO"/>
				<Register offset="0x06C"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_DATA_WIDTH_SET" description="The register is used to set the data width in I2S or PCM mode." value="0x00000009" startoffset="0x078">
				<Member name="reserved" description="Reserved." range="31:6" property="-"/>
				<Member name="rx_mode" description="Length of received data.&lt;br&gt;000: 8 bits&lt;br&gt;001: 16 bits&lt;br&gt;010: 18 bits&lt;br&gt;011: 20 bits&lt;br&gt;100: 24 bits&lt;br&gt;101: 32 bits&lt;br&gt;110–111: reserved&lt;br&gt;In I2S mode, 16 bits, 18 bits, 20 bits, 24 bits, and 32bits are supported.&lt;br&gt;In PCM mode, 8 bits and 16 bits are supported.&lt;br&gt;For multi-channel receive, in I2S or PCM mode, only 8 bits and 16 bits are supported." range="5:3" property="RW"/>
				<Member name="tx_mode" description="Length of transmitted data.&lt;br&gt;In I2S mode,&lt;br&gt;000: reserved&lt;br&gt;001: 16 bits&lt;br&gt;010: 18 bits&lt;br&gt;011: 20 bits&lt;br&gt;100: 24 bits&lt;br&gt;101: 32 bits&lt;br&gt;110–111: reserved&lt;br&gt;In PCM mode,&lt;br&gt;000: 8 bits&lt;br&gt;001: 16 bits&lt;br&gt;010: 32 bits&lt;br&gt;011: 64 bits&lt;br&gt;100: 128 bits&lt;br&gt;101–111: reserved" range="2:0" property="RW"/>
				<Register offset="0x078"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_I2S_START_POS" description="SIO_I2S_START_POS is an I2S audio-left and audio-right channel start positionconfiguration control register.&lt;br&gt;In I2S mode, after combination of the data operation addresses of the audio-left channel andthe data operation addresses of the audio-right channel is enabled, the register controls thestart access channel (from the audio-left channel or from the audio-right channel)." value="0x00000000" startoffset="0x07C">
				<Member name="reserved" description="Reserved." range="31:2" property="-"/>
				<Member name="start_pos_write" description="In the case of writing data into the transmit FIFO,&lt;br&gt;0: The access is started from the audio-left channel&lt;br&gt;1: The access is started from the audio-right channel" range="1" property="RW"/>
				<Member name="start_pos_read" description="In the case of reading data from the receive FIFO,&lt;br&gt;0: The access is started from the audio-left channel&lt;br&gt;1: The access is started from the audio-right channel" range="0" property="RW"/>
				<Register offset="0x07C"/>
			</RegisterGroup>
			<RegisterGroup name="I2S_POS_FLAG" description="I2S_POS_FLAG is an I2S audio-left and audio-right channel operation current position statusregister.&lt;br&gt;In I2S mode, after combination of the data operation addresses of the audio-left channel andthe data operation addresses of the audio-right channel is enabled, the register indicates thenext access channel (from the audio-left channel or from the audio-right channel)." value="0x00000000" startoffset="0x080">
				<Member name="reserved" description="Reserved." range="31:2" property="-"/>
				<Member name="start_pos_write" description="In the case of writing data into the transmit FIFO,&lt;br&gt;0: The next access is started from the audio-left channel&lt;br&gt;1: The next access is started from the audio-right channel" range="1" property="RO"/>
				<Member name="start_pos_read" description="In the case of reading data from the receive FIFO,&lt;br&gt;0: The next access is started from the audio-left channel&lt;br&gt;1: The next access is started from the audio-right channel" range="0" property="RO"/>
				<Register offset="0x080"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_SIGNED_EXT" description="SIO_SIGNED_EXT is an upper-bit data sign extension enable register. The flag is valid onlyfor received data. It is invalid for transmitted data. In PCM or I2S mode, received datasupports sign extension.&lt;br&gt;If the width of received valid data is 8 bits, 16 bits, 18 bits, 20 bits, or 24 bits, and the flag isenabled, the invalid upper bit of 32-bit data is set to the value corresponding to the valid mostsignificant bit of the received data, and then the value is written to the receive FIFO when thereceived data is converted into 32-bit data.&lt;br&gt;The following takes the 16-bit width as an example.&lt;br&gt;if(data_rx[15]==1)data_rx[31:16]=0xffff;&lt;br&gt;elsedata_rx[31:16]=0x0000;" value="0x00000000" startoffset="0x084">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="signed_ext_en" description="Upper-bit data sign extension enable.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x084"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_I2S_POS_MERGE_EN" description="In I2S mode, SIO_I2S_POS_MERGE_EN is used to enable combination of operationaddresses on the audio-left and audio-right channels.&lt;br&gt;In I2S mode, when the FIFO data of the SIO is read and written in DMA mode, the CPUneeds to continuously configure DMA operation addresses because the data addresses on theaudio-left channel are different from the data addresses on the audio-right channel. As a result,the CPU efficiency is low. To improve the CPU efficiency, enable of the unified addresses forreading and writing data on the audio-left and audio-right channels can be controlled.&lt;br&gt;In the case of enable, the SIO_I2S_DUAL_RX_CHN register is used for reading data on theaudio-left and audio-right channels, and the SIO_I2S_DUAL_TX_CHN register is used forwriting data into the audio-left and audio-right channels." value="0x00000000" startoffset="0x088">
				<Member name="reserved" description="Reserved." range="31:1" property="-"/>
				<Member name="merge_en" description="In I2S mode, combination enable of operation addresses on the audio-left and audio-right channels.&lt;br&gt;0: disabled&lt;br&gt;1: enabled" range="0" property="RW"/>
				<Register offset="0x088"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_INTMASK" description="SIO_INTMASK is an interrupt mask register." value="0x00000000" startoffset="0x08C">
				<Member name="reserved" description="Reserved." range="31:6" property="-"/>
				<Member name="tx_left_fifo_under" description="In I2S mode, audio-left channel transmit FIFO underflow interrupt mask. In PCM mode, this bit is invalid.&lt;br&gt;0: not masked&lt;br&gt;1: masked." range="5" property="RW"/>
				<Member name="tx_right_fifo_under" description="In I2S mode, audio-right channel transmit FIFO underflow interrupt mask. In PCM mode, PCM transmit FIFO underflow interrupt mask.&lt;br&gt;0: not masked&lt;br&gt;1: masked" range="4" property="RW"/>
				<Member name="rx_left_fifo_over" description="In I2S mode, audio-left channel receive FIFO overflow interrupt mask. In PCM mode, this bit is invalid.&lt;br&gt;0: not masked&lt;br&gt;1: masked" range="3" property="RW"/>
				<Member name="rx_right_fifo_over" description="In I2S mode, audio-right channel receive FIFO overflow interrupt mask. In PCM mode, PCM receive FIFO underflow interrupt mask.&lt;br&gt;0: not masked&lt;br&gt;1: masked" range="2" property="RW"/>
				<Member name="tx_intr" description="Mask of an interrupt that occurs when the transmit FIFO is below the threshold.&lt;br&gt;0: not masked&lt;br&gt;1: masked" range="1" property="RW"/>
				<Member name="rx_intr" description="Mask of an interrupt that occurs when the receive FIFO is above the threshold.&lt;br&gt;0: not masked&lt;br&gt;1: masked" range="0" property="RW"/>
				<Register offset="0x08C"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_I2S_DUAL_RX_CHN" description="SIO_I2S_DUAL_TX_CHN is a received data read register after combination of operationaddresses on the I2S audio-left and audio-right channels is enabled." value="0x00000000" startoffset="0x0A0">
				<Member name="rx_data" description="Received data." range="31:0" property="RO"/>
				<Register offset="0x0A0"/>
			</RegisterGroup>
			<RegisterGroup name="SIO_I2S_DUAL_TX_CHN" description="SIO_I2S_DUAL_TX_CHN is a transmitted data write register after combination of operationaddresses on the I2S audio-left and audio-right channels is enabled." value="0x00000000" startoffset="0x0C0">
				<Member name="tx_data" description="Transmitted data." range="31:0" property="WO"/>
				<Register offset="0x0C0"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
	<ModuleList>
		<ModuleGroup name="IO_CONFIG" i2cSupport="false">
			<Module baseAddress="0x10203000"/>
			<RegisterGroup name="SIO2_GPIO_HDMIHOT" description="sio2_gpio_hdmihot is a multiplexing control registor for the HDMI_HOTPLUG pin." value="0x00000000" startoffset="0x014">
				<Member name="sio2_gpio_hdmihot" description="Multiplexing for the HDMI_HOTPLUG pin.&lt;br&gt;00: GPIO0_0&lt;br&gt;10: HDMI_HOTPLUG&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x014"/>
			</RegisterGroup>
			<RegisterGroup name="SIO2_GPIO_HDMICEC" description="sio2_gpio_hdmicec is a multiplexing control registor for the HDMI_CEC pin." value="0x00000000" startoffset="0x018">
				<Member name="sio2_gpio_hdmicec" description="Multiplexing for the HDMI_CEC pin.&lt;br&gt;00: GPIO0_1&lt;br&gt;10: HDMI_CEC&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x018"/>
			</RegisterGroup>
			<RegisterGroup name="SPDIF_GPIO" description="spdif_gpio is a multiplexing control registor for the SPDIF_OUT pin." value="0x00000000" startoffset="0x01C">
				<Member name="spdif_gpio" description="Multiplexing for the SPDIF_OUT pin.&lt;br&gt;00: GPIO0_2&lt;br&gt;01: SPDIF_OUT&lt;br&gt;10: NF_BOOTBW&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x01C"/>
			</RegisterGroup>
			<RegisterGroup name="I2C1_GPIO_HDMI" description="i2c1_gpio_hdmi is a multiplexing control registor for the HDMI_SDA and HDMI_SCL pins." value="0x00000000" startoffset="0x020">
				<Member name="i2c1_gpio_hdmi" description="Multiplexing for the HDMI_SDA pin.&lt;br&gt;00: GPIO0_3&lt;br&gt;01: HDMI_SDA&lt;br&gt;10: I2C1_SDA&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the HDMI_SCL pin.&lt;br&gt;00: GPIO0_4&lt;br&gt;01: HDMI_SCL&lt;br&gt;10: I2C1_SCL&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x020"/>
			</RegisterGroup>
			<RegisterGroup name="UART0_GPIO" description="uart0_gpio is a multiplexing control registor for the UART0_RXD and UART0_TXD pins." value="0x00000000" startoffset="0x024">
				<Member name="uart0_gpio" description="Multiplexing for the UART0_RXD pin.&lt;br&gt;0: UART0_RXD&lt;br&gt;1: GPIO1_0&lt;br&gt;Multiplexing for the UART0_TXD pin.&lt;br&gt;0: UART0_TXD&lt;br&gt;1: GPIO1_1" range="0" property="RW"/>
				<Register offset="0x024"/>
			</RegisterGroup>
			<RegisterGroup name="UART1_GPIO_USB1_I2C1" description="uart1_gpio_usb1_i2c1 is a multiplexing control registor for the USB1_PWREN andUSB1_OVRCUR pins." value="0x00000000" startoffset="0x028">
				<Member name="uart1_gpio_usb1_i2c1" description="Multiplexing for the USB1_PWREN pin.&lt;br&gt;00: GPIO1_2&lt;br&gt;10: USB1_PWREN&lt;br&gt;11: I2C1_SDA&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the USB1_OVRCUR pin.&lt;br&gt;00: GPIO1_4&lt;br&gt;10: USB1_OVRCUR&lt;br&gt;11: I2C1_SCL&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x028"/>
			</RegisterGroup>
			<RegisterGroup name="UART1_GPIO_USB0" description="uart1_gpio_usb0 is a multiplexing control registor for the USB0_PWREN andUSB0_OVRCUR pins." value="0x00000000" startoffset="0x02C">
				<Member name="uart1_gpio_usb0" description="Multiplexing for the USB0_PWREN pin.&lt;br&gt;00: GPIO1_3&lt;br&gt;10: USB0_PWREN&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the USB0_OVRCUR pin.&lt;br&gt;00: GPIO1_5&lt;br&gt;10: USB0_OVRCUR&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x02C"/>
			</RegisterGroup>
			<RegisterGroup name="DET_NF_MII0_GPIO" description="det_nf_mii0_gpio is a multiplexing control registor for the MII0_TXD1 and MII0_TXD0 pins." value="0x00000000" startoffset="0x030">
				<Member name="det_nf_mii0_gpio" description="Multiplexing for the MII0_TXD1 pin.&lt;br&gt;000: CLK_EARLY_OUT&lt;br&gt;001: BOOT_SEL0&lt;br&gt;010: MII0_TXD1&lt;br&gt;011: GPIO1_6&lt;br&gt;100: MII1_CRS&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the MII0_TXD0 pin.&lt;br&gt;000: SYS_RST_COM_OUT&lt;br&gt;001: BOOT_SEL1&lt;br&gt;010: MII0_TXD0&lt;br&gt;011: GPIO1_7&lt;br&gt;100: MII1_COL&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x030"/>
			</RegisterGroup>
			<RegisterGroup name="MII0_NF_GPIO" description="mii0_nf_gpio is a multiplexing control registor for the MII0_TXEN pin." value="0x00000000" startoffset="0x034">
				<Member name="mii0_nf_gpio" description="Multiplexing for the MII0_TXEN pin.&lt;br&gt;000: MII0_TXEN&lt;br&gt;001: NF_BOOT_CFG4&lt;br&gt;011: GPIO2_0&lt;br&gt;100: MII1_TXD3&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x034"/>
			</RegisterGroup>
			<RegisterGroup name="MII0_GPIO" description="mii0_gpio is a multiplexing control registor for the MII0_RXDV, MII0_RXD1, andMII0_RXD pins." value="0x00000000" startoffset="0x038">
				<Member name="mii0_gpio" description="Multiplexing for the MII0_RXDV pin.&lt;br&gt;000: MII0_RXDV&lt;br&gt;001: GPIO2_1&lt;br&gt;100: MII1_TXD2&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the MII0_RXD1 pin.&lt;br&gt;000: MII0_RXD1&lt;br&gt;001: GPIO2_2&lt;br&gt;100: MII1_RXD2&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the MII0_RXD0 pin.&lt;br&gt;000: MII0_RXD0&lt;br&gt;001: GPIO2_3&lt;br&gt;100: MII1_TXCK&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x038"/>
			</RegisterGroup>
			<RegisterGroup name="MII0_RMII0" description="mii0_rmii0 is a multiplexing control registor for the RMII0_REFCLK pin." value="0x00000000" startoffset="0x03C">
				<Member name="mii0_rmii0" description="Multiplexing for the RMII0_REFCLK pin.&lt;br&gt;000: RMII0_REFCLK&lt;br&gt;001: GPIO2_4&lt;br&gt;100: MII1_RXD3&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x03C"/>
			</RegisterGroup>
			<RegisterGroup name="DET_NF_USB0_PLL_MII_GPIO_RGMII_SDIO" description="det_nf_usb0_pll_mii_gpio_rgmii_sdio is a multiplexing control registor for the MII1_TXD1and MII1_TXD0 pins." value="0x00000000" startoffset="0x04C">
				<Member name="det_nf_usb0_pll_mii_gpio_rgmii_sdio" description="Multiplexing for the MII1_TXD1 pin.&lt;br&gt;000: reverved&lt;br&gt;001: NF_BOOT_CFG3&lt;br&gt;010: RNG_SAMPLE_DATA&lt;br&gt;011: PLL_CLKOUT0&lt;br&gt;100: MII1_TXD1&lt;br&gt;101: PWM_OUT0&lt;br&gt;110: GPIO2_5&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the MII1_TXD0 pin.&lt;br&gt;000: reserved&lt;br&gt;001: NF_BOOT_CFG2&lt;br&gt;010: RNG_SAMPLE_CLK&lt;br&gt;011: PLL_CLKOUT1&lt;br&gt;100: MII1_TXD0&lt;br&gt;101: PWM_OUT1&lt;br&gt;110: GPIO2_6&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x04C"/>
			</RegisterGroup>
			<RegisterGroup name="MII_USB1_PLL_GPIO_RGMII_SDIO" description="mii_usb1_pll_gpio_rgmii_sdio is a multiplexing control registor for the MII1_TXEN pin." value="0x00000000" startoffset="0x050">
				<Member name="mii_usb1_pll_gpio_rgmii_sdio" description="Multiplexing for the MII1_TXEN pin.&lt;br&gt;000: MII1_TXEN&lt;br&gt;001: NF_BOOT_CFG1&lt;br&gt;011: PLL_CLKOUT2&lt;br&gt;101: PWM_OUT2&lt;br&gt;110: GPIO2_7&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x050"/>
			</RegisterGroup>
			<RegisterGroup name="MII_USB1_RGMII_SDIO" description="mii_usb1_rgmii_sdio is a multiplexing control registor for the MII1_RXDV pin." value="0x00000000" startoffset="0x054">
				<Member name="mii_usb1_rgmii_sdio" description="Multiplexing for the MII1_RXDV pin.&lt;br&gt;00: MII1_RXDV&lt;br&gt;01: GPIO3_0&lt;br&gt;11: PLL_CLKOUT3&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x054"/>
			</RegisterGroup>
			<RegisterGroup name="MII1_GPIIO_RGMII_SDIO" description="mii1_gpiio_rgmii_sdio is a multiplexing control registor for the MII1_RXD0 andMII1_RXD1 pins." value="0x00000000" startoffset="0x064">
				<Member name="mii1_gpiio_rgmii_sdio" description="Multiplexing for the MII1_RXD0 pin.&lt;br&gt;0: MII1_RXD0&lt;br&gt;1: GPIO3_1&lt;br&gt;Multiplexing for the MII1_RXD1 pin.&lt;br&gt;0: MII1_RXD1&lt;br&gt;1: GPIO3_2" range="0" property="RW"/>
				<Register offset="0x064"/>
			</RegisterGroup>
			<RegisterGroup name="MII1_RMII1_RGMII_RMII_SDIO" description="mii1_rmii1_rgmii_rmii_sdio is a multiplexing control registor for the MII1_RXCK pin." value="0x00000000" startoffset="0x068">
				<Member name="mii1_rmii1_rgmii_rmii_sdio" description="Multiplexing for the MII1_RXCK pin.&lt;br&gt;00: MII1_RXCK&lt;br&gt;01: RMII1_REFCLK&lt;br&gt;10: GPIO3_3&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x068"/>
			</RegisterGroup>
			<RegisterGroup name="MDCK_GPIO" description="mdck_gpio is a multiplexing control registor for the MDCK pin." value="0x00000000" startoffset="0x06C">
				<Member name="mdck_gpio" description="Multiplexing for the MDCK pin.&lt;br&gt;00: MDCK&lt;br&gt;01: NF_BOOT_CFG0&lt;br&gt;10: GPIO3_4&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x06C"/>
			</RegisterGroup>
			<RegisterGroup name="MDIO_GPIO" description="mdio_gpio is a multiplexing control registor for the MDIO pin." value="0x00000000" startoffset="0x070">
				<Member name="mdio_gpio" description="Multiplexing for the MDIO pin.&lt;br&gt;0: MDIO&lt;br&gt;1: GPIO3_5" range="0" property="RW"/>
				<Register offset="0x070"/>
			</RegisterGroup>
			<RegisterGroup name="LED_GPIO_SPI" description="led_gpio_spi is a multiplexing control registor for the LED_DATA and LED_CLK pins." value="0x00000000" startoffset="0x074">
				<Member name="led_gpio_spi" description="Multiplexing for the LED_DATA pin.&lt;br&gt;00: GPIO5_0&lt;br&gt;01: LED_DATA&lt;br&gt;10: SPI_SDO&lt;br&gt;11: SELF_BOOT&lt;br&gt;Multiplexing for the LED_CLK pin.&lt;br&gt;00: GPIO5_1&lt;br&gt;01: LED_CLK&lt;br&gt;10: SPI_SCLK&lt;br&gt;11: reserved" range="1:0" property="RW"/>
				<Register offset="0x074"/>
			</RegisterGroup>
			<RegisterGroup name="LED_GPIO_SATA0_HCKEN" description="led_gpio_sata0_hcken is a multiplexing control registor for the LED_CS2N pin." value="0x00000000" startoffset="0x078">
				<Member name="led_gpio_sata0_hcken" description="Multiplexing for the LED_CS2N pin.&lt;br&gt;00: GPIO5_2&lt;br&gt;01: LED_CS2N&lt;br&gt;10: SPI_SDI&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x078"/>
			</RegisterGroup>
			<RegisterGroup name="LED_GPIO_SPI_PCKEN" description="led_gpio_spi_pcken is a multiplexing control registor for the LED_CS1N pin." value="0x00000000" startoffset="0x07C">
				<Member name="led_gpio_spi_pcken" description="Multiplexing for the LED_CS1N pin.&lt;br&gt;00: GPIO5_3&lt;br&gt;01: LED_CS1N&lt;br&gt;10: SPI_CS0N&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x07C"/>
			</RegisterGroup>
			<RegisterGroup name="LED_GPIO_IR" description="led_gpio_ir is a multiplexing control registor for the LED_CS3N pin." value="0x00000000" startoffset="0x080">
				<Member name="led_gpio_ir" description="Multiplexing for the LED_CS3N pin.&lt;br&gt;00: GPIO5_4&lt;br&gt;01: LED_CS3N&lt;br&gt;10: IR_IN&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x080"/>
			</RegisterGroup>
			<RegisterGroup name="LED_GPIO_SPI_ARMEN" description="led_gpio_spi_armen is a multiplexing control registor for the LED_CS0N pin." value="0x00000000" startoffset="0x084">
				<Member name="led_gpio_spi_armen" description="Multiplexing for the LED_CS0N pin.&lt;br&gt;00: GPIO5_5&lt;br&gt;01: LED_CS0N&lt;br&gt;10: I2C0_SCL&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x084"/>
			</RegisterGroup>
			<RegisterGroup name="KEY_GPIO" description="key_gpio is a multiplexing control registor for the LED_KEY1 pin." value="0x00000000" startoffset="0x088">
				<Member name="key_gpio" description="Multiplexing for the LED_KEY1 pin.&lt;br&gt;00: GPIO5_6&lt;br&gt;01: LED_KEY1&lt;br&gt;10: I2C0_SDA&lt;br&gt;11: LED_CS4N" range="1:0" property="RW"/>
				<Register offset="0x088"/>
			</RegisterGroup>
			<RegisterGroup name="KEY_GPIO_PCIE0" description="key_gpio_pcie0 is a multiplexing control registor for the LED_KEY0 pin." value="0x00000000" startoffset="0x08C">
				<Member name="key_gpio_pcie0" description="Multiplexing for the LED_KEY0 pin.&lt;br&gt;00: GPIO5_7&lt;br&gt;01: LED_KEY0&lt;br&gt;11: LED_CS4N&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x08C"/>
			</RegisterGroup>
			<RegisterGroup name="PWROFF_GPIO" description="pwroff_gpio is a multiplexing control registor for the STANDBY_PWROFF pin." value="0x00000000" startoffset="0x090">
				<Member name="pwroff_gpio" description="Multiplexing for the STANDBY_PWROFF pin.&lt;br&gt;0: GPIO3_6&lt;br&gt;1: STANDBY_PWROFF" range="0" property="RW"/>
				<Register offset="0x090"/>
			</RegisterGroup>
			<RegisterGroup name="IR_GPIO" description="ir_gpio is a multiplexing control registor for the IR_IN pin." value="0x00000000" startoffset="0x094">
				<Member name="ir_gpio" description="Multiplexing for the IR_IN pin.&lt;br&gt;0: IR_IN&lt;br&gt;1: GPIO5_4" range="0" property="RW"/>
				<Register offset="0x094"/>
			</RegisterGroup>
			<RegisterGroup name="SIM0_GPIO_LCD_VO1120" description="sim0_gpio_lcd_vo1120 is a multiplexing control registor for the SIM0_RST pin." value="0x00000000" startoffset="0x098">
				<Member name="sim0_gpio_lcd_vo1120" description="Multiplexing for the SIM0_RST pin.&lt;br&gt;00: SIM0_RST&lt;br&gt;10: GPIO3_7&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x098"/>
			</RegisterGroup>
			<RegisterGroup name="SIM0_GPIO_LCD_VO" description="sim0_gpio_lcd_vo is a multiplexing control registor for the SIM0_PWREN, SIM0_DATA,SIM0_DET, and SIM0_CLK pins." value="0x00000000" startoffset="0x09C">
				<Member name="sim0_gpio_lcd_vo" description="Multiplexing for the SIM0_PWREN pin.&lt;br&gt;00: SIM0_PWREN&lt;br&gt;01: I2C2_SCL&lt;br&gt;10: GPIO7_4&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the SIM0_DATA pin.&lt;br&gt;00: SIM0_DATA&lt;br&gt;01: I2C2_SDA&lt;br&gt;10: GPIO7_5&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the SIM0_DET pin.&lt;br&gt;00: SIM0_DET&lt;br&gt;01: GPIO7_6&lt;br&gt;10: GPIO7_6&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the SIM0_CLK pin.&lt;br&gt;00: SIM0_CLK&lt;br&gt;01: GPIO7_7&lt;br&gt;10: GPIO7_7&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x09C"/>
			</RegisterGroup>
			<RegisterGroup name="EBIDQ_GPIO_SDIO0" description="ebidq_gpio_sdio0 is a multiplexing control registor for the EBI_DQ0 pin." value="0x00000000" startoffset="0x0E8">
				<Member name="ebidq_gpio_sdio0" description="Multiplexing for the EBI_DQ0 pin.&lt;br&gt;00: EBI_DQ0&lt;br&gt;01: GPIO4_0&lt;br&gt;10: SDIO_CDATA0&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x0E8"/>
			</RegisterGroup>
			<RegisterGroup name="EBIDQ_GPIO_SDIO1" description="ebidq_gpio_sdio1 is a multiplexing control registor for the EBI_DQ1 pin." value="0x00000000" startoffset="0x0EC">
				<Member name="ebidq_gpio_sdio1" description="Multiplexing for the EBI_DQ1 pin.&lt;br&gt;00: EBI_DQ1&lt;br&gt;01: GPIO4_1&lt;br&gt;10: SDIO_CDATA1&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x0EC"/>
			</RegisterGroup>
			<RegisterGroup name="EBIDQ_GPIO_SDIO2" description="ebidq_gpio_sdio2 is a multiplexing control registor for the EBI_DQ2 pin." value="0x00000000" startoffset="0x0F0">
				<Member name="ebidq_gpio_sdio2" description="Multiplexing for the EBI_DQ2 pin.&lt;br&gt;00: EBI_DQ2&lt;br&gt;01: GPIO4_2&lt;br&gt;10: SDIO_CDATA2&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x0F0"/>
			</RegisterGroup>
			<RegisterGroup name="EBIDQ_GPIO_SDIO3" description="ebidq_gpio_sdio3 is a multiplexing control registor for the EBI_DQ3 pin." value="0x00000000" startoffset="0x0F4">
				<Member name="ebidq_gpio_sdio3" description="Multiplexing for the EBI_DQ3 pin.&lt;br&gt;00: EBI_DQ3&lt;br&gt;01: GPIO4_3&lt;br&gt;10: SDIO_CDATA3&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x0F4"/>
			</RegisterGroup>
			<RegisterGroup name="EBIDQ_GPIO_SDIO4" description="ebidq_gpio_sdio4 is a multiplexing control registor for the EBI_DQ4 pin." value="0x00000000" startoffset="0x0F8">
				<Member name="ebidq_gpio_sdio4" description="Multiplexing for the EBI_DQ4 pin.&lt;br&gt;00: EBI_DQ4&lt;br&gt;01: GPIO4_4&lt;br&gt;10: SDIO_CDATA4&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x0F8"/>
			</RegisterGroup>
			<RegisterGroup name="EBIDQ_GPIO_SDIO5" description="ebidq_gpio_sdio5 is a multiplexing control registor for the EBI_DQ5 pin." value="0x00000000" startoffset="0x0FC">
				<Member name="ebidq_gpio_sdio5" description="Multiplexing for the EBI_DQ5 pin.&lt;br&gt;00: EBI_DQ5&lt;br&gt;01: GPIO4_5&lt;br&gt;10: SDIO_CDATA5&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x0FC"/>
			</RegisterGroup>
			<RegisterGroup name="EBIDQ_GPIO_SDIO6" description="ebidq_gpio_sdio6 is a multiplexing control registor for the EBI_DQ6 pin." value="0x00000000" startoffset="0x100">
				<Member name="ebidq_gpio_sdio6" description="Multiplexing for the EBI_DQ6 pin.&lt;br&gt;00: EBI_DQ6&lt;br&gt;01: GPIO4_6&lt;br&gt;10: SDIO_CDATA6&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x100"/>
			</RegisterGroup>
			<RegisterGroup name="EBIDQ_GPIO_SDIO7" description="ebidq_gpio_sdio7 is a multiplexing control registor for the EBI_DQ7 pin." value="0x00000000" startoffset="0x104">
				<Member name="ebidq_gpio_sdio7" description="Multiplexing for the EBI_DQ7 pin.&lt;br&gt;00: EBI_DQ7&lt;br&gt;01: GPIO4_7&lt;br&gt;10: SDIO_CDATA7&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x104"/>
			</RegisterGroup>
			<RegisterGroup name="NF_SDIO" description="nf_sdio is a multiplexing control registor for the NF_RDY0, NF_REN, NF_CS0N, NF_CLE,NF_ALE, and NF_WEN pins." value="0x00000000" startoffset="0x108">
				<Member name="nf_sdio" description="Multiplexing for the NF_RDY0 pin.&lt;br&gt;00: NF_RDY0&lt;br&gt;01: GPIO6_0&lt;br&gt;10: SDIO_CCLK_OUT&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the NF_REN pin.&lt;br&gt;00: NF_REN&lt;br&gt;01: GPIO6_1&lt;br&gt;10: SDIO_CARD_POWER_EN&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the NF_CS0N pin.&lt;br&gt;00: NF_CS0N&lt;br&gt;01: GPIO6_2&lt;br&gt;10: SDIO_CCMD&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the NF_CLE pin.&lt;br&gt;00: NF_CLE&lt;br&gt;01: GPIO6_3&lt;br&gt;10: SDIO_CWPR&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the NF_ALE pin.&lt;br&gt;00: NF_ALE&lt;br&gt;01: GPIO6_4&lt;br&gt;10: SDIO_CCMD_ODPULLUP_EN_N&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the NF_WEN pin.&lt;br&gt;00: NF_WEN&lt;br&gt;01: GPIO6_5&lt;br&gt;10: SDIO_CARD_DETECT&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x108"/>
			</RegisterGroup>
			<RegisterGroup name="SFC_GPIO_SATA_PCICLK_HDMICLK" description="sfc_gpio_sata_pciclk_hdmiclk is a multiplexing control registor for the SFC_DIO pin." value="0x00000000" startoffset="0x12C">
				<Member name="sfc_gpio_sata_pciclk_hdmiclk" description="Multiplexing for the SFC_DIO pin.&lt;br&gt;000: SFC_DIO&lt;br&gt;001: GPIO6_6&lt;br&gt;010: SIO_DOUT&lt;br&gt;011: AO_DOUT0&lt;br&gt;100: HDMI_CLKOUT0&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x12C"/>
			</RegisterGroup>
			<RegisterGroup name="SFC_GPIO_HDMICLK" description="sfc_gpio_hdmiclk is a multiplexing control registor for the SFC_WP_IO2 and SFC_DOI pin." value="0x00000000" startoffset="0x130">
				<Member name="sfc_gpio_hdmiclk" description="Multiplexing for the SFC_WP_IO2 pin.&lt;br&gt;000: SFC_WP_IO2&lt;br&gt;001: GPIO6_7&lt;br&gt;010: SIO_FSYNC&lt;br&gt;011: AO_FSCLK&lt;br&gt;100: HDMI_CLKOUT1&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the SFC_DOI pin.&lt;br&gt;000: SFC_DOI&lt;br&gt;001: GPIO7_1&lt;br&gt;010: SIO_DIN&lt;br&gt;100: HDMI_CLKOUT2&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x130"/>
			</RegisterGroup>
			<RegisterGroup name="SFC_GPIO_SATA_PCI_USBCLK" description="sfc_gpio_sata_pci_usbclk is a multiplexing control registor for the SFC_CLK pin." value="0x00000000" startoffset="0x134">
				<Member name="sfc_gpio_sata_pci_usbclk" description="Multiplexing for the SFC_CLK pin.&lt;br&gt;000: SFC_CLK&lt;br&gt;001: GPIO7_0&lt;br&gt;010: SIO_BCLK&lt;br&gt;011: AO_BCLK&lt;br&gt;100: USB_CLKOUT&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x134"/>
			</RegisterGroup>
			<RegisterGroup name="SFC_GPIO_SATACLK" description="sfc_gpio_sataclk is a multiplexing control registor for the SFC_HOLD_IO3 pin." value="0x00000000" startoffset="0x138">
				<Member name="sfc_gpio_sataclk" description="Multiplexing for the SFC_HOLD_IO3 pin.&lt;br&gt;00: SFC_HOLD_IO3&lt;br&gt;01: GPIO7_2&lt;br&gt;10: SIO_MCLK&lt;br&gt;11: AO_MCLK" range="1:0" property="RW"/>
				<Register offset="0x138"/>
			</RegisterGroup>
			<RegisterGroup name="SFC_CS1_GPIO" description="sfc_cs1_gpio is a multiplexing control registor for the SFC_CS1N pin." value="0x00000000" startoffset="0x140">
				<Member name="sfc_cs1_gpio" description="Multiplexing for the SFC_CS1N pin.&lt;br&gt;0: SFC_CS1N&lt;br&gt;1: GPIO7_3" range="0" property="RW"/>
				<Register offset="0x140"/>
			</RegisterGroup>
			<RegisterGroup name="I2C0_GPIO_QAM" description="i2c0_gpio_qam is a multiplexing control registor for the QAM_SDA and QAM_SCL pins." value="0x00000000" startoffset="0x144">
				<Member name="i2c0_gpio_qam" description="Multiplexing for the QAM_SDA pin.&lt;br&gt;00: GPIO8_1&lt;br&gt;01: QAM_SDA&lt;br&gt;10: I2C0_SDA&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the QAM_SCL pin.&lt;br&gt;00: GPIO8_2&lt;br&gt;01: QAM_SCL&lt;br&gt;10: I2C0_SCL&lt;br&gt;Other values: reserved" range="1:0" property="RW"/>
				<Register offset="0x144"/>
			</RegisterGroup>
			<RegisterGroup name="QAMAGC0_GPIO_UART3" description="qamagc0_gpio_uart3 is a multiplexing control registor for the QAM_RF_AGC pin." value="0x00000000" startoffset="0x148">
				<Member name="qamagc0_gpio_uart3" description="Multiplexing for the QAM_RF_AGC pin.&lt;br&gt;0: GPIO8_3&lt;br&gt;1: QAM_RF_AGC" range="0" property="RW"/>
				<Register offset="0x148"/>
			</RegisterGroup>
			<RegisterGroup name="QAMAGC1_GPIO_UART3" description="qamagc1_gpio_uart3 is a multiplexing control registor for the QAM_IF_AGC pin." value="0x00000000" startoffset="0x14C">
				<Member name="qamagc1_gpio_uart3" description="Multiplexing for the QAM_IF_AGC pin.&lt;br&gt;0: GPIO8_4&lt;br&gt;1: QAM_IF_AGC" range="0" property="RW"/>
				<Register offset="0x14C"/>
			</RegisterGroup>
			<RegisterGroup name="TSI0_VI0_TSI1_GPIO_AO" description="tsi0_vi0_tsi1_gpio_ao is a multiplexing control registor for the JTAG_TDI, JTAG_TCK,JTAG_TMS, and JTAG_TDO pins." value="0x00000000" startoffset="0x150">
				<Member name="tsi0_vi0_tsi1_gpio_ao" description="Multiplexing for the JTAG_TDI pin.&lt;br&gt;000: JTAG_TDI&lt;br&gt;001: TSI0_D0&lt;br&gt;010: TSI1_D7&lt;br&gt;011: GPIO8_5&lt;br&gt;100: AO_FSCLK&lt;br&gt;101: TSO_D0&lt;br&gt;111: DMX_D0&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the JTAG_TCK pin.&lt;br&gt;000: JTAG_TCK&lt;br&gt;001: TSI0_D1&lt;br&gt;010: TSI1_VALID&lt;br&gt;011: GPIO8_6&lt;br&gt;100: AO_BCLK&lt;br&gt;101: TSO_VALID&lt;br&gt;110: SPI_CS1N&lt;br&gt;111: DMX_VALID&lt;br&gt;Multiplexing for the JTAG_TMS pin.&lt;br&gt;000: JTAG_TMS&lt;br&gt;001: TSI0_D2&lt;br&gt;010: TSI1_CLK&lt;br&gt;011: GPIO8_7&lt;br&gt;100: AO_MCLK&lt;br&gt;101: TSO_CLK&lt;br&gt;110: SPI_SCLK&lt;br&gt;111: DMX_CLK&lt;br&gt;Multiplexing for the JTAG_TDO pin.&lt;br&gt;000: JTAG_TDO&lt;br&gt;001: TSI0_D3&lt;br&gt;010: TSI1_SYNC&lt;br&gt;011: GPIO9_0&lt;br&gt;100: AO_DOUT0&lt;br&gt;101: TSO_SYNC&lt;br&gt;110: SPI_SDI&lt;br&gt;111: DMX_SYNC" range="2:0" property="RW"/>
				<Register offset="0x150"/>
			</RegisterGroup>
			<RegisterGroup name="TSI0_JTAG_GPIO_AO" description="tsi0_jtag_gpio_ao is a multiplexing control registor for the JTAG_TRSTN pin." value="0x00000000" startoffset="0x154">
				<Member name="tsi0_jtag_gpio_ao" description="Multiplexing for the JTAG_TRSTN pin.&lt;br&gt;000: JTAG_TRSTN&lt;br&gt;001: TSI0_D4&lt;br&gt;010: SIM1_RST&lt;br&gt;011: GPIO9_1&lt;br&gt;100: AO_DOUT1&lt;br&gt;110: SPI_SDO&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x154"/>
			</RegisterGroup>
			<RegisterGroup name="TSI0_VI0_GPIO_AO" description="tsi0_vi0_gpio_ao is a multiplexing control registor for the TSI0_D5 and TSI0_D6 pins." value="0x00000000" startoffset="0x158">
				<Member name="tsi0_vi0_gpio_ao" description="Multiplexing for the TSI0_D5 pin.&lt;br&gt;000: GPIO9_2&lt;br&gt;001: TSI0_D5&lt;br&gt;010: SIM1_DATA&lt;br&gt;100: AO_DOUT2&lt;br&gt;101: I2C0_SCL&lt;br&gt;110: SIO_DIN&lt;br&gt;Other values: reserved&lt;br&gt;Multiplexing for the TSI0_D6 pin.&lt;br&gt;000: GPIO9_3&lt;br&gt;001: TSI0_D6&lt;br&gt;010: SIM1_DET&lt;br&gt;100: AO_DOUT3&lt;br&gt;101: I2C0_SDA&lt;br&gt;110: SIO_BCLK&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x158"/>
			</RegisterGroup>
			<RegisterGroup name="TSI0_SIM_GPIO" description="tsi0_sim_gpio is a multiplexing control registor for the TSI0_D7 pin." value="0x00000000" startoffset="0x15C">
				<Member name="tsi0_sim_gpio" description="Multiplexing for the TSI0_D7 pin.&lt;br&gt;000: GPIO9_4&lt;br&gt;001: TSI0_D7&lt;br&gt;010: SIM1_CLK&lt;br&gt;101: TSI0_SYNC&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x15C"/>
			</RegisterGroup>
			<RegisterGroup name="TSI0_SIO_GPIO" description="tsi0_sio_gpio is a multiplexing control registor for the TSI0_VALID pin." value="0x00000000" startoffset="0x160">
				<Member name="tsi0_sio_gpio" description="Multiplexing for the TSI0_VALID pin.&lt;br&gt;000: GPIO9_5&lt;br&gt;001: TSI0_VALID&lt;br&gt;010: SIM1_PWREN&lt;br&gt;101: TSI0_VALID&lt;br&gt;110: SIO_FSYNC&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x160"/>
			</RegisterGroup>
			<RegisterGroup name="TSI0_VI0_GPIO_AD" description="tsi0_vi0_gpio_ad is a multiplexing control registor for the TSI0_CLK pin." value="0x00000000" startoffset="0x164">
				<Member name="tsi0_vi0_gpio_ad" description="Multiplexing for the TSI0_CLK pin.&lt;br&gt;000: I2C2_SCL&lt;br&gt;001: TSI0_CLK&lt;br&gt;010: LCD_VS&lt;br&gt;011: GPIO9_6&lt;br&gt;100: ADC_CLKOUT&lt;br&gt;101: TSI0_CLK&lt;br&gt;110: SIO_MCLK&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x164"/>
			</RegisterGroup>
			<RegisterGroup name="TSI0_VI0_GPIO" description="tsi0_vi0_gpio is a multiplexing control registor for the TSI0_SYNC pin." value="0x00000000" startoffset="0x168">
				<Member name="tsi0_vi0_gpio" description="Multiplexing for the TSI0_SYNC pin.&lt;br&gt;000: I2C2_SDA&lt;br&gt;001: TSI0_SYNC&lt;br&gt;010: LCD_HS&lt;br&gt;011: GPIO9_7&lt;br&gt;101: TSI0_D7&lt;br&gt;110: SIO_DOUT&lt;br&gt;Other values: reserved" range="2:0" property="RW"/>
				<Register offset="0x168"/>
			</RegisterGroup>
			<RegisterGroup name="MIIRST_GPIO" description="miirst_gpio is a multiplexing control registor for the MII_RSTN pin." value="0x00000000" startoffset="0x16C">
				<Member name="miirst_gpio" description="Multiplexing for the MII_RSTN pin.&lt;br&gt;0: GPIO0_5&lt;br&gt;1: MII_RSTN" range="0" property="RW"/>
				<Register offset="0x16C"/>
			</RegisterGroup>
		</ModuleGroup>
	</ModuleList>
</Chip>
